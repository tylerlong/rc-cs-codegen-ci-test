openapi: "3.0.3"
info:
  title: "RingCentral Connect Platform API"
  description: "RingCentral Connect Platform API"
  version: "1.0.48"
  contact:
    name: "RingCentral Connect Platform"
    url: "http://developers.ringcentral.com"
    email: "platform@ringcentral.com"
  license:
    name: "RingCentral API License Agreement and Terms of Use"
    url: "https://www.ringcentral.com/legal/apilitos.html"
servers:
- url: "https://platform.ringcentral.com"
  description: "Production entry point"
- url: "https://platform.devtest.ringcentral.com"
  description: "Developer sandbox entry point"
security:
- OAuth2: []
tags:
- name: "SMS"
- name: "Greetings"
- name: "Audit Trail"
- name: "Incoming Webhooks"
- name: "Meeting Recordings"
- name: "Call Monitoring Groups"
- name: "Business Hours"
- name: "Message Exports"
  description: "External interface to export user's messages"
- name: "Message Store"
- name: "Call Forwarding"
- name: "Meeting Management"
- name: "Device SIP Registration"
- name: "Call Queues"
- name: "Posts"
- name: "Compliance Exports"
- name: "Call Handling Rules"
- name: "Phone Numbers"
- name: "API Info"
- name: "Tasks"
- name: "Line Of Business Analytics"
- name: "User Permissions"
- name: "High Volume SMS"
- name: "Internal Contacts"
- name: "Permissions"
- name: "Chats"
- name: "OAuth/OIDC"
  description: "Public OAuth 2.0 and OpenID Connect Resources"
- name: "Calendar Events"
- name: "Devices"
- name: "Conversations"
- name: "Call Control"
- name: "Company"
- name: "Call Recording Settings"
- name: "Video Configuration"
- name: "Call Log"
- name: "Fax"
- name: "User Settings"
- name: "Site Administration"
- name: "Pager Messages"
- name: "Custom Fields"
- name: "External Contacts"
- name: "RingOut"
- name: "Adaptive Cards"
- name: "Call Blocking"
- name: "Regional Settings"
- name: "Paging Only Groups"
- name: "Subscriptions"
  description: "General interface to manage subscriptions"
- name: "Presence"
- name: "Teams"
- name: "Features"
- name: "Notes"
- name: "SCIM"
- name: "Automatic Location Updates"
- name: "Meeting Configuration"
- name: "Call Recordings"
- name: "Extensions"
- name: "Profile"
- name: "Role Management"
- name: "IVR"
paths:
  /restapi:
    get:
      tags:
      - "API Info"
      summary: "Get API Versions"
      description: "Returns current API version(s) and server info."
      operationId: "readAPIVersions"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVersionsResponse"
      x-api-group: "restapi"
      x-source-file: "rc-platform-api-info.yml"
      x-availability: "High"
      x-throttling-group: "NoThrottling"
  /restapi/oauth/token:
    post:
      tags:
      - "OAuth/OIDC"
      summary: "Get OAuth Token"
      description: "Returns access (and potentially refresh) tokens for making API\
        \ requests.\n\nDepending on client application type\nrequests to this endpoint\
        \ may require authentication with HTTP Basic scheme\nusing registered client\
        \ ID and client secret as login and password, correspondingly.\n"
      operationId: "getToken"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                username:
                  type: "string"
                  description: "Phone number linked to an account or extension in\
                    \ E.164 format with or without leading '+' sign"
                password:
                  type: "string"
                  description: "User's password"
                  format: "password"
                extension:
                  type: "string"
                  description: "Optional. Extension short number. If company number\
                    \ is specified as a username, and extension is not specified,\
                    \ the server will attempt to authenticate client as main company\
                    \ administrator"
                grant_type:
                  type: "string"
                  description: "Grant type"
                  default: "password"
                  enum:
                  - "authorization_code"
                  - "password"
                  - "refresh_token"
                  - "client_credentials"
                  - "rc_login_hash"
                  - "urn:ietf:params:oauth:grant-type:jwt-bearer"
                  - "urn:ietf:params:oauth:grant-type:device_code"
                code:
                  type: "string"
                  description: "Authorization code"
                redirect_uri:
                  type: "string"
                  description: "This is a callback URI which determines where the\
                    \ response is sent. The value of this parameter must exactly match\
                    \ one of the URIs you have provided for your app upon registration"
                access_token_ttl:
                  maximum: 3600
                  minimum: 600
                  type: "integer"
                  description: "Access token lifetime in seconds"
                  format: "int32"
                  default: 3600
                refresh_token_ttl:
                  maximum: 604800
                  type: "integer"
                  description: "Refresh token lifetime in seconds"
                  format: "int32"
                  default: 604800
                scope:
                  type: "string"
                  description: "List of API permissions to be used with access token.\
                    \ Can be omitted when requesting all permissions defined during\
                    \ the application registration phase"
                refresh_token:
                  type: "string"
                  description: "Previously issued refresh token. This is the only\
                    \ formData field used for the Refresh Token Flow."
                endpoint_id:
                  type: "string"
                  description: "The unique identifier of a client application. If\
                    \ not specified, the previously specified or auto generated value\
                    \ is used by default"
                pin:
                  type: "string"
                client_id:
                  type: "string"
                account_id:
                  type: "string"
                partner_account_id:
                  type: "string"
                client_assertion_type:
                  type: "string"
                client_assertion:
                  type: "string"
                assertion:
                  type: "string"
                brand_id:
                  type: "string"
                code_verifier:
                  type: "string"
                device_code:
                  type: "string"
      responses:
        "200":
          description: "Access/Refresh Tokens"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenInfo"
        "400":
          description: "Possible responses:\n1. invalid_request: Unsupported grant\
            \ type\n2. invalid_client: Bad Application Release Status: Blocked\n"
        "415":
          description: "Unsupported Media Type"
        "429":
          description: "Request rate exceeded"
      x-api-group: "oauth/token"
      x-throttling-group: "Auth"
  /restapi/oauth/authorize:
    get:
      tags:
      - "OAuth/OIDC"
      summary: "OAuth 2.0 Authorization"
      description: "Performs OAuth 2.0 authorization (GET version)"
      operationId: "authorize"
      responses:
        "302":
          description: "Found"
      x-api-group: "oauth/authorize"
      x-throttling-group: "Auth"
    post:
      tags:
      - "OAuth/OIDC"
      summary: "OAuth 2.0 Authorization (POST)"
      description: "Performs OAuth 2.0 authorization (POST version)"
      operationId: "authorize2"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - "client_id"
              - "redirect_uri"
              - "response_type"
              properties:
                response_type:
                  type: "string"
                  description: "Determines authorization flow: **code** - Authorization\
                    \ Code, **token** - Implicit Grant"
                  enum:
                  - "code"
                  - "token"
                redirect_uri:
                  type: "string"
                  description: "This is a callback URI which determines where the\
                    \ response is sent. The value of this parameter must exactly match\
                    \ one of the URIs you have provided for your app upon registration"
                client_id:
                  type: "string"
                  description: "Identifier (key) of a client application"
                state:
                  type: "string"
                  description: "Client state. Returned back to the client at the end\
                    \ of the flow"
                brand_id:
                  type: "string"
                  description: "Brand identifier. If it is not provided in request,\
                    \ server will try to determine brand from client app profile.\
                    \ The default value is '1210' - RingCentral US"
                display:
                  type: "string"
                  description: "Style of login form. The default value is 'page'.\
                    \ The 'popup' and 'touch' values are featured for mobile applications"
                  enum:
                  - "page"
                  - "popup"
                  - "touch"
                  - "mobile"
                prompt:
                  type: "string"
                  description: "Specifies which login form will be displayed. Space-separated\
                    \ set of the following values: 'login' - official RingCentral\
                    \ login form, 'sso' - Single Sign-On login form, 'consent' - form\
                    \ to show the requested scope and prompt user for consent. Either\
                    \ 'login' or 'sso' (or both) must be specified. The default value\
                    \ is 'login&sso'"
                  enum:
                  - "login"
                  - "sso"
                  - "consent"
                localeId:
                  type: "string"
                  description: "Localization code of a language. Overwrites 'Accept-Language'\
                    \ header value"
                ui_locales:
                  type: "string"
                  description: "Localization code of a language. Overwrites 'localeId'\
                    \ parameter value"
                ui_options:
                  type: "string"
                  description: "User interface options data"
                  enum:
                  - "hide_logo"
                  - "hide_tos"
                  - "hide_remember_me"
                  - "external_popup"
                  - "old_ui"
                scope:
                  type: "string"
                accept_language:
                  type: "string"
                request:
                  type: "string"
                request_uri:
                  type: "string"
                nonce:
                  type: "string"
                code_challenge:
                  type: "string"
                code_challenge_method:
                  type: "string"
                  enum:
                  - "plain"
                  - "S256"
      responses:
        "302":
          description: "Found"
      x-api-group: "oauth/authorize"
      x-throttling-group: "Auth"
  /restapi/oauth/revoke:
    post:
      tags:
      - "OAuth/OIDC"
      summary: "Revoke Token"
      description: "Revokes previously issued access and refresh token.\n\nDepending\
        \ on client application type\nrequests to this endpoint may require authentication\
        \ with HTTP Basic scheme\nusing registered client ID and client secret as\
        \ login and password, correspondingly.\n"
      operationId: "revokeToken"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - "token"
              properties:
                client_assertion_type:
                  type: "string"
                client_assertion:
                  type: "string"
                token:
                  type: "string"
                  description: "Active access or refresh token to be revoked"
        required: true
      responses:
        "200":
          description: "OK"
      x-api-group: "oauth/revoke"
      x-throttling-group: "Auth"
  /restapi/v1.0/account/{accountId}:
    get:
      tags:
      - "Company"
      summary: "Get Account Info"
      description: "Returns basic information about a particular RingCentral customer\
        \ account."
      operationId: "readAccountInfo"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountInfoResponse"
      x-api-group: "account"
      x-throttling-group: "Light"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
  /restapi/v1.0/account/{accountId}/business-hours:
    get:
      tags:
      - "Business Hours"
      summary: "Get Company Business Hours"
      description: "Returns the company business hours schedule. Business hours (and\
        \ After hours - all the remaining time) schedules are commonly used for setting\
        \ call handling rules - `business-hours-rule` and `after-hours-rule` correspondingly."
      operationId: "readCompanyBusinessHours"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyBusinessHours"
      x-api-group: "extension/answering-rule"
      x-throttling-group: "Light"
      x-feature: "ReadExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserAnsweringRules"
    put:
      tags:
      - "Business Hours"
      summary: "Update Company Business Hours"
      description: "Updates the company business hours schedule."
      operationId: "updateCompanyBusinessHours"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyBusinessHoursUpdateRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyBusinessHours"
      x-api-group: "extension/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserAnsweringRules"
  /restapi/v1.0/account/{accountId}/device/{deviceId}:
    get:
      tags:
      - "Devices"
      summary: "Get Device"
      description: "Returns account device(s) by their ID(s)."
      operationId: "readDevice"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "deviceId"
        in: "path"
        description: "Internal identifier of a device"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "syncEmergencyAddress"
        in: "query"
        description: "Specifies if emergency address should be synchronized or not"
        schema:
          type: "boolean"
          default: false
      responses:
        default:
          description: "Account Device(s) Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeviceInfoResponse"
      x-api-group: "account/device"
      x-throttling-group: "Light"
      x-feature: "ReadAccountDevices"
      x-source-file: "rc-platform-device-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyDevices"
    put:
      tags:
      - "Devices"
      summary: "Update Device"
      description: "Updates account device(s) by their ID(s)."
      operationId: "updateDevice"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "prestatement"
        in: "query"
        schema:
          type: "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountDeviceUpdate"
        required: false
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeviceInfoResponse"
      x-api-group: "account/device"
      x-throttling-group: "Medium"
      x-feature: "EditAccountDevices"
      x-source-file: "rc-platform-device-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyDevices"
  /restapi/v1.0/account/{accountId}/device/{deviceId}/sip-info:
    get:
      tags:
      - "Devices"
      summary: "Get Device SIP Info"
      operationId: "readDeviceSIPInfo"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Internal identifier of a device"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Device SIP Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SipInfoResource"
      x-api-group: "account/device"
      x-throttling-group: "Light"
      x-feature: "ReadAccountDevices"
      x-source-file: "rc-platform-device-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyDevices"
  /restapi/v1.0/account/{accountId}/custom-fields:
    get:
      tags:
      - "Custom Fields"
      summary: "Get Custom Field List"
      description: "Returns the list of created custom fields."
      operationId: "listCustomFields"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Custom Field List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomFieldsResource"
      x-api-group: "account/custom-fields/get"
      x-throttling-group: "Light"
      x-feature: "EditUsers"
      x-source-file: "rc-platform-custom-fields.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserInfo"
    post:
      tags:
      - "Custom Fields"
      summary: "Create Custom Field"
      description: "Creates custom field attached to the object."
      operationId: "createCustomField"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomFieldCreateRequest"
        required: false
      responses:
        "200":
          description: "Custom Field"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomFieldResource"
      x-api-group: "account/custom-fields/create"
      x-throttling-group: "Light"
      x-feature: "EditUsers"
      x-source-file: "rc-platform-custom-fields.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "Users"
  /restapi/v1.0/account/{accountId}/custom-fields/{fieldId}:
    put:
      tags:
      - "Custom Fields"
      summary: "Update Сustom Field"
      description: "Updates custom field by ID specified in path."
      operationId: "updateCustomField"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "fieldId"
        in: "path"
        description: "Custom field identifier"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomFieldUpdateRequest"
        required: false
      responses:
        "200":
          description: "Custom Field"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomFieldResource"
      x-api-group: "account/custom-fields/update"
      x-throttling-group: "Light"
      x-feature: "EditUsers"
      x-source-file: "rc-platform-custom-fields.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "Users"
    delete:
      tags:
      - "Custom Fields"
      summary: "Delete Custom Field"
      description: "Deletes custom field(s) by ID(s) with the corresponding values."
      operationId: "deleteCustomField"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "fieldId"
        in: "path"
        description: "Custom field identifier"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/custom-fields/delete"
      x-throttling-group: "Light"
      x-feature: "EditUsers"
      x-source-file: "rc-platform-custom-fields.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "Users"
  /restapi/v1.0/account/{accountId}/call-recording:
    get:
      tags:
      - "Call Recording Settings"
      summary: "Get Call Recording Settings"
      description: "Returns call recording settings."
      operationId: "readCallRecordingSettings"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallRecordingSettingsResource"
      x-api-group: "account/call-recording"
      x-throttling-group: "Light"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
    put:
      tags:
      - "Call Recording Settings"
      summary: "Update Call Recording Settings"
      description: "Updates current call recording settings."
      operationId: "updateCallRecordingSettings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallRecordingSettingsResource"
        required: false
      responses:
        "200":
          description: "OK: Updated Call Recording Settings"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallRecordingSettingsResource"
      x-api-group: "account/call-recording"
      x-throttling-group: "Medium"
      x-feature: "EditCompanyInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyInfo"
  /restapi/v1.0/account/{accountId}/call-recording/custom-greetings:
    get:
      tags:
      - "Call Recording Settings"
      summary: "Get Call Recording Custom Greeting List"
      description: "Returns call recording custom greetings."
      operationId: "listCallRecordingCustomGreetings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "type"
        in: "query"
        schema:
          type: "string"
          enum:
          - "StartRecording"
          - "StopRecording"
          - "AutomaticRecording"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallRecordingCustomGreetings"
      x-api-group: "account/call-recording/custom-greetings"
      x-throttling-group: "Medium"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
    delete:
      tags:
      - "Call Recording Settings"
      summary: "Delete Call Recording Custom Greeting List"
      description: "Deletes call recording custom greetings."
      operationId: "deleteCallRecordingCustomGreetingList"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/call-recording/custom-greetings"
      x-throttling-group: "Medium"
      x-feature: "EditCompanyInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyInfo"
  /restapi/v1.0/account/{accountId}/call-recording/custom-greetings/{greetingId}:
    delete:
      tags:
      - "Call Recording Settings"
      summary: "Delete Call Recording Custom Greeting"
      description: "Deletes call recording custom greeting(s)."
      operationId: "deleteCallRecordingCustomGreeting"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "greetingId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content: {}
      x-api-group: "account/call-recording/custom-greetings"
      x-throttling-group: "Medium"
      x-feature: "EditCompanyInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyInfo"
  /restapi/v1.0/account/{accountId}/call-recording/bulk-assign:
    post:
      tags:
      - "Call Recording Settings"
      summary: "Update Call Recording Extension List"
      description: "Creates or updates the list of extensions to be recorded."
      operationId: "updateCallRecordingExtensionList"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkAccountCallRecordingsResource"
        required: true
      responses:
        "200":
          description: "Success"
          content: {}
      x-api-group: "account/call-recording/bulk-assign"
      x-throttling-group: "Medium"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
  /restapi/v1.0/account/{accountId}/call-recording/extensions:
    get:
      tags:
      - "Call Recording Settings"
      summary: "Get Call Recording Extension List"
      description: "Returns the list of extensions to be recorded."
      operationId: "listCallRecordingExtensions"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Extension List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallRecordingExtensions"
      x-api-group: "account/call-recording/extensions"
      x-throttling-group: "Medium"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
  /restapi/v1.0/account/{accountId}/telephony/call-out:
    post:
      tags:
      - "Call Control"
      summary: "Make CallOut"
      description: "Creates a new outbound call out session. Currently this method\
        \ is supported for Softphone/Hardphone only, since device IDs for WebRTC/Mobile\
        \ apps cannot be obtained."
      externalDocs:
        description: "Find more info about body and response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Sessions/op_session_add_CallOut"
      operationId: "createCallOutCallSession"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakeCallOutRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallSession"
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/call-out"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Heavy"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/conference:
    post:
      tags:
      - "Call Control"
      summary: "Start Conference Call Session"
      description: "Initiates a conference call session."
      externalDocs:
        description: "Find more info about body and response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Sessions/op_session_add_Conference"
      operationId: "createConferenceCallSession"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallSessionObject"
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/conference"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Heavy"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}:
    get:
      tags:
      - "Call Control"
      summary: "Get Call Session Status"
      description: "Returns the status of a call session by ID."
      operationId: "readCallSessionStatus"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "timestamp"
        in: "query"
        description: "The date and time of a call session latest change"
        schema:
          type: "string"
      - name: "timeout"
        in: "query"
        description: "The time frame of awaiting for a status change before sending\
          \ the resulting one in response"
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallSessionObject"
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
    delete:
      tags:
      - "Call Control"
      summary: "Drop Call Session"
      description: "Drops a call session."
      operationId: "deleteCallSession"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/bring-in:
    post:
      tags:
      - "Call Control"
      summary: "Bring-In Call Party"
      description: "Adds a new party to the call session by bringing-in an established\
        \ SIP call connection. The maximum number of parties to bring-in is 10; only\
        \ 1 call party can be added per request. Currently the method is supported\
        \ for sessions of 'Conference' origin only."
      externalDocs:
        description: "Find more info about body and response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Add_Party/op_parties_add_bringIn"
      operationId: "createCallPartyWithBringIn"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPartyRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/bring-in"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}:
    get:
      tags:
      - "Call Control"
      summary: "Get Call Party Status"
      description: "Returns a call party status by ID."
      externalDocs:
        description: "Find more info about response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Parties/op_party_get"
      operationId: "readCallPartyStatus"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
    delete:
      tags:
      - "Call Control"
      summary: "Delete Call Party"
      description: "Removes a party from a call session by ID. A party can be deleted\
        \ only if supervised or parked. It is possible to delete only one conference\
        \ participant per request."
      operationId: "deleteCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "TelephonySessions"
    patch:
      tags:
      - "Call Control"
      summary: "Update Call Party"
      description: "Modifies a call party by ID. There is a known limitation for Mute\
        \ scenario - mute via REST API doesn't work with mute placed via RingCentral\
        \ apps or HardPhone. It means that if you muted participant via Call Control\
        \ API and Ringcentral Desktop app you need to unmute both endpoints to bring\
        \ the media back."
      operationId: "updateCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartyUpdateRequest"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/unhold:
    post:
      tags:
      - "Call Control"
      summary: "Unhold Call Party"
      description: "Brings a party back into a call and stops to play Hold Music.\
        \ There is a known limitation for Hold API - hold via REST API doesn't work\
        \ with hold placed via RingCentral apps or HardPhone. It means that if you\
        \ muted participant via Call Control API and RingCentral Desktop app, then\
        \ you need to unhold both endpoints to remove Hold Music and bring media back."
      externalDocs:
        description: "Find more info about response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Parties/op_party_unhold"
      operationId: "unholdCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/unhold"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/park:
    post:
      tags:
      - "Call Control"
      summary: "Call Park"
      description: "Parks a call to a virtual location from where it can further be\
        \ retrieved by any user from any phone of the system. The call session and\
        \ call party identifiers should be specified in path. Currently the users\
        \ can park only their own incoming calls. Up to 50 calls can be parked simultaneously.\
        \ Park location starts with asterisk (*) and ranges 801-899."
      externalDocs:
        description: "Find more info about body and response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+11.0#/Parties/op_party_park"
      operationId: "callParkParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/park"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/flip:
    post:
      tags:
      - "Call Control"
      summary: "Call Flip on Party"
      description: "Performs call flip procedure by holding opposite party and calling\
        \ to the specified target"
      externalDocs:
        description: "Find more info about body and response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Parties/op_party_flip"
      operationId: "callFlipParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallPartyFlip"
        required: true
      responses:
        "200":
          description: "Success"
          content: {}
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/flip"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/reply:
    post:
      tags:
      - "Call Control"
      summary: "Reply with Text"
      description: "Replies with text/pattern without picking up a call."
      operationId: "replyParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallPartyReply"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Server is unable to process request just now"
          content: {}
      x-api-group: "telephony/sessions/parties/reply"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/bridge:
    post:
      tags:
      - "Call Control"
      summary: "Bridge Call Party"
      description: "Allows the user to connect multiple call session participants\
        \ over a conference call bridge. The current active call session ID and party\
        \ ID of the user within this session should be specified in path; the bridged\
        \ call session ID and party ID of the user within that session should be specified\
        \ in request body. Thus the user connects participants of two sessions into\
        \ one conference call using his/her own party IDs from both sessions."
      operationId: "bridgeCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Defines target call session and call party to be bridged"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BridgeTargetRequest"
        required: true
      responses:
        "200":
          description: "Bridged Call Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/bridge"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/ignore:
    post:
      tags:
      - "Call Control"
      summary: "Ignore Call in Queue"
      description: "Ignores a call to a call queue agent in `Setup` or `Proceeding`\
        \ state."
      externalDocs:
        description: "Find more info about body and response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+19.2#/Parties/op_party_ignore"
      operationId: "ignoreCallInQueue"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IgnoreRequestBody"
        required: true
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
      x-api-group: "telephony/sessions/parties/ignore"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/supervise:
    post:
      tags:
      - "Call Control"
      summary: "Supervise Call Party"
      description: "Allows to monitor a call party in 'Listen' mode. Input parameters\
        \ are extension number of a monitored user and internal identifier of a supervisor's\
        \ device. Call session and party identifiers should be specified in path.\
        \ Please note that for this method dual channel audio flow is supported, which\
        \ means that you need to make one more request for monitoring the second participant\
        \ of a call. And as a result of each monitoring request the client receives\
        \ SIP invite with the following header `p-rc-api-monitoring-ids` containing\
        \ IDs of the monitored party and session. The flow is supported for calls\
        \ with no more than 2 participants. Currently this method is supported for\
        \ Softphone/Hardphone only, since device IDs for WebRTC/Mobile apps cannot\
        \ be obtained."
      operationId: "superviseCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartySuperviseRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartySuperviseResponse"
        "400":
          description: "Bad Request"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/supervise"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/reject:
    post:
      tags:
      - "Call Control"
      summary: "Reject Call Party"
      description: "Rejects an inbound call in a \"Setup\" or \"Proceeding\" state"
      operationId: "rejectParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/reject"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/recordings:
    post:
      tags:
      - "Call Control"
      summary: "Create Recording"
      description: "Starts a new call recording for the party"
      externalDocs:
        description: "Find more info about response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Parties/op_party_addRecording"
      operationId: "startCallRecording"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      responses:
        "201":
          description: "Created"
          content: {}
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/recordings"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/recordings/{recordingId}:
    patch:
      tags:
      - "Call Control"
      summary: "Pause/Resume Recording"
      description: "Pause/resume recording"
      externalDocs:
        description: "Find more info about response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Parties/op_party_modifyRecording"
      operationId: "pauseResumeCallRecording"
      parameters:
      - name: "brandId"
        in: "query"
        description: "Identifies a brand of a logged in user or a brand of a sign-up\
          \ session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      - name: "recordingId"
        in: "path"
        description: "Internal identifier of a recording"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallRecordingUpdate"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallRecording"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/recordings"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/answer:
    post:
      tags:
      - "Call Control"
      summary: "Answer Call Party"
      description: "Answers a call on a certain device by passing the corresponding\
        \ device ID in request body. Supported for call forwarding, call transfer,\
        \ call flip and call queues."
      operationId: "answerCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Distributes a non-answered call to the defined target. Only\
          \ a single target is allowed"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerTarget"
        required: true
      responses:
        "200":
          description: "Call Session Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/answer"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/transfer:
    post:
      tags:
      - "Call Control"
      summary: "Transfer Call Party"
      description: "Transfers an answered call to the specified call party. Applicable\
        \ for a call session in \"Answered\" or \"Hold\" state."
      operationId: "transferCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Specifies a call party to which the call will be transfered.\
          \ Only a single call party is allowed."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferTarget"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/transfer"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/hold:
    post:
      tags:
      - "Call Control"
      summary: "Hold Call Party"
      description: "Puts the party to stand-alone mode and starts to play Hold Music\
        \ according to configuration & state to peers. There is a known limitation\
        \ for Hold API - hold via REST API doesn't work with hold placed via RingCentral\
        \ apps or HardPhone. It means that if you muted participant via Call Control\
        \ API and RingCentral Desktop app, then you need to unhold both endpoints\
        \ to remove Hold Music and bring media back."
      operationId: "holdCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/hold"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/pickup:
    post:
      tags:
      - "Call Control"
      summary: "Pickup Call"
      description: "Picks up a call parked to the specified park location."
      operationId: "pickupCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Distributes a non-answered call to the defined target. Only\
          \ a single target is allowed"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PickupTarget"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
      x-api-group: "telephony/sessions/parties/pickup"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/forward:
    post:
      tags:
      - "Call Control"
      summary: "Forward Call Party"
      description: "Forwards a non-answered incoming call to the specified call party.\
        \ Applicable for a call session in \"Setup\" or \"Proceeding\" state."
      externalDocs:
        description: "Find more info about body and response format"
        url: "https://wiki.ringcentral.com/display/TA/Telephony+Platform+API+-+TAS+10.2#/Parties/op_party_forward"
      operationId: "forwardCallParty"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      - name: "partyId"
        in: "path"
        description: "Internal identifier of a call party"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Specifies a call party to which the call will be forwarded.\
          \ Only a single call party is allowed."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForwardTarget"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallParty"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "409":
          description: "Conflict"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions/parties/forward"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/telephony/sessions/{telephonySessionId}/supervise:
    post:
      tags:
      - "Call Control"
      summary: "Supervise Call Session"
      description: "Allows to monitor a call session in 'Listen' mode. Input parameters\
        \ should contain internal identifiers of a monitored user and a supervisor's\
        \ device. Call session should be specified in path. Please note that this\
        \ method supports single channel audio flow, which means that audio of both\
        \ call participants is mixed and delivered to the supervisor in single audio\
        \ channel. Currently this method is supported for Softphone/Hardphone only,\
        \ since device IDs for WebRTC/Mobile apps cannot be obtained."
      operationId: "superviseCallSession"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "telephonySessionId"
        in: "path"
        description: "Internal identifier of a call session"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuperviseCallSessionRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuperviseCallSession"
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "500":
          description: "Internal Server Error"
          content: {}
        "503":
          description: "Service Temporary Unavailable"
          content: {}
      x-api-group: "telephony/sessions"
      x-source-file: "rc-telephony.yml"
      x-throttling-group: "Light"
      x-app-permission: "CallControl"
  /restapi/v1.0/account/{accountId}/service-info:
    get:
      tags:
      - "Company"
      summary: "Get Account Service Info"
      description: "Returns the information about service plan, available features\
        \ and limitations for a particular RingCentral customer account."
      operationId: "readAccountServiceInfo"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceInfoResponse"
      x-api-group: "account/service-info"
      x-throttling-group: "Light"
      x-feature: "ReadServicePlan"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadServicePlanInfo"
  /restapi/v1.0/account/{accountId}/call-log:
    get:
      tags:
      - "Call Log"
      summary: "Get Company Call Log Records"
      description: "Returns call log records filtered by parameters specified."
      operationId: "readCompanyCallLog"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionNumber"
        in: "query"
        description: "Extension number of a user. If specified, returns call log for\
          \ a particular extension only"
        schema:
          type: "string"
      - name: "phoneNumber"
        in: "query"
        description: "Phone number of a caller/callee in e.164 format without a plus\
          \ sign '+'. If specified, all incoming and outgoing calls with this phone\
          \ number are returned. Cannot be specified together with the `extensionNumber`\
          \ filter"
        schema:
          type: "string"
        example: "12053320033"
      - name: "direction"
        in: "query"
        description: "The direction for the result records. If not specified, both\
          \ inbound and outbound records are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Inbound"
            - "Outbound"
      - name: "type"
        in: "query"
        description: "Call type of a record. If not specified, all call types are\
          \ returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Voice"
            - "Fax"
      - name: "view"
        in: "query"
        description: "View of call records. The same view parameter specified for\
          \ FSync will be applied for ISync, the view cannot be changed for ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "withRecording"
        in: "query"
        description: "**Deprecated**. Supported for compatibility reasons only. `true`\
          \ if only recorded calls are returned. The default value is `false`. If\
          \ both `withRecording` and `recordingType` are specified, `withRecording`\
          \ is ignored"
        schema:
          type: "boolean"
      - name: "recordingType"
        in: "query"
        description: "Type of a call recording. If not specified, then calls without\
          \ recordings are also returned"
        schema:
          type: "string"
          enum:
          - "Automatic"
          - "OnDemand"
          - "All"
      - name: "dateFrom"
        in: "query"
        description: "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
          \  format including timezone, for example 2016-03-10T18:07:52.534Z. The\
          \ default value is dateTo minus 24 hours"
        schema:
          type: "string"
          format: "date-time"
      - name: "dateTo"
        in: "query"
        description: "The end datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
          \  format including timezone, for example 2016-03-10T18:07:52.534Z. The\
          \ default value is current time"
        schema:
          type: "string"
          format: "date-time"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "sessionId"
        in: "query"
        description: "Internal identifier of a call session"
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCallLogResponse"
      x-api-group: "account/call-log"
      x-throttling-group: "Heavy"
      x-feature: "ReadAccountCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallLog"
      x-user-permission: "FullCompanyCallLog"
  /restapi/v1.0/account/{accountId}/call-log/{callRecordId}:
    get:
      tags:
      - "Call Log"
      summary: "Get Company Call Log Record(s)"
      description: "Returns individual call log record(s) by ID(s). Batch request\
        \ is supported."
      operationId: "readCompanyCallRecord"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "callRecordId"
        in: "path"
        description: "Internal identifier of a call log record"
        required: true
        schema:
          type: "string"
      - name: "view"
        in: "query"
        description: "View of call records. The view value specified for 'FSync' will\
          \ also be applied for 'ISync' by default, since it cannot be changed for\
          \ ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyCallLogRecord"
      x-api-group: "account/call-log"
      x-throttling-group: "Heavy"
      x-feature: "ReadAccountCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallLog"
      x-user-permission: "FullCompanyCallLog"
  /restapi/v1.0/account/{accountId}/call-log-sync:
    get:
      tags:
      - "Call Log"
      summary: "Sync Company Call Log"
      description: "Synchronizes company call log records."
      operationId: "syncAccountCallLog"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "syncType"
        in: "query"
        description: "Type of synchronization."
        schema:
          type: "string"
          default: "FSync"
          enum:
          - "FSync"
          - "ISync"
      - name: "syncToken"
        in: "query"
        description: "Value of syncToken property of last sync request response"
        schema:
          type: "string"
      - name: "dateFrom"
        in: "query"
        description: "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
          \  format including timezone, for example 2016-03-10T18:07:52.534Z. The\
          \ default value is the current moment"
        schema:
          type: "string"
          format: "date-time"
      - name: "recordCount"
        in: "query"
        description: "For 'FSync' the parameter is mandatory, it limits the number\
          \ of records to be returned in response. For 'ISync' it specifies with how\
          \ many records to extend sync frame to the past, the maximum number of records\
          \ is 250"
        schema:
          type: "integer"
      - name: "statusGroup"
        in: "query"
        description: "Type of calls to be returned."
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
          enum:
          - "Missed"
          - "All"
      - name: "view"
        in: "query"
        description: "View of call records. The same view parameter specified for\
          \ FSync will be applied for ISync, the view cannot be changed for ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "showDeleted"
        in: "query"
        description: "Supported for ISync. If 'True' then deleted call records are\
          \ returned"
        schema:
          type: "boolean"
          default: false
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCallLogSyncResponse"
      x-api-group: "account/call-log-sync"
      x-throttling-group: "Heavy"
      x-feature: "ReadAccountCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallLog"
      x-user-permission: "ReadCallLog"
  /restapi/v1.0/account/{accountId}/active-calls:
    get:
      tags:
      - "Call Log"
      summary: "Get Company Active Calls"
      description: "Returns records of all calls that are in progress, ordered by\
        \ start time in descending order."
      operationId: "listCompanyActiveCalls"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "direction"
        in: "query"
        description: "The direction for the result records. If not specified, both\
          \ inbound and outbound records are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Inbound"
            - "Outbound"
      - name: "view"
        in: "query"
        description: "View of call records. The same view parameter specified for\
          \ FSync will be applied for ISync, the view cannot be changed for ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "type"
        in: "query"
        description: "Call type of a record. If not specified, all call types are\
          \ returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Voice"
            - "Fax"
      - name: "transport"
        in: "query"
        description: "Call transport type. 'PSTN' specifies that a call leg is initiated\
          \ from the PSTN network provider; 'VoIP' - from an RC phone. By default\
          \ this filter is disabled"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "PSTN"
            - "VoIP"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyActiveCallsResponse"
      x-api-group: "account/active-calls"
      x-throttling-group: "Heavy"
      x-feature: "EditAccountCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "Limited"
      x-app-permission: "ReadCallLog"
      x-user-permission: "ReadCallLog"
  /restapi/v1.0/account/{accountId}/extension-bulk-update:
    post:
      tags:
      - "Extensions"
      summary: "Update Multiple Extensions"
      description: "Updates multiple extensions at once. Maximum 500 extensions can\
        \ be updated per request."
      operationId: "extensionBulkUpdate"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtensionBulkUpdateRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionBulkUpdateTaskResource"
      x-api-group: "account/extension-bulk-update"
      x-throttling-group: "Heavy"
      x-feature: "EditExtensionInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditExtensionInfo"
  /restapi/v1.0/account/{accountId}/extension-bulk-update/tasks/{taskId}:
    get:
      tags:
      - "Extensions"
      summary: "Get Update Task Status"
      description: "Returns the status of multiple extension update task"
      operationId: "getExtensionBulkUpdateTask"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionBulkUpdateTaskResource"
      x-api-group: "account/extension-bulk-update"
      x-throttling-group: "Light"
      x-feature: "EditExtensionInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditExtensionInfo"
  /restapi/v1.0/account/{accountId}/templates:
    get:
      tags:
      - "Extensions"
      summary: "Get User Template List"
      description: "Returns the list of user templates for the current account."
      operationId: "listUserTemplates"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "type"
        in: "query"
        schema:
          type: "string"
          enum:
          - "UserSettings"
          - "CallHandling"
      - name: "page"
        in: "query"
        schema:
          type: "string"
      - name: "perPage"
        in: "query"
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTemplates"
      x-api-group: "account/templates"
      x-throttling-group: "Medium"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
  /restapi/v1.0/account/{accountId}/templates/{templateId}:
    get:
      tags:
      - "Extensions"
      summary: "Get User Template"
      description: "Returns the user template by ID."
      operationId: "readUserTemplate"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "templateId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateInfo"
      x-api-group: "account/templates"
      x-throttling-group: "Light"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
  /restapi/v1.0/account/{accountId}/a2p-sms/statuses:
    get:
      tags:
      - "High Volume SMS"
      summary: "List A2P SMS Statuses"
      description: "Retrieves a set of message counts by message status and error\
        \ codes filtered by dates, batchId and message direction."
      operationId: "aggregateA2PSMSStatuses"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - $ref: "#/components/parameters/QueryBatchId"
      - $ref: "#/components/parameters/SmsDirection"
      - $ref: "#/components/parameters/SmsDateFrom"
      - $ref: "#/components/parameters/SmsDateTo"
      - name: "phoneNumber"
        in: "query"
        required: false
        style: "form"
        explode: true
        description: "List of phone numbers (specified in 'to' or 'from' fields of\
          \ a message) to filter the results. Maximum number of phone numbers allowed\
          \ to be specified as filters is 15"
        schema:
          type: "array"
          items:
            type: "string"
        example:
        - "15551234455"
        - "15551235577"
      responses:
        "200":
          description: "The statuses of the messages sent by the account filtered\
            \ by criteria specified in the query"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStatusesResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-110:
                  value:
                    errorCode: "CMN-110"
                    message: "Header ${parameterName} should be specified"
                CMN-407:
                  value:
                    errorCode: "CMN-407"
                    message: "Parameter in header is invalid"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
        "404":
          description: "No resource found for the account"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-102"
                message: "Resource for parameter [${parameterName}] is not found."
        "500":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/statuses"
      x-feature: "SMSSending"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
  /restapi/v1.0/account/{accountId}/a2p-sms/messages:
    get:
      tags:
      - "High Volume SMS"
      summary: "Get A2P SMS List"
      description: "Returns the list of outbound/inbound A2P messages sent from/to\
        \ A2P phone numbers of the current account. The list can be filtered by message\
        \ batch ID and/or phone number."
      operationId: "listA2PSMS"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - $ref: "#/components/parameters/QueryBatchId"
      - $ref: "#/components/parameters/SmsDirection"
      - $ref: "#/components/parameters/SmsDateFrom"
      - $ref: "#/components/parameters/SmsDateTo"
      - name: "view"
        in: "query"
        required: false
        description: "Indicates if the response has to be detailed, includes text\
          \ in the response if detailed"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "phoneNumber"
        in: "query"
        required: false
        style: "form"
        explode: true
        description: "List of phone numbers (specified in 'to' or 'from' fields of\
          \ a message) to filter the results. Maximum number of phone numbers allowed\
          \ to be specified as filters is 15"
        schema:
          type: "array"
          items:
            type: "string"
        example:
        - "15551234455"
        - "15551235577"
      - name: "pageToken"
        in: "query"
        required: false
        description: "The page token of the page to be retrieved."
        schema:
          type: "string"
        example: "pgt1"
      - name: "perPage"
        in: "query"
        required: false
        description: "The number of messages to be returned per request"
        schema:
          type: "integer"
          format: "int32"
          default: 1000
        example: 1
      responses:
        "200":
          description: "The list of messages sent by the account and filtered by the\
            \ criteria specified in the query parameters\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageListResponse"
        "400":
          description: "Invalid Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-101:
                  value:
                    errorCode: "CMN-101"
                    message: "Parameter [${parameterName}] value is invalid."
                CMN-110:
                  value:
                    errorCode: "CMN-110"
                    message: "Header ${parameterName} should be specified"
                CMN-407:
                  value:
                    errorCode: "CMN-407"
                    message: "Parameter in header is invalid"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
        "404":
          description: "No resource found for the account."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-102"
                message: "Resource for parameter [${parameterName}] is not found."
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/messages"
      x-feature: "SMSSending"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
  /restapi/v1.0/account/{accountId}/a2p-sms/messages/{messageId}:
    get:
      tags:
      - "High Volume SMS"
      summary: "Get A2P SMS"
      description: "Returns the details of an A2P SMS message by ID."
      operationId: "readA2PSMS"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - name: "messageId"
        in: "path"
        description: "Internal identifier of a message to be retrieved"
        required: true
        schema:
          type: "string"
        example: "1234"
      responses:
        "200":
          description: "The message is found and returned"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageDetailsResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-101:
                  value:
                    errorCode: "CMN-101"
                    message: "Parameter [${parameterName}] value is invalid."
                CMN-110:
                  value:
                    errorCode: "CMN-110"
                    message: "Header ${parameterName} should be specified"
                CMN-407:
                  value:
                    errorCode: "CMN-407"
                    message: "Parameter in header is invalid"
        "401":
          description: "Unauthorized error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
        "404":
          description: "The message is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-102"
                message: "Resource for parameter [${parameterName}] is not found."
        "500":
          description: "Service is not available"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/message"
      x-feature: "SMSSending"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
  /restapi/v1.0/account/{accountId}/a2p-sms/opt-outs:
    get:
      tags:
      - "High Volume SMS"
      summary: "Get Opted Out Numbers"
      description: "Returns the list of numbers opted out from the account. The list\
        \ can be filtered by `to`/`from` phone number query parameters. Specifying\
        \ `text/csv` in the Accept header downloads the data in CSV format."
      operationId: "readA2PSMSOptOuts"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - name: "from"
        in: "query"
        required: false
        description: "The sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
          \ format for filtering messages. The asterisk value \"*\" means any number\
          \ in `from` field"
        schema:
          type: "string"
        example: "15551234455"
      - name: "to"
        in: "query"
        required: false
        description: "The receiver's phone number (`to` field) in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
          \ format for filtering messages"
        example: "15551237755"
        schema:
          type: "string"
      - name: "status"
        in: "query"
        required: false
        description: "The status (opted out, opted in, or both) to be used as the\
          \ filter"
        schema:
          type: "string"
          default: "optout"
          enum:
          - "optout"
          - "optin"
          - "all"
        example: "optout"
      - name: "pageToken"
        in: "query"
        required: false
        description: "The page token of the page to be retrieved"
        schema:
          type: "string"
        example: "pgt1"
      - name: "perPage"
        in: "query"
        required: false
        description: "The number of records to be returned for the page"
        schema:
          type: "integer"
          format: "int32"
          default: 1000
        example: 5
      responses:
        "200":
          description: "The list of opt records for the account filtered by the search\
            \ criteria provided as query param"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OptOutListResponse"
            text/csv:
              schema:
                $ref: "#/components/schemas/OptOutListResponse"
        "400":
          description: "Invalid Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-101:
                  value:
                    errorCode: "CMN-101"
                    message: "Parameter [${parameterName}] value is invalid."
                CMN-110:
                  value:
                    errorCode: "CMN-110"
                    message: "Header ${parameterName} should be specified"
                CMN-407:
                  value:
                    errorCode: "CMN-407"
                    message: "Parameter in header is invalid"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
        "404":
          description: "No resource found for the account"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-102"
                message: "Resource for parameter [${parameterName}] is not found."
        "500":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/opt-outs"
      x-feature: "SMSSending"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
  /restapi/v1.0/account/{accountId}/a2p-sms/opt-outs/bulk-assign:
    post:
      tags:
      - "High Volume SMS"
      operationId: "addA2PSMSOptOuts"
      description: "Adds multiple opt-outs and/or opt-ins for the specified sender\
        \ number and a set of recipient numbers."
      summary: "Assign Multiple Opted Out/In Numbers"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      requestBody:
        description: "Consists of `from` field and `optOuts` and `optIns` lists. Both\
          \ `optOuts` and `optIns` can be empty but not simultaneously - at least\
          \ one of the lists must be entered."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OptOutBulkAssignRequest"
      responses:
        "200":
          description: "The results of adding opt-outs and opt-ins."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OptOutBulkAssignResponse"
        "400":
          description: "Invalid Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-101:
                  value:
                    errorCode: "CMN-101"
                    message: "Parameter [from] value is invalid."
                CMN-104:
                  value:
                    errorCode: "CMN-104"
                    message: "Cannot parse request"
        "500":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/opt-outs/bulk-assign"
      x-feature: "SMSSending"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
  /restapi/v1.0/account/{accountId}/a2p-sms/batches:
    post:
      tags:
      - "High Volume SMS"
      summary: "Send A2P SMS"
      description: "Allows to send high volume of A2P (Application-to-Person) SMS\
        \ messages\n(in message batches). Only phone number with the `A2PSmsSender`\
        \ feature can\nbe used as a sender.\n"
      operationId: "createA2PSMS"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      requestBody:
        description: "SMS batch payload"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageBatchCreateRequest"
      responses:
        "201":
          description: "Message batch created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResponse"
        "400":
          description: "Validation Failed, Invalid Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-101:
                  value:
                    errorCode: "CMN-101"
                    message: "Parameter [${parameterName}] value is invalid."
                CMN-104:
                  value:
                    errorCode: "CMN-104"
                    message: "Cannot parse request"
                CMN-110:
                  value:
                    errorCode: "CMN-110"
                    message: "Header ${parameterName} should be specified"
                CMN-407:
                  value:
                    errorCode: "CMN-407"
                    message: "Parameter in header is invalid"
        "401":
          description: "Unauthorized error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/batches"
      x-feature: "SMSSending"
      x-request-max-body-size: "50m"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
    get:
      tags:
      - "High Volume SMS"
      summary: "Get A2P SMS Batches"
      description: "Returns the list of A2P batches sent from the current account.\
        \ The list can be filtered by message batch ID and/or from phone number."
      operationId: "listA2PBatches"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - $ref: "#/components/parameters/SmsDateFrom"
      - $ref: "#/components/parameters/SmsDateTo"
      - name: "from"
        in: "query"
        required: false
        description: "Phone number in E.164 format from which the messages are going\
          \ to be sent"
        schema:
          type: "string"
        example: "15551234455"
      - name: "status"
        in: "query"
        required: false
        style: "form"
        explode: true
        description: "A list of batch statuses to filter the results"
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Queued"
            - "Processing"
            - "Sent"
            - "Completed"
        example:
        - "Queued"
        - "Processing"
      - name: "pageToken"
        in: "query"
        required: false
        description: "The page token of the page to be retrieved"
        schema:
          type: "string"
        example: "pgt1"
      - name: "perPage"
        in: "query"
        required: false
        description: "The number of records to be returned per page"
        schema:
          type: "integer"
          format: "int64"
        example: 1
      responses:
        "200":
          description: "The list of batches sent by the account and filtered by the\
            \ criteria specified in the query parameters\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchListResponse"
        "400":
          description: "Invalid Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-101:
                  value:
                    errorCode: "CMN-101"
                    message: "Parameter [${parameterName}] value is invalid."
                CMN-110:
                  value:
                    errorCode: "CMN-110"
                    message: "Header ${parameterName} should be specified"
                CMN-407:
                  value:
                    errorCode: "CMN-407"
                    message: "Parameter in header is invalid"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
        "404":
          description: "No resource found for the account."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-102"
                message: "Resource for parameter [${parameterName}] is not found."
        "500":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/batches"
      x-feature: "SMSSending"
      x-request-max-body-size: "50m"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
  /restapi/v1.0/account/{accountId}/a2p-sms/batches/{batchId}:
    get:
      tags:
      - "High Volume SMS"
      summary: "Get A2P SMS Batch"
      description: "Returns information on a message batch."
      operationId: "readA2PBatch"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - $ref: "#/components/parameters/BatchId"
      responses:
        "200":
          description: "Message batch information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResponse"
        "400":
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              examples:
                CMN-101:
                  value:
                    errorCode: "CMN-101"
                    message: "Parameter [${parameterName}] value is invalid."
                CMN-110:
                  value:
                    errorCode: "CMN-110"
                    message: "Header ${parameterName} should be specified"
                CMN-407:
                  value:
                    errorCode: "CMN-407"
                    message: "Parameter in header is invalid"
        "401":
          description: "Unauthorized error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
        "404":
          description: "The batch is not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-102"
                message: "Resource for parameter [${parameterName}] is not found."
        "500":
          description: "Service is unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASGErrorResponse"
              example:
                errorCode: "CMN-203"
                message: "Internal Server Error"
      x-api-group: "asg/a2p-sms/batch"
      x-feature: "SMSSending"
      x-throttling-group: "Light"
      x-availability: "High"
      x-app-permission: "A2PSMS"
  /restapi/v1.0/account/{accountId}/answering-rule:
    get:
      tags:
      - "Call Handling Rules"
      summary: "Get Company Call Handling Rule List"
      description: "Returns a list of company call handling rules."
      operationId: "listCompanyAnsweringRules"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items per page)"
        schema:
          type: "integer"
          default: 100
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyAnsweringRuleList"
      x-api-group: "account/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "ReadAccountAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyAnsweringRules"
    post:
      tags:
      - "Call Handling Rules"
      summary: "Create Company Call Handling Rule"
      description: "Creates call handling rule on account level."
      operationId: "createCompanyAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyAnsweringRuleRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyAnsweringRuleInfo"
      x-api-group: "account/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "EditAccountAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyAnsweringRules"
  /restapi/v1.0/account/{accountId}/answering-rule/{ruleId}:
    get:
      tags:
      - "Call Handling Rules"
      summary: "Get Company Call Handling Rule"
      description: "Returns a company call handling rule by ID."
      operationId: "readCompanyAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ruleId"
        in: "path"
        description: "Internal identifier of an answering rule. The value can be standard\
          \ digital ID or specific ID - either 'business-hours-rule' or 'after-hours-rule'"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyAnsweringRuleInfo"
      x-api-group: "account/answering-rule"
      x-throttling-group: "Light"
      x-feature: "ReadAccountAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyAnsweringRules"
    put:
      tags:
      - "Call Handling Rules"
      summary: "Update Company Call Handling Rule"
      description: "Updates a company call handling rule."
      operationId: "updateCompanyAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ruleId"
        in: "path"
        description: "Internal identifier of an answering rule. The value can be standard\
          \ digital ID or specific ID - either 'business-hours-rule' or 'after-hours-rule'"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyAnsweringRuleUpdate"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyAnsweringRuleInfo"
      x-api-group: "account/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "EditAccountAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyAnsweringRules"
    delete:
      tags:
      - "Call Handling Rules"
      summary: "Delete Company Call Handling Rule"
      description: "Deletes a company custom call handling rule by a particular ID."
      operationId: "deleteCompanyAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ruleId"
        in: "path"
        description: "Internal identifier of an answering rule"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "EditAccountAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyAnsweringRules"
  /restapi/v1.0/account/{accountId}/ivr-prompts:
    get:
      tags:
      - "IVR"
      summary: "Get IVR Prompt List"
      description: "Returns the list of IVR prompts."
      operationId: "listIVRPrompts"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IVRPrompts"
      x-api-group: "account/ivr-prompts"
      x-throttling-group: "Medium"
      x-feature: "ReadAccountGreetings"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyGreetings"
    post:
      tags:
      - "IVR"
      summary: "Create IVR Prompts"
      description: "Creates an IVR prompt."
      operationId: "createIVRPrompt"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - "attachment"
              properties:
                attachment:
                  type: "string"
                  description: "Audio file that will be used as a prompt. Attachment\
                    \ cannot be empty, only audio files are supported"
                  format: "binary"
                name:
                  type: "string"
                  description: "Description of file contents."
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptInfo"
      x-api-group: "account/ivr-prompts"
      x-throttling-group: "Heavy"
      x-feature: "EditAccountGreetings"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyGreetings"
  /restapi/v1.0/account/{accountId}/ivr-prompts/{promptId}:
    get:
      tags:
      - "IVR"
      summary: "Get IVR Prompt"
      description: "Returns an IVR prompt by ID."
      operationId: "readIVRPrompt"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "promptId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Prompt Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptInfo"
      x-api-group: "account/ivr-prompts"
      x-throttling-group: "Medium"
      x-feature: "ReadAccountGreetings"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyGreetings"
    put:
      tags:
      - "IVR"
      summary: "Update IVR Prompt"
      description: "Updates an IVR prompt by ID"
      operationId: "updateIVRPrompt"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "promptId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateIVRPromptRequest"
        required: false
      responses:
        "200":
          description: "Updated Prompt Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptInfo"
      x-api-group: "account/ivr-prompts"
      x-throttling-group: "Medium"
      x-feature: "EditAccountGreetings"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyGreetings"
    delete:
      tags:
      - "IVR"
      summary: "Delete IVR Prompt"
      description: "Deletes an IVR prompt by ID."
      operationId: "deleteIVRPrompt"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "promptId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/ivr-prompts"
      x-throttling-group: "Heavy"
      x-feature: "EditAccountGreetings"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyGreetings"
  /restapi/v1.0/account/{accountId}/ivr-prompts/{promptId}/content:
    get:
      tags:
      - "IVR"
      summary: "Get IVR Prompt Content"
      description: "Returns media content of an IVR prompt by ID."
      operationId: "readIVRPromptContent"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "promptId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "IVR Prompt Media Data"
          content:
            application/json:
              schema:
                type: "string"
                format: "binary"
      x-api-group: "account/ivr-prompts"
      x-throttling-group: "Medium"
      x-feature: "ReadAccountGreetings"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyGreetings"
  /restapi/v1.0/account/{accountId}/address-book-bulk-upload:
    post:
      tags:
      - "External Contacts"
      summary: "Update Multiple Contacts"
      description: "Uploads multiple contacts for multiple extensions at once. Maximum\
        \ 500 extensions can be uploaded per request. Max amount of contacts that\
        \ can be uploaded per an extension is 10,000. Each contact uploaded to an\
        \ extension is not visible to other extensions."
      operationId: "addressBookBulkUpload"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressBookBulkUploadRequest"
        required: true
      responses:
        "202":
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressBookBulkUploadResponse"
      x-api-group: "account/address-book-bulk-upload"
      x-throttling-group: "Heavy"
      x-feature: "EditPersonalContacts"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "Contacts"
      x-user-permission: "EditPersonalContacts"
  /restapi/v1.0/account/{accountId}/address-book-bulk-upload/tasks/{taskId}:
    get:
      tags:
      - "External Contacts"
      summary: "Get Contacts Update Task"
      description: "Returns the status of a task on adding multiple contacts to multiple\
        \ extensions."
      operationId: "getAddressBookBulkUploadTask"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressBookBulkUploadResponse"
      x-api-group: "account/address-book-bulk-upload"
      x-throttling-group: "Light"
      x-feature: "EditPersonalContacts"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "Contacts"
      x-user-permission: "EditPersonalContacts"
  /restapi/v1.0/account/{accountId}/call-queues:
    get:
      tags:
      - "Call Queues"
      summary: "Get Call Queue List"
      description: "Returns call queue group list."
      operationId: "listCallQueues"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "memberExtensionId"
        in: "query"
        description: "Internal identifier of an extension that is a member of every\
          \ group within the result"
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallQueues"
      x-api-group: "account/call-queues"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/call-queues/{groupId}:
    get:
      tags:
      - "Call Queues"
      summary: "Get Call Queue"
      description: "Returns basic information on a call queue group extension."
      operationId: "readCallQueueInfo"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Call Queue Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallQueueDetails"
      x-api-group: "account/call-queues"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    put:
      tags:
      - "Call Queues"
      summary: "Update Call Queue"
      description: "Updates information on a call queue group extension."
      operationId: "updateCallQueueInfo"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallQueueUpdateDetails"
        required: true
      responses:
        "200":
          description: "Updated Call Queue Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallQueueDetails"
      x-api-group: "account/call-queues"
      x-throttling-group: "Light"
      x-feature: "EditExtensionInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserInfo"
  /restapi/v1.0/account/{accountId}/call-queues/{groupId}/presence:
    get:
      tags:
      - "Presence"
      summary: "Get Call Queue Presence"
      description: "Returns presence status of the call queue members."
      operationId: "readCallQueuePresence"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        description: "Internal identifier of an call queue extension"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallQueuePresence"
      x-api-group: "call-queues/presence"
      x-request-max-body-size: "100m"
      x-feature: "ReadPresenceStatus"
      x-throttling-group: "Light"
      x-app-permission: "ReadPresence"
    put:
      tags:
      - "Presence"
      summary: "Update Call Queue Presence"
      description: "Updates presence status of the call queue members in the specified\
        \ queue."
      operationId: "updateCallQueuePresence"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a call queue extension"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallQueueUpdatePresence"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallQueuePresence"
      x-api-group: "call-queues/presence"
      x-request-max-body-size: "100m"
      x-feature: "EditPresenceStatus"
      x-throttling-group: "Medium"
      x-app-permission: "EditPresence"
  /restapi/v1.0/account/{accountId}/call-queues/{groupId}/bulk-assign:
    post:
      tags:
      - "Call Queues"
      summary: "Assign Multiple Call Queue Members"
      description: "Updates a call queue group."
      operationId: "assignMultipleCallQueueMembers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Changes for the given group"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallQueueBulkAssignResource"
        required: true
      responses:
        "204":
          description: "Success"
          content: {}
        "400":
          description: "Extension of type [${extensionType}] cannot be included into\
            \ call queue"
          content: {}
      x-api-group: "account/call-queues/call-queues"
      x-throttling-group: "Heavy"
      x-feature: "EditGroups"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "Groups"
  /restapi/v1.0/account/{accountId}/call-queues/{groupId}/members:
    get:
      tags:
      - "Call Queues"
      summary: "Get Call Queue Members"
      description: "Returns call queue group members."
      operationId: "listCallQueueMembers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are allowed"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallQueueMembers"
      x-api-group: "account/call-queues/members"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/emergency-locations:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Emergency Location List"
      description: "Returns emergency response locations of the current account."
      operationId: "listEmergencyLocations"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "searchString"
        in: "query"
        description: "Filters entries containing the specified substring in address\
          \ and name fields. The characters range is 0-64; not case-sensitive. If\
          \ empty then the filter is ignored"
        schema:
          type: "string"
      - name: "siteId"
        in: "query"
        description: "Internal identifier of a site for filtering. To filter by Main\
          \ Site (Company) `main-site` value should be specified"
        schema:
          type: "string"
      - name: "addressStatus"
        in: "query"
        schema:
          type: "string"
          enum:
          - "Valid"
          - "Invalid"
      - name: "usageStatus"
        in: "query"
        schema:
          type: "string"
          enum:
          - "Active"
          - "Inactive"
      - name: "domesticCountryId"
        in: "query"
        schema:
          type: "string"
      - name: "orderBy"
        in: "query"
        description: "Comma-separated list of fields to order results prefixed by\
          \ plus sign '+' (ascending order) or minus sign '-' (descending order).\n\
          Possible field entries are:\n- `name`;\n- `siteName`;\n- `address`;\n- `addressStatus`;\n\
          - `usageStatus`.\n"
        schema:
          type: "string"
          default: "+address"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). The values supported:\
          \ `Max` or numeric value. If not specified, 100 records are returned per\
          \ one page"
        schema:
          type: "integer"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are supported"
        schema:
          type: "integer"
          default: 1
      responses:
        "200":
          description: "Emergency Location List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyLocationList"
      x-api-group: "account/emergency-locations"
      x-throttling-group: "Light"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Add Emergency Location"
      operationId: "createEmergencyLocation"
      description: "Creates a new emergency response location for the company."
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmergencyLocationInfoRequest"
        required: true
      responses:
        "200":
          description: "Success"
          content: {}
      x-api-group: "account/emergency-locations"
      x-throttling-group: "Medium"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-locations/{locationId}:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Emergency Location"
      description: "Returns emergency response location by ID."
      operationId: "readEmergencyLocation"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "locationId"
        in: "path"
        description: "Internal identifier of the emergency location"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Emergency Location Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyLocationInfo"
      x-api-group: "account/emergency-locations"
      x-throttling-group: "Light"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate\
        \ OR ReadEmergencyLocations"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    put:
      tags:
      - "Automatic Location Updates"
      summary: "Update Emergency Location"
      description: "Updates the specified emergency response location."
      operationId: "updateEmergencyLocation"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "locationId"
        in: "path"
        description: "Internal identifier of the emergency location"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmergencyLocationInfoRequest"
        required: true
      responses:
        "200":
          description: "Emergency Location Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyLocationInfo"
      x-api-group: "account/emergency-locations"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate\
        \ OR EditEmergencyLocations"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    delete:
      tags:
      - "Automatic Location Updates"
      operationId: "deleteEmergencyLocation"
      summary: "Delete Emergency Location"
      description: "Deletes the specified emergency response location."
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "locationId"
        in: "path"
        description: "Internal identifier of emergency location"
        required: true
        schema:
          type: "string"
      - name: "newLocationId"
        in: "query"
        description: "Internal identifier of a location that should be used instead\
          \ of a deleted one"
        schema:
          type: "string"
      - name: "validateOnly"
        in: "query"
        description: "Flag indicating that validation of emergency location(s) is\
          \ required before deletion"
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful validation"
          content: {}
        "204":
          description: "No Content"
          content: {}
        "207":
          description: "Multi-Status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLocationDeletionMultiResponse"
      x-api-group: "account/emergency-locations"
      x-throttling-group: "Heavy"
      x-feature: "EditEmergencyLocations"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/meeting/locked-settings:
    get:
      tags:
      - "Meeting Configuration"
      summary: "Get Locked Meeting Settings"
      description: "Returns information on user meeting settings that are locked on\
        \ account level and therefore cannot be changed by user."
      operationId: "GetAccountLockedSetting"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of an account or tilde (~) to indicate the\
          \ account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK: Account Locked Meeting Settings"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountLockedSettingResponse"
      x-api-group: "account/meeting/locked-settings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/department/{departmentId}/members:
    get:
      tags:
      - "Call Queues"
      summary: "Get Department Member List"
      description: "Viewing user account info (including name, business name, address\
        \ and phone number/account number). Please note, that this method is deprecated\
        \ and legacy 'Department' entity corresponds to 'Call Queue' in modern RingCentral\
        \ product terminology. In order to retrieve call queue members please use\
        \ the following method `GET/restapi/v1.0/account/{accountId}/call-queues/{groupId}/members`."
      operationId: "listDepartmentMembers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "departmentId"
        in: "path"
        description: "Internal identifier of a Department extension (same as extensionId\
          \ but only the ID of a department extension is valid). Please note that\
          \ legacy 'Department' extension type corresponds to 'Call Queue' extensions\
          \ in modern RingCentral product terminology"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepartmentMemberList"
      deprecated: true
      x-api-group: "account/department/members"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/department/bulk-assign:
    post:
      tags:
      - "Call Queues"
      summary: "Assign Multiple Department Members"
      description: "Adds and/or removes multiple call queue members. Please note,\
        \ that this method is deprecated and legacy 'Department' entity corresponds\
        \ to 'Call Queue' in modern RingCentral product terminology. In order to assign\
        \ multiple call queue members please use the following method `POST/restapi/v1.0/account/{accountId}/call-queues/{groupId}/bulk-assign`."
      operationId: "assignMultipleDepartmentMembers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepartmentBulkAssignResource"
        required: false
      responses:
        default:
          description: "successful operation"
          content: {}
      deprecated: true
      x-api-group: "account/department"
      x-throttling-group: "Heavy"
      x-feature: "EditUserGroups"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "UserGroups"
  /restapi/v1.0/account/{accountId}/presence:
    get:
      tags:
      - "Presence"
      summary: "Get User Presence Status List"
      description: "Returns presence status of all extensions of an account. Please\
        \ note: The presenceStatus is returned as Offline (the parameters telephonyStatus,\
        \ message, userStatus and dndStatus are not returned at all) for the following\
        \ extension types: Department, Announcement Only, Voicemail (Take Messages\
        \ Only), Fax User, Paging Only Group, Shared Lines Group, IVR Menu, Application\
        \ Extension."
      operationId: "readAccountPresence"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "detailedTelephonyState"
        in: "query"
        description: "Whether to return detailed telephony state"
        schema:
          type: "boolean"
      - name: "sipData"
        in: "query"
        description: "Whether to return SIP data"
        schema:
          type: "boolean"
      - name: "page"
        in: "query"
        description: "Page number for account presence information"
        schema:
          type: "integer"
          format: "int32"
      - name: "perPage"
        in: "query"
        description: "Number for account presence information items per page"
        schema:
          type: "integer"
          format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountPresenceInfo"
      x-api-group: "account/presence"
      x-request-max-body-size: "100m"
      x-feature: "ReadPresenceStatus"
      x-throttling-group: "Heavy"
      x-app-permission: "ReadPresence"
      x-user-permission: "ReadPresenceStatus"
  /restapi/v1.0/account/{accountId}/assigned-role:
    get:
      tags:
      - "Role Management"
      summary: "Get Assigned Role List"
      description: "Returns the list of assigned roles for the current account."
      operationId: "listAssignedRoles"
      parameters:
      - name: "showHidden"
        in: "query"
        schema:
          type: "boolean"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionWithRolesCollectionResource"
      x-api-group: "account/assigned-role"
      x-throttling-group: "Medium"
      x-feature: "ReadAssignedRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadAssignedRoles"
  /restapi/v1.0/account/{accountId}/meeting-recordings:
    get:
      tags:
      - "Meeting Recordings"
      summary: "Get Account Meeting Recordings List"
      description: "Returns the list of meeting recordings for the current account."
      operationId: "listAccountMeetingRecordings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "meetingId"
        in: "query"
        description: "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime`\
          \ can be specified"
        schema:
          type: "string"
      - name: "meetingStartTimeFrom"
        in: "query"
        description: "Recordings of meetings in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
          \ format started after the time specified will be returned, for example\
          \ *2016-03-10T18:07:52.534Z*. Either `meetingId` or `meetingStartTime`/`meetingEndTime`\
          \ can be specified"
        schema:
          type: "string"
      - name: "meetingStartTimeTo"
        in: "query"
        description: "Recordings of meetings in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
          \ format started before the time specified will be returned, for example\
          \ *2016-03-10T18:07:52.534Z*. The default value is current time. Either\
          \ `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified"
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Page number"
        schema:
          type: "integer"
      - name: "perPage"
        in: "query"
        description: "Number of items per page. The `max` value is supported to indicate\
          \ the maximum size - 300"
        schema:
          maximum: 300
          type: "integer"
          default: 100
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMeetingRecordingsResponse"
      x-api-group: "account/meeting-recordings"
      x-throttling-group: "Medium"
      x-feature: "MeetingsCompanyRecordings"
      x-source-file: "rc-platform-meeting-recordings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "MeetingsRecordings"
  /restapi/v1.0/account/{accountId}/call-monitoring-groups:
    get:
      tags:
      - "Call Monitoring Groups"
      summary: "Get Call Monitoring Groups List"
      description: "Returns call monitoring groups that can be filtered by some extension."
      operationId: "listCallMonitoringGroups"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are allowed"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "memberExtensionId"
        in: "query"
        description: "Internal identifier of an extension that is a member of every\
          \ group within the result"
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallMonitoringGroups"
      x-api-group: "account/call-monitoring-groups"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    post:
      tags:
      - "Call Monitoring Groups"
      summary: "Create Call Monitoring Group"
      description: "Creates a new call monitoring group."
      operationId: "createCallMonitoringGroup"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "Parameters of a call monitoring group that will be created"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCallMonitoringGroupRequest"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallMonitoringGroup"
      x-api-group: "account/call-monitoring-groups"
      x-throttling-group: "Medium"
      x-feature: "EditGroups"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditExtensions"
      x-user-permission: "Groups"
  /restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}:
    put:
      tags:
      - "Call Monitoring Groups"
      summary: "Updates Call Monitoring Group"
      description: "Updates call monitoring group name by ID."
      operationId: "updateCallMonitoringGroup"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a call monitoring group"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Parameters of a call monitoring group that will be updated"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCallMonitoringGroupRequest"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallMonitoringGroup"
        "400":
          description: "Value for group name is unacceptable."
          content: {}
        "403":
          description: "User has no permissions to create groups."
          content: {}
        "404":
          description: "Group with the given identifier doesn't belong to the account."
          content: {}
      x-api-group: "account/call-monitoring-groups"
      x-throttling-group: "Medium"
      x-feature: "EditGroups"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditExtensions"
      x-user-permission: "Groups"
    delete:
      tags:
      - "Call Monitoring Groups"
      summary: "Delete Call Monitoring Group"
      description: "Removes information about the given call monitoring group."
      operationId: "deleteCallMonitoringGroup"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "404":
          description: "Group with the given identifier doesn't belong to the account."
          content: {}
      x-api-group: "account/call-monitoring-groups"
      x-throttling-group: "Medium"
      x-feature: "EditGroups"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "Groups"
  /restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}/bulk-assign:
    post:
      tags:
      - "Call Monitoring Groups"
      summary: "Update Call Monitoring Group List"
      description: "Updates call monitoring groups."
      operationId: "updateCallMonitoringGroupList"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Changes for the given group"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallMonitoringBulkAssign"
        required: true
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Extension of type [ParkLocation] could not be a member of\
            \ [call monitoring]"
          content: {}
      x-api-group: "account/call-monitoring-groups/bulk-assign"
      x-throttling-group: "Heavy"
      x-feature: "EditGroups"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "Groups"
  /restapi/v1.0/account/{accountId}/call-monitoring-groups/{groupId}/members:
    get:
      tags:
      - "Call Monitoring Groups"
      summary: "Get Call Monitoring Group Member List"
      description: "Returns call monitoring group members."
      operationId: "listCallMonitoringGroupMembers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "groupId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are allowed"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallMonitoringGroupMemberList"
      x-api-group: "account/call-monitoring-groups/members"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/business-address:
    get:
      tags:
      - "Company"
      summary: "Get Account Business Address"
      description: "Returns business address of a company."
      operationId: "readAccountBusinessAddress"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountBusinessAddressResource"
      x-api-group: "account/business-address"
      x-throttling-group: "Light"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
    put:
      tags:
      - "Company"
      summary: "Update Company Business Address"
      description: "Updates the business address of a company that account is linked\
        \ to. Batch request is supported."
      operationId: "updateAccountBusinessAddress"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyAccountBusinessAddressRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountBusinessAddressResource"
      x-api-group: "account/business-address"
      x-throttling-group: "Medium"
      x-feature: "EditCompanyInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditCompanyInfo"
  /restapi/v1.0/account/{accountId}/audit-trail/search:
    post:
      tags:
      - "Audit Trail"
      summary: "Search Audit Trail Data"
      description: "Returns the audit trail data applying specific filters. Audit\
        \ trail searching is limited to the last 10,000 records or last 180 days,\
        \ whichever comes first."
      operationId: "auditTrailSearch"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account to indicate the\
          \ account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "Filter"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountHistorySearchPublicRequest"
        required: false
      responses:
        "200":
          description: "List of Account History Records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountHistorySearchPublicResponse"
        "400":
          description: "Bad Request"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Not Found"
          content: {}
        "500":
          description: "Some unexpected error during current request processing"
          content: {}
        "503":
          description: "Service Unavailable"
          content: {}
      x-api-group: "account/audit-trail/search"
      x-source-file: "rc-hit.yml"
      x-throttling-group: "Heavy"
      x-app-permission: "ReadAuditTrail"
  /restapi/v1.0/account/{accountId}/ivr-menus:
    post:
      tags:
      - "IVR"
      summary: "Create IVR Menu"
      description: "Creates a company IVR menu."
      operationId: "createIVRMenu"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IVRMenuInfo"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IVRMenuInfo"
      x-api-group: "account/ivr-menus"
      x-throttling-group: "Heavy"
      x-feature: "EditAutoReceptionist"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "AutoReceptionist"
  /restapi/v1.0/account/{accountId}/ivr-menus/{ivrMenuId}:
    get:
      tags:
      - "IVR"
      summary: "Get IVR Menu"
      description: "Returns a company IVR menu by ID."
      operationId: "readIVRMenu"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ivrMenuId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IVRMenuInfo"
      x-api-group: "account/ivr-menus"
      x-throttling-group: "Medium"
      x-feature: "EditAutoReceptionist"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "AutoReceptionist"
    put:
      tags:
      - "IVR"
      summary: "Update IVR Menu"
      description: "Updates a company IVR menu by ID."
      operationId: "updateIVRMenu"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "ivrMenuId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IVRMenuInfo"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IVRMenuInfo"
      x-api-group: "account/ivr-menus"
      x-throttling-group: "Medium"
      x-feature: "EditAutoReceptionist"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "ReadAccounts"
      x-user-permission: "AutoReceptionist"
  /restapi/v1.0/account/{accountId}/message-store-report:
    post:
      tags:
      - "Message Exports"
      summary: "Create Message Store Report"
      description: "Creates a task to collect all account messages within the specified\n\
        time interval. Maximum number of simultaneous tasks per account is 2.\n"
      operationId: "createMessageStoreReport"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMessageStoreReportRequest"
        required: false
      responses:
        "202":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStoreReport"
        "400":
          $ref: "#/components/responses/InvalidRequest"
        "500":
          $ref: "#/components/responses/InternalError"
        "503":
          $ref: "#/components/responses/ServiceNotAvailable"
      x-api-group: "message-store/task"
      x-feature: "EditUsers"
      x-throttling-group: "Heavy"
      x-user-permission: "Users"
      x-app-permission: "ReadMessages"
  /restapi/v1.0/account/{accountId}/message-store-report/{taskId}:
    get:
      tags:
      - "Message Exports"
      summary: "Get Message Store Report Task"
      description: "Returns the current status of a task on report creation."
      operationId: "readMessageStoreReportTask"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - $ref: "#/components/parameters/TaskId"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStoreReport"
        "500":
          $ref: "#/components/responses/InternalError"
        "503":
          $ref: "#/components/responses/ServiceNotAvailable"
      x-api-group: "message-store/task"
      x-feature: "EditUsers"
      x-throttling-group: "Heavy"
      x-user-permission: "Users"
      x-app-permission: "ReadMessages"
  /restapi/v1.0/account/{accountId}/message-store-report/{taskId}/archive:
    get:
      tags:
      - "Message Exports"
      summary: "Get Message Store Report Archive"
      description: "Returns the created report with message data not including attachments."
      operationId: "readMessageStoreReportArchive"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - $ref: "#/components/parameters/TaskId"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStoreReportArchive"
        "500":
          $ref: "#/components/responses/InternalError"
        "503":
          $ref: "#/components/responses/ServiceNotAvailable"
      x-api-group: "message-store/task/archive"
      x-feature: "EditUsers"
      x-throttling-group: "Heavy"
      x-user-permission: "Users"
      x-app-permission: "ReadMessages"
  /restapi/v1.0/account/{accountId}/message-store-report/{taskId}/archive/{archiveId}:
    get:
      tags:
      - "Message Exports"
      summary: "Get Message Store Report Archive Content"
      description: "Returns one of the report archives with message contents in application/zip\
        \ format."
      operationId: "readMessageStoreReportArchiveContent"
      parameters:
      - $ref: "#/components/parameters/AccountId"
      - $ref: "#/components/parameters/TaskId"
      - $ref: "#/components/parameters/ArchiveId"
      responses:
        "200":
          description: "Archived Data"
          content:
            application/zip:
              schema:
                type: "string"
                format: "binary"
        "500":
          $ref: "#/components/responses/InternalError"
        "503":
          $ref: "#/components/responses/ServiceNotAvailable"
      x-api-group: "message-store/task/archive"
      x-feature: "EditUsers"
      x-throttling-group: "Heavy"
      x-user-permission: "Users"
      x-app-permission: "ReadMessages"
  /restapi/v1.0/account/{accountId}/directory/entries:
    get:
      tags:
      - "Internal Contacts"
      summary: "Get Company Directory Entries"
      description: "Returns contact information on corporate users of federated accounts.\
        \ Please note: 1. `User`, `DigitalUser`, `VirtualUser` and `FaxUser` types\
        \ are returned as `User` type. 2. `ApplicationExtension` type is not returned.\
        \ 3. Only extensions in `Enabled`, `Disabled` and `NotActivated` state are\
        \ returned."
      operationId: "listDirectoryEntries"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "showFederated"
        in: "query"
        description: "If 'True' then contacts of all accounts in federation are returned.\
          \ If 'False' then only contacts of the current account are returned, and\
          \ account section is eliminated in this case"
        schema:
          type: "boolean"
          default: true
      - name: "type"
        in: "query"
        description: "Type of an extension. Please note that legacy 'Department' extension\
          \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
          \ terminology"
        schema:
          type: "string"
          enum:
          - "User"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ParkLocation"
          - "Limited"
      - name: "page"
        in: "query"
        description: "Page number"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        description: "Records count to be returned per one page. The default value\
          \ is 1000. Specific keyword values: `all` - all records are returned in\
          \ one page; `max` - maximum count of records that can be returned in one\
          \ page"
        schema:
          maximum: 2000
          type: "integer"
          default: 1000
      - name: "siteId"
        in: "query"
        description: "Internal identifier of the business site to which extensions\
          \ belong"
        schema:
          type: "string"
      - name: "If-None-Match"
        in: "header"
        description: "If-None-Match"
        schema:
          type: "string"
      responses:
        "200":
          description: "Paged collection of all contacts information for a given account.\
            \ Records can be empty if no data found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryResource"
        "400":
          description: "Current request cannot be processed due to error in its body\
            \ and/or url."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "500":
          description: "Some unexpected error during current request processing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "503":
          description: "Network error during request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
      x-api-group: "account/directory/entries"
      x-source-file: "rc-platform-adg.yml"
      x-throttling-group: "Medium"
      x-app-permission: "ReadAccounts"
  /restapi/v1.0/account/{accountId}/directory/entries/{entryId}:
    get:
      tags:
      - "Internal Contacts"
      summary: "Get Corporate Directory Entry"
      description: "Returns contact information on a particular corporate user of\
        \ a federated account."
      operationId: "readDirectoryEntry"
      parameters:
      - name: "entryId"
        in: "path"
        description: "Internal identifier of extension to read information for"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Contact information for given parameters. If value doesn't\
            \ found then empty body will be returned"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactResource"
        "400":
          description: "Current request cannot be processed due to error in its body\
            \ and/or url"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "500":
          description: "Some unexpected error during current request processing"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "503":
          description: "Network error during request. One should check connection\
            \ between ADG processing node and ADX data node"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
      x-api-group: "account/directory/entries/single"
      x-source-file: "rc-platform-adg.yml"
      x-throttling-group: "Medium"
      x-app-permission: "ReadAccounts"
  /restapi/v1.0/account/{accountId}/directory/entries/search:
    post:
      tags:
      - "Internal Contacts"
      summary: "Search Company Directory Entries"
      description: "Returns contact information on corporate users of federated accounts\
        \ according to the specified filtering and ordering."
      operationId: "searchDirectoryEntries"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDirectoryEntriesRequest"
        required: false
      responses:
        "200":
          description: "Paged collection of all contacts information for a given account\
            \ according to filtering and ordering. Records can be empty if no data\
            \ found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryResource"
        "400":
          description: "Current request cannot be processed due to error in its body\
            \ and/or url"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "500":
          description: "Some unexpected error during current request processing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "503":
          description: "Network error during request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
      x-api-group: "account/directory/entries/search"
      x-throttling-group: "Heavy"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-adg.yml"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/directory/federation:
    get:
      tags:
      - "Internal Contacts"
      summary: "Get Account Federation"
      description: "Returns information on a federation and associated accounts."
      operationId: "readAccountFederation"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "RCExtensionId"
        in: "header"
        description: "RCExtensionId"
        schema:
          type: "string"
      responses:
        "200":
          description: "List of found federations. Records array can be empty if no\
            \ data found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FederationResource"
        "400":
          description: "Current request cannot be processed due to error in its body\
            \ and/or url"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "500":
          description: "Some unexpected error during current request processing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
        "503":
          description: "Network error during request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADGErrorResponse"
      x-api-group: "account/directory/federation"
      x-throttling-group: "Medium"
      x-feature: "ReadCompanyInfo"
      x-source-file: "rc-platform-adg.yml"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyInfo"
  /restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/users:
    get:
      tags:
      - "Paging Only Groups"
      summary: "Get Paging Group Users"
      description: "Returns the list of users allowed to page this group."
      operationId: "listPagingGroupUsers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "pagingOnlyGroupId"
        in: "path"
        description: "Internal identifier of a paging group"
        required: true
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagingOnlyGroupUsers"
      x-api-group: "account/paging-only-groups/users"
      x-throttling-group: "Light"
      x-feature: "ReadExtensionInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserInfo"
  /restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/bulk-assign:
    post:
      tags:
      - "Paging Only Groups"
      summary: "Assign Paging Group Users and Devices"
      description: "Adds and/or removes paging group users and devices."
      operationId: "assignMultiplePagingGroupUsersDevices"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "pagingOnlyGroupId"
        in: "path"
        description: "Internal identifier of a paging group"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditPagingGroupRequest"
        required: false
      responses:
        default:
          description: "Success"
          content: {}
      x-api-group: "account/paging-only-groups/bulk-assign"
      x-throttling-group: "Heavy"
      x-feature: "EditGroups"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "Groups"
  /restapi/v1.0/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/devices:
    get:
      tags:
      - "Paging Only Groups"
      summary: "Get Paging Group Devices"
      description: "Returns the list of paging devices assigned to this group."
      operationId: "listPagingGroupDevices"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "pagingOnlyGroupId"
        in: "path"
        description: "Internal identifier of a paging group"
        required: true
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagingOnlyGroupDevices"
      x-api-group: "account/paging-only-groups/devices"
      x-throttling-group: "Light"
      x-feature: "ReadAccountDevices"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyDevices"
  /restapi/v1.0/account/{accountId}/recording/{recordingId}:
    get:
      tags:
      - "Call Recordings"
      summary: "Get Call Recording"
      description: "Returns call recordings by ID(s)."
      operationId: "readCallRecording"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "recordingId"
        in: "path"
        description: "Internal identifier of a recording (returned in Call Log)"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCallRecordingResponse"
      x-api-group: "account/recording"
      x-throttling-group: "Heavy"
      x-feature: "ReadAccountCallRecordings"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallRecording"
      x-user-permission: "ReadCallRecording"
  /restapi/v1.0/account/{accountId}/recording/{recordingId}/content:
    get:
      tags:
      - "Call Recordings"
      summary: "Get Call Recordings Data"
      description: "Returns media content of a call recording."
      operationId: "listCallRecordingData"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "recordingId"
        in: "path"
        description: "Internal identifier of a recording (returned in Call Log)"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Call Recording Media Data"
          content: {}
      x-api-group: "account/recording/content"
      x-throttling-group: "Heavy"
      x-feature: "ReadAccountCallRecordings"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallRecording"
      x-user-permission: "ReadCallRecording"
  /restapi/v1.0/account/{accountId}/message-store-configuration:
    get:
      tags:
      - "Message Store"
      summary: "Get Message Store Configuration"
      description: "Returns message store settings."
      operationId: "readMessageStoreConfiguration"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStoreConfiguration"
      x-api-group: "account/message-store-configuration"
      x-throttling-group: "Light"
      x-feature: "AccountAdministration"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "Limited"
      x-user-permission: "AccountAdministration"
      x-app-permission: "EditAccounts"
    put:
      tags:
      - "Message Store"
      summary: "Update Message Store Configuration"
      description: "Updates message store settings."
      operationId: "updateMessageStoreConfiguration"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/MessageStoreConfiguration"
        required: true
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStoreConfiguration"
      x-api-group: "account/message-store-configuration"
      x-throttling-group: "Light"
      x-feature: "AccountAdministration"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "Limited"
      x-user-permission: "AccountAdministration"
      x-app-permission: "EditAccounts"
  /restapi/v1.0/account/{accountId}/greeting:
    post:
      tags:
      - "Greetings"
      summary: "Create Company Greeting"
      description: "Creates a custom company greeting."
      operationId: "createCompanyGreeting"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          multipart/mixed:
            schema:
              required:
              - "binary"
              - "type"
              properties:
                type:
                  type: "string"
                  description: "Type of a greeting, specifying the case when the greeting\
                    \ is played."
                  enum:
                  - "Company"
                  - "StartRecording"
                  - "StopRecording"
                  - "AutomaticRecording"
                answeringRuleId:
                  type: "string"
                  description: "Internal identifier of an answering rule"
                languageId:
                  type: "string"
                  description: "Internal identifier of a language. See Get Language\
                    \ List"
                binary:
                  type: "string"
                  description: "Media file to upload"
                  format: "binary"
          multipart/form-data:
            schema:
              required:
              - "binary"
              - "type"
              properties:
                type:
                  type: "string"
                  description: "Type of a greeting, specifying the case when the greeting\
                    \ is played."
                  enum:
                  - "Company"
                  - "StartRecording"
                  - "StopRecording"
                  - "AutomaticRecording"
                answeringRuleId:
                  type: "string"
                  description: "Internal identifier of an answering rule"
                languageId:
                  type: "string"
                  description: "Internal identifier of a language. See Get Language\
                    \ List"
                binary:
                  type: "string"
                  description: "Media file to upload"
                  format: "binary"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomCompanyGreetingInfo"
      x-api-group: "extension/greeting"
      x-request-max-body-size: "20m"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensionInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ReadUserInfo"
  /restapi/v1.0/account/{accountId}/user-role:
    get:
      tags:
      - "Role Management"
      summary: "Get Account User Role List"
      description: "Returns the list of account user roles."
      operationId: "listUserRoles"
      parameters:
      - name: "custom"
        in: "query"
        description: "Specifies whether to return custom or predefined only roles.\
          \ If not specified, all roles are returned"
        schema:
          type: "boolean"
      - name: "page"
        in: "query"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        schema:
          type: "string"
          default: "100"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Account User Role List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolesCollectionResource"
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-feature: "ReadRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserRoles"
    post:
      tags:
      - "Role Management"
      summary: "Create Custom Role"
      description: "Creates custom user role."
      operationId: "createCustomRole"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleResource"
        required: false
      responses:
        default:
          description: "successful operation"
          content: {}
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-feature: "EditRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-app-permission: "RoleManagement"
      x-user-permission: "EditUserRoles"
  /restapi/v1.0/account/{accountId}/user-role/default:
    get:
      tags:
      - "Role Management"
      summary: "Get Default User Role"
      description: "Returns account default user role."
      operationId: "readDefaultRole"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Success"
          content: {}
      x-api-group: "account/user-role/default"
      x-throttling-group: "Light"
      x-feature: "EditRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-app-permission: "RoleManagement"
      x-user-permission: "Roles"
    put:
      tags:
      - "Role Management"
      summary: "Set Default User Role"
      description: "Updates account default user role."
      operationId: "updateDefaultUserRole"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DefaultUserRoleRequest"
        required: true
      responses:
        default:
          description: "Success"
          content: {}
      x-api-group: "account/user-role/default"
      x-throttling-group: "Medium"
      x-feature: "EditRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-app-permission: "RoleManagement"
      x-user-permission: "Roles"
  /restapi/v1.0/account/{accountId}/user-role/{roleId}:
    get:
      tags:
      - "Role Management"
      summary: "Get User Role"
      description: "Returns a user role on the current account by ID."
      operationId: "readUserRole"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleResource"
      x-api-group: "account/user-role"
      x-throttling-group: "Light"
      x-feature: "ReadRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-user-permission: "ReadUserRoles"
      x-app-permission: "ReadAccounts"
    put:
      tags:
      - "Role Management"
      summary: "Update User Role"
      description: "Updates a user role on the current account by ID."
      operationId: "updateUserRole"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleResource"
        required: false
      responses:
        default:
          description: "successful operation"
          content: {}
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-feature: "EditRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-user-permission: "EditUserRoles"
      x-app-permission: "RoleManagement"
    delete:
      tags:
      - "Role Management"
      summary: "Delete Custom Role"
      description: "Deletes custom user role by ID."
      operationId: "deleteCustomRole"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "validateOnly"
        in: "query"
        description: "Specifies that role should be validated prior to deletion whether\
          \ it can be deleted or not"
        schema:
          type: "boolean"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-feature: "EditRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-app-permission: "RoleManagement"
      x-user-permission: "EditUserRoles"
  /restapi/v1.0/account/{accountId}/user-role/{roleId}/bulk-assign:
    post:
      tags:
      - "Role Management"
      summary: "Assign Multiple User Roles"
      description: "Assigns multiple user roles."
      operationId: "assignMultipleUserRoles"
      parameters:
      - name: "roleId"
        in: "path"
        description: "Internal identifier of a role"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        required: true
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkRoleAssignResource"
        required: false
      responses:
        default:
          description: "successful operation"
          content: {}
      x-api-group: "account/user-role"
      x-throttling-group: "Heavy"
      x-feature: "EditRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-app-permission: "RoleManagement"
      x-user-permission: "EditUserRoles"
  /restapi/v1.0/account/{accountId}/extension:
    get:
      tags:
      - "Extensions"
      summary: "Get Extension List"
      description: "Returns the list of extensions created for a particular account.\
        \ All types of extensions are included in this list."
      operationId: "listExtensions"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionNumber"
        in: "query"
        description: "Number of extension to be retrieved"
        schema:
          type: "string"
      - name: "email"
        in: "query"
        description: "Extension email address. Multiple values are accepted"
        example: "alice.smith@example.com&email=bob.johnson@example.com"
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are allowed"
        schema:
          type: "integer"
          format: "int64"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          format: "int64"
          default: 100
      - name: "status"
        in: "query"
        description: "Extension current state. Multiple values are supported. If 'Unassigned'\
          \ is specified, then extensions without `extensionNumber` attribute are\
          \ returned. If not specified, then all extensions are returned."
        allowEmptyValue: true
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Enabled"
            - "Disabled"
            - "NotActivated"
            - "Unassigned"
      - name: "type"
        in: "query"
        description: "Extension type. Multiple values are supported. Please note that\
          \ legacy 'Department' extension type corresponds to 'Call Queue' extensions\
          \ in modern RingCentral product terminology"
        allowEmptyValue: true
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "User"
            - "FaxUser"
            - "FlexibleUser"
            - "VirtualUser"
            - "DigitalUser"
            - "Department"
            - "Announcement"
            - "Voicemail"
            - "SharedLinesGroup"
            - "PagingOnly"
            - "IvrMenu"
            - "ApplicationExtension"
            - "ParkLocation"
            - "Limited"
            - "Bot"
            - "ProxyAdmin"
            - "DelegatedLinesGroup"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtensionListResponse"
      x-api-group: "extension"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    post:
      tags:
      - "Extensions"
      summary: "Create Extension"
      description: "Creates an extension."
      operationId: "createExtension"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtensionCreationRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionCreationResponse"
      x-api-group: "extension"
      x-throttling-group: "Medium"
      x-feature: "EditUsers"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "AddRemoveUsers"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}:
    get:
      tags:
      - "User Settings"
      summary: "Get Extension"
      description: "Returns basic information about a particular extension."
      operationId: "readExtension"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Extension information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtensionInfoResponse"
      x-api-group: "extension"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    put:
      tags:
      - "User Settings"
      summary: "Update Extension"
      description: "Updates user settings."
      operationId: "updateExtension"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtensionUpdateRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtensionInfoResponse"
      x-api-group: "extension"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionInfo OR EditCredentials"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserInfo OR EditUserCredentials"
    delete:
      tags:
      - "User Settings"
      summary: "Delete Extension"
      description: "Deletes extension(s) by ID(s). When an extension is being deleted\
        \ the default API behavior is as follows: ⋅⋅* user's direct numbers are preserved\
        \ by becoming additional company numbers; ⋅⋅* user's digital lines (both device\
        \ & associated phone number) are deleted. You can change this behavior using\
        \ the filters: ..* create unassigned extensions for each digital line of the\
        \ deleted extension by setting the query parameter `savePhoneLines` to `true`\
        \ in request path; ..* remove direct numbers of the deleted extension by setting\
        \ the query parameter `savePhoneNumbers` to `false` in request path"
      operationId: "deleteExtension"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "savePhoneLines"
        in: "query"
        schema:
          type: "boolean"
          default: false
      - name: "savePhoneNumbers"
        in: "query"
        schema:
          type: "boolean"
          default: true
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension"
      x-throttling-group: "Medium"
      x-feature: "EditUsers"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "AddRemoveUsers"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/business-hours:
    get:
      tags:
      - "Business Hours"
      summary: "Get User Business Hours"
      description: "Returns the user business hours schedule. Business hours (and\
        \ After hours - all the remaining time) schedules are commonly used for setting\
        \ call handling rules - `business-hours-rule` and `after-hours-rule` correspondingly.\
        \ **Please note:** If the user business hours are set to 'Custom hours' then\
        \ a particular schedule is returned; however if set to '24 hours/7 days a\
        \ week' the schedule will be empty."
      operationId: "readUserBusinessHours"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserBusinessHoursResponse"
      x-api-group: "extension/business-hours"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    put:
      tags:
      - "Business Hours"
      summary: "Update User Business Hours"
      description: "Updates the user business hours schedule."
      operationId: "updateUserBusinessHours"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserBusinessHoursUpdateRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserBusinessHoursUpdateResponse"
      x-api-group: "extension/business-hours"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserAnsweringRules"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/video-configuration:
    get:
      tags:
      - "Video Configuration"
      summary: "Get User Video Configuration"
      description: "Returns information about video configuration of the current user."
      operationId: "readUserVideoConfiguration"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the current session account"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "User Video Configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserVideoConfiguration"
      x-api-group: "account/extension/video-configuration"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
    put:
      tags:
      - "Video Configuration"
      summary: "Update User Video Configuration"
      description: "Allows to update user video settings, for example video provider."
      operationId: "updateUserVideoConfiguration"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the current session account"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserVideoConfiguration"
        required: true
      responses:
        "200":
          description: "Video Configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserVideoConfiguration"
      x-api-group: "account/extension/video-configuration"
      x-feature: "Meetings, EditMeetingsProvider"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/favorite:
    get:
      tags:
      - "External Contacts"
      summary: "Get Favorite Contact List"
      description: "Returns the list of favorite contacts of the current extension.\
        \ Favorite contacts include both company contacts (extensions) and personal\
        \ contacts (address book records)."
      operationId: "listFavoriteContacts"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Favorite Contact List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteContactList"
      x-api-group: "extension/favorite"
      x-throttling-group: "Light"
      x-feature: "ReadPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "High"
      x-user-permission: "ReadPersonalContacts"
      x-app-permission: "ReadContacts"
    put:
      tags:
      - "External Contacts"
      summary: "Update Favorite Contact List"
      description: "Updates the list of favorite contacts of the current extension.\
        \ Favorite contacts include both company contacts (extensions) and personal\
        \ contacts (address book records).**Please note**: currently personal address\
        \ book size is limited to 10 000 contacts."
      operationId: "updateFavoriteContactList"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteCollection"
        required: false
      responses:
        "200":
          description: "Favorite Contact List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteContactList"
      x-api-group: "extension/favorite"
      x-throttling-group: "Medium"
      x-feature: "EditPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "Limited"
      x-app-permission: "Contacts"
      x-user-permission: "EditPersonalContacts"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/device:
    get:
      tags:
      - "Devices"
      summary: "Get Extension Device List"
      description: "Returns devices of the extension(s) by their ID(s). Batch request\
        \ is supported"
      operationId: "listExtensionDevices"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "linePooling"
        in: "query"
        description: "Pooling type of a device"
        schema:
          type: "string"
          enum:
          - "Host"
          - "Guest"
          - "None"
      - name: "feature"
        in: "query"
        description: "Device feature or multiple features supported"
        schema:
          type: "string"
          enum:
          - "Intercom"
          - "Paging"
          - "BLA"
          - "HELD"
      - name: "page"
        in: "query"
        description: "Number of a page to be returned"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        description: "Number of records per page to be returned"
        schema:
          type: "string"
          default: "100"
      - name: "line"
        in: "query"
        description: "Device type"
        schema:
          type: "string"
          default: "HardPhone"
          enum:
          - "Room"
          - "SoftPhone"
          - "OtherPhone"
          - "HardPhone"
          - "Paging"
          - "WebRTC"
      - name: "lineType"
        in: "query"
        description: "Type of phone line"
        schema:
          type: "string"
          enum:
          - "Standalone"
          - "StandaloneFree"
          - "BlaPrimary"
          - "BlaSecondary"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtensionDevicesResponse"
      x-api-group: "extension/device"
      x-throttling-group: "Light"
      x-feature: "ReadExtensionDevices"
      x-source-file: "rc-platform-device-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserDevices"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/grant:
    get:
      tags:
      - "User Settings"
      summary: "Get Extension Grant List"
      description: "Returns the list of extensions with the information on grants\
        \ given to the current extension regarding them. Currently the list of grants\
        \ include: picking up a call, monitoring, calling or receiving a call on behalf\
        \ of somebody, call delegation and calling paging groups."
      operationId: "listExtensionGrants"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionType"
        in: "query"
        description: "Type of extension to be returned. Multiple values are supported.\
          \ Please note that legacy 'Department' extension type corresponds to 'Call\
          \ Queue' extensions in modern RingCentral product terminology"
        schema:
          type: "string"
          enum:
          - "User"
          - "FaxUser"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ApplicationExtension"
          - "ParkLocation"
          - "Limited"
          - "Bot"
          - "Room"
      - name: "page"
        in: "query"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        schema:
          type: "string"
          default: "100"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtensionGrantListResponse"
      x-api-group: "extension/grant"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/conferencing:
    get:
      tags:
      - "User Settings"
      summary: "Get User Conferencing Settings"
      description: "Returns the information on the Free Conference Calling (FCC) feature\
        \ for a given extension."
      operationId: "readConferencingSettings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "countryId"
        in: "query"
        description: "Internal identifier of a country. If not specified, the response\
          \ is returned for the brand country"
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConferencingInfoResponse"
      x-api-group: "extension/conferencing"
      x-throttling-group: "Light"
      x-feature: "Conferencing"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "OrganizeConference"
    put:
      tags:
      - "User Settings"
      summary: "Update User Conferencing Settings"
      description: "Updates the default conferencing number for the current extension.\
        \ The number can be selected from conferencing numbers of the current extension.\
        \ Updates the setting, allowing participants join the conference before host."
      operationId: "updateConferencingSettings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConferencingInfoRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConferencingInfoResponse"
      x-api-group: "extension/conferencing"
      x-throttling-group: "Medium"
      x-feature: "Conferencing"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-user-permission: "OrganizeConference"
      x-app-permission: "EditExtensions"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting-configuration/profile-image:
    post:
      tags:
      - "Meeting Configuration"
      summary: "Upload User Meeting Profile Image"
      description: "Uploads profile picture for user meetings."
      operationId: "createUserMeetingProfileImage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - "profilePic"
              properties:
                profilePic:
                  type: "string"
                  description: "Profile image file size cannot exceed 2Mb. Supported\
                    \ formats are: JPG/JPEG, GIF and PNG"
                  format: "file"
      responses:
        "204":
          description: "No Content"
      x-api-group: "extension/user"
      x-request-max-body-size: "2m"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/call-queue-presence:
    get:
      tags:
      - "Presence"
      summary: "Get Agent’s Call Queue Presence"
      description: "Returns a list of agent's call queues with the agent presence\
        \ status (per queue)."
      operationId: "readExtensionCallQueuePresence"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "editableMemberStatus"
        in: "query"
        description: "Filtering by the flag 'Allow members to change their Queue Status'.\
          \ If 'true' only queues where user can change his availability status are\
          \ returned"
        schema:
          type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionCallQueuePresenceList"
      x-api-group: "extension/call-queue-presence"
      x-request-max-body-size: "100m"
      x-feature: "ReadPresenceStatus"
      x-throttling-group: "Light"
      x-app-permission: "ReadPresence"
    put:
      tags:
      - "Presence"
      summary: "Update Call Queue Presence"
      description: "Updates availability of the agent for the call queues."
      operationId: "updateExtensionCallQueuePresence"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtensionCallQueueUpdatePresenceList"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionCallQueuePresenceList"
      x-api-group: "extension/call-queue-presence"
      x-request-max-body-size: "100m"
      x-feature: "EditPresenceStatus"
      x-throttling-group: "Medium"
      x-app-permission: "EditPresence"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/message-sync:
    get:
      tags:
      - "Message Store"
      summary: "Sync Messages"
      description: "Synchronizes messages."
      operationId: "syncMessages"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "conversationId"
        in: "query"
        description: "Conversation identifier for the resulting messages. Meaningful\
          \ for SMS and Pager messages only."
        schema:
          type: "integer"
          format: "int64"
      - name: "dateFrom"
        in: "query"
        description: "The start datetime for resulting messages in ISO 8601 format\
          \ including timezone, for example 2016-03-10T18:07:52.534Z. The default\
          \ value is dateTo minus 24 hours"
        schema:
          type: "string"
          format: "date-time"
      - name: "dateTo"
        in: "query"
        description: "The end datetime for resulting messages in ISO 8601 format including\
          \ timezone, for example 2016-03-10T18:07:52.534Z. The default value is current\
          \ time"
        schema:
          type: "string"
          format: "date-time"
      - name: "direction"
        in: "query"
        description: "Direction for the resulting messages. If not specified, both\
          \ inbound and outbound messages are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Inbound"
            - "Outbound"
      - name: "distinctConversations"
        in: "query"
        description: "If 'True', then the latest messages per every conversation ID\
          \ are returned"
        schema:
          type: "boolean"
      - name: "messageType"
        in: "query"
        description: "Type for the resulting messages. If not specified, all types\
          \ of messages are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Fax"
            - "SMS"
            - "VoiceMail"
            - "Pager"
            - "Text"
      - name: "recordCount"
        in: "query"
        description: "Limits the number of records to be returned (works in combination\
          \ with dateFrom and dateTo if specified)"
        schema:
          type: "integer"
      - name: "syncToken"
        in: "query"
        description: "Value of syncToken property of last sync request response"
        schema:
          type: "string"
      - name: "syncType"
        in: "query"
        description: "Type of message synchronization"
        schema:
          type: "string"
          enum:
          - "FSync"
          - "ISync"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessageSyncResponse"
      x-api-group: "extension/message-sync"
      x-throttling-group: "Light"
      x-feature: "ReadMessages"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "ReadMessages"
      x-user-permission: "ReadMessages"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/profile-image:
    get:
      tags:
      - "User Settings"
      summary: "Get User Profile Image"
      description: "Returns a profile image of an extension."
      operationId: "readUserProfileImage"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "User Profile Image (Media Data)"
          content:
            '*/*':
              schema:
                type: "string"
                format: "binary"
            image/png:
              schema:
                type: "string"
                format: "binary"
            image/jpeg:
              schema:
                type: "string"
                format: "binary"
            image/gif:
              schema:
                type: "string"
                format: "binary"
        "304":
          description: "Not Modified"
          content: {}
      x-api-group: "extension/profile-image"
      x-request-max-body-size: "10m"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    put:
      tags:
      - "User Settings"
      summary: "Update User Profile Image"
      description: "Updates the extension profile image"
      operationId: "updateUserProfileImage"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  type: "string"
                  format: "binary"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension/profile-image"
      x-request-max-body-size: "10m"
      x-throttling-group: "Heavy"
      x-feature: "EditExtensionInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserInfo"
    post:
      tags:
      - "User Settings"
      summary: "Upload User Profile Image"
      description: "Uploads the extension profile image."
      operationId: "createUserProfileImage"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - "image"
              properties:
                image:
                  type: "string"
                  format: "binary"
        required: true
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension/profile-image"
      x-request-max-body-size: "10m"
      x-throttling-group: "Heavy"
      x-feature: "EditExtensionInfo"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserInfo"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/profile-image/{scaleSize}:
    get:
      tags:
      - "User Settings"
      summary: "Get Scaled User Profile Image"
      description: "Returns scaled profile image of an extension."
      operationId: "readScaledProfileImage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "scaleSize"
        in: "path"
        description: "Dimensions of a profile image which will be returned in response.\
          \ If this path parameter is not specified in request URI then"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "User Profile Image Media Data"
          content:
            image/jpeg:
              schema:
                type: "string"
                format: "binary"
      x-api-group: "extension/profile-image"
      x-request-max-body-size: "10m"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log:
    get:
      tags:
      - "Call Log"
      summary: "Get User Call Log Records"
      description: "Returns call log records filtered by parameters specified."
      operationId: "readUserCallLog"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionNumber"
        in: "query"
        description: "Extension number of a user. If specified, returns call log for\
          \ a particular extension only"
        schema:
          type: "string"
      - name: "showBlocked"
        in: "query"
        description: "If 'True' then calls from/to blocked numbers are returned"
        schema:
          type: "boolean"
          default: true
      - name: "phoneNumber"
        in: "query"
        description: "Phone number of a caller/callee in e.164 format without a plus\
          \ sign '+'. If specified, all incoming and outgoing calls with this phone\
          \ number are returned"
        schema:
          type: "string"
        example: "12053320032"
      - name: "direction"
        in: "query"
        description: "The direction for the resulting records. If not specified, both\
          \ inbound and outbound records are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Inbound"
            - "Outbound"
      - name: "sessionId"
        in: "query"
        description: "Internal identifier of a session"
        schema:
          type: "string"
      - name: "type"
        in: "query"
        description: "Call type of a record. It is allowed to specify more than one\
          \ type. If not specified, all call types are returned. Multiple values are\
          \ accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Voice"
            - "Fax"
      - name: "transport"
        in: "query"
        description: "Call transport type. 'PSTN' specifies that a call leg is initiated\
          \ from the PSTN network provider; 'VoIP' - from an RC phone. By default\
          \ this filter is disabled"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "PSTN"
            - "VoIP"
      - name: "view"
        in: "query"
        description: "View of call records. The same view parameter specified for\
          \ FSync will be applied for ISync, the view cannot be changed for ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "withRecording"
        in: "query"
        description: "**Deprecated**. Supported for compatibility reasons. `True`\
          \ if only recorded calls are returned. If both `withRecording` and `recordingType`\
          \ are specified, then `withRecording` is ignored"
        schema:
          type: "boolean"
          default: false
      - name: "recordingType"
        in: "query"
        description: "Type of a call recording. If not specified, then calls without\
          \ recordings are also returned"
        schema:
          type: "string"
          enum:
          - "Automatic"
          - "OnDemand"
          - "All"
      - name: "dateTo"
        in: "query"
        description: "The end datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
          \ format including timezone, for example 2016-03-10T18:07:52.534Z. The default\
          \ value is current time"
        schema:
          type: "string"
          format: "date-time"
      - name: "dateFrom"
        in: "query"
        description: "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
          \ format including timezone, for example 2016-03-10T18:07:52.534Z. The default\
          \ value is dateTo minus 24 hours"
        schema:
          type: "string"
          format: "date-time"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are allowed"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). The default value\
          \ is 100. The maximum value is 1000, for detailed call log - 250"
        schema:
          type: "integer"
          default: 100
      - name: "showDeleted"
        in: "query"
        description: "If 'True' then deleted calls are returned"
        schema:
          type: "boolean"
          default: false
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCallLogResponse"
      x-api-group: "extension/call-log"
      x-throttling-group: "Heavy"
      x-feature: "ReadExtensionCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallLog"
      x-user-permission: "ReadCallLog"
    delete:
      tags:
      - "Call Log"
      summary: "Delete User Call Log"
      description: "Deletes filtered call log records."
      operationId: "deleteUserCallLog"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "dateTo"
        in: "query"
        description: "The end datetime for records deletion in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
          \  format including timezone, for example 2016-03-10T18:07:52.534Z. The\
          \ default value is current time"
        schema:
          type: "string"
          format: "date-time"
      responses:
        default:
          description: "Success"
          content: {}
      x-api-group: "extension/call-log"
      x-throttling-group: "Heavy"
      x-feature: "EditExtensionCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "Limited"
      x-app-permission: "EditCallLog"
      x-user-permission: "EditCallLog"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}:
    get:
      tags:
      - "Call Log"
      summary: "Get User Call Record"
      description: "Returns call log records by ID."
      operationId: "readUserCallRecord"
      parameters:
      - name: "callRecordId"
        in: "path"
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      - name: "view"
        in: "query"
        description: "View of call records. The view value specified for 'FSync' will\
          \ also be applied for 'ISync' by default, since it cannot be changed for\
          \ ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Call Log Record"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCallLogRecord"
      x-api-group: "extension/call-log"
      x-throttling-group: "Heavy"
      x-feature: "ReadExtensionCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallLog"
      x-user-permission: "ReadCallLog"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/ringout:
    post:
      tags:
      - "RingOut"
      summary: "Make RingOut Call"
      description: "Makes a 2-leg RingOut call."
      operationId: "createRingOutCallDeprecated"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakeRingOutRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRingOutStatusResponseIntId"
      deprecated: true
      x-api-group: "extension/ringout"
      x-source-file: "rc-platform-telephony.yml"
      x-availability: "High"
      x-throttling-group: "Heavy"
      x-app-permission: "RingOut"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/ringout/{ringoutId}:
    get:
      tags:
      - "RingOut"
      summary: "Get RingOut Call Status"
      description: "Returns status of a 2-leg RingOut call."
      operationId: "readRingOutCallStatusDeprecated"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ringoutId"
        in: "path"
        description: "Internal identifier of a RingOut call"
        required: true
        schema:
          type: "integer"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRingOutStatusResponse"
      deprecated: true
      x-api-group: "extension/ringout"
      x-source-file: "rc-platform-telephony.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "RingOut"
    delete:
      tags:
      - "RingOut"
      summary: "Cancel RingOut Call"
      description: "Cancels a 2-leg RingOut call."
      operationId: "deleteRingOutCallDeprecated"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ringoutId"
        in: "path"
        description: "Internal identifier of a RingOut call"
        required: true
        schema:
          type: "integer"
      responses:
        "204":
          description: "No Content"
          content: {}
      deprecated: true
      x-api-group: "extension/ringout"
      x-source-file: "rc-platform-telephony.yml"
      x-availability: "High"
      x-throttling-group: "Heavy"
      x-app-permission: "RingOut"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log-sync:
    get:
      tags:
      - "Call Log"
      summary: "Sync User Call Log"
      description: "Synchronizes call log records."
      operationId: "syncUserCallLog"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "syncType"
        in: "query"
        description: "Type of synchronization"
        schema:
          type: "string"
          default: "FSync"
          enum:
          - "FSync"
          - "ISync"
      - name: "syncToken"
        in: "query"
        description: "Value of syncToken property of last sync request response"
        schema:
          type: "string"
      - name: "dateFrom"
        in: "query"
        description: "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
          \ format including timezone, for example 2016-03-10T18:07:52.534Z. The default\
          \ value is the current moment"
        schema:
          type: "string"
          format: "date-time"
      - name: "recordCount"
        in: "query"
        description: "For 'FSync' the parameter is mandatory, it limits the number\
          \ of records to be returned in response. For 'ISync' it specifies with how\
          \ many records to extend sync Frame to the past, the maximum number of records\
          \ is 250"
        schema:
          type: "integer"
      - name: "statusGroup"
        in: "query"
        description: "Type of calls to be returned. The default value is 'All'"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Missed"
            - "All"
      - name: "view"
        in: "query"
        description: "View of call records. The same view parameter specified for\
          \ FSync will be applied for ISync, the view cannot be changed for ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "showDeleted"
        in: "query"
        description: "Supported for ISync. If 'True' then deleted call records are\
          \ returned"
        schema:
          type: "boolean"
          default: false
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallLogSync"
      x-api-group: "extension/call-log-sync"
      x-throttling-group: "Heavy"
      x-feature: "ReadExtensionCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "High"
      x-app-permission: "ReadCallLog"
      x-user-permission: "ReadCallLog"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/active-calls:
    get:
      tags:
      - "Call Log"
      summary: "Get User Active Calls"
      description: "Returns records of all extension calls that are in progress, ordered\
        \ by start time in descending order."
      operationId: "listExtensionActiveCalls"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "direction"
        in: "query"
        description: "The direction for the result records. If not specified, both\
          \ inbound and outbound records are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Inbound"
            - "Outbound"
      - name: "view"
        in: "query"
        description: "View of call records. The same view parameter specified for\
          \ FSync will be applied for ISync, the view cannot be changed for ISync"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "Detailed"
      - name: "type"
        in: "query"
        description: "Call type of a record. If not specified, all call types are\
          \ returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Voice"
            - "Fax"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are allowed"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActiveCallsResponse"
      x-api-group: "extension/active-calls"
      x-throttling-group: "Heavy"
      x-feature: "ReadExtensionCallLog"
      x-source-file: "rc-platform-call-log.yml"
      x-availability: "Limited"
      x-app-permission: "ReadCallLog"
      x-user-permission: "ReadCallLog"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-id:
    get:
      tags:
      - "User Settings"
      summary: "Get Extension Caller ID"
      description: "Returns information on an outbound caller ID of an extension."
      operationId: "readExtensionCallerId"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionCallerIdInfo"
      x-api-group: "extension/caller-id"
      x-throttling-group: "Light"
      x-feature: "ReadOutboundCallerId"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCallerIDSettings"
    put:
      tags:
      - "User Settings"
      summary: "Update Extension Caller ID"
      description: "Updates outbound caller ID information of an extension."
      operationId: "updateExtensionCallerId"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtensionCallerIdInfoRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtensionCallerIdInfo"
      x-api-group: "extension/caller-id"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-throttling-group: "Medium"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditCallerIDSettings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/answering-rule:
    get:
      tags:
      - "Call Handling Rules"
      summary: "Get Call Handling Rules"
      description: "Returns call handling rules of an extension."
      operationId: "listAnsweringRules"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "type"
        in: "query"
        description: "Filters custom call handling rules of the extension"
        schema:
          type: "string"
          enum:
          - "Custom"
      - name: "view"
        in: "query"
        schema:
          type: "string"
          default: "Simple"
          enum:
          - "Detailed"
          - "Simple"
      - name: "enabledOnly"
        in: "query"
        description: "If true, then only active call handling rules are returned"
        schema:
          type: "boolean"
          default: false
      - name: "page"
        in: "query"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        schema:
          type: "string"
          default: "100"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAnsweringRuleList"
      x-api-group: "extension/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserAnsweringRules"
    post:
      tags:
      - "Call Handling Rules"
      summary: "Create Call Handling Rule"
      description: "Creates a custom call handling rule for a particular caller ID."
      operationId: "createAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAnsweringRuleRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomAnsweringRuleInfo"
      x-api-group: "extension/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserAnsweringRules"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}:
    get:
      tags:
      - "Call Handling Rules"
      summary: "Get Call Handling Rule"
      description: "Returns a call handling rule by ID."
      operationId: "readAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ruleId"
        in: "path"
        description: "Internal identifier of an answering rule. The value can be standard\
          \ digital ID or specific ID - either 'business-hours-rule' or 'after-hours-rule'"
        required: true
        schema:
          type: "string"
      - name: "showInactiveNumbers"
        in: "query"
        description: "Indicates whether inactive numbers should be returned or not"
        schema:
          type: "boolean"
          default: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnsweringRuleInfo"
      x-api-group: "extension/answering-rule"
      x-throttling-group: "Light"
      x-feature: "ReadExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserAnsweringRules"
    put:
      tags:
      - "Call Handling Rules"
      summary: "Update Call Handling Rule"
      description: "Updates a custom call handling rule for a particular caller ID."
      operationId: "updateAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ruleId"
        in: "path"
        description: "Internal identifier of an answering rule"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAnsweringRuleRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnsweringRuleInfo"
      x-api-group: "extension/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserAnsweringRules"
    delete:
      tags:
      - "Call Handling Rules"
      summary: "Delete Call Handling Rule"
      description: "Deletes a custom call handling rule by a particular ID."
      operationId: "deleteAnsweringRule"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ruleId"
        in: "path"
        description: "Internal identifier of an answering rule"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension/answering-rule"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserAnsweringRules"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/company-pager:
    post:
      tags:
      - "Pager Messages"
      summary: "Create Internal Text Message"
      description: "Creates and sends an internal text message."
      operationId: "createInternalTextMessage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInternalTextMessageRequest"
        required: true
      responses:
        "200":
          description: "Created Text Message"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInternalTextMessageInfoResponse"
      x-api-group: "extension/company-pager"
      x-throttling-group: "Medium"
      x-feature: "PagesSending"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "InternalMessages"
      x-user-permission: "InternalSMS"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/authz-profile:
    get:
      tags:
      - "User Permissions"
      summary: "Get Authorization Profile"
      description: "Returns the list of user permissions granted at authorization\
        \ procedure. Please note: Some permissions may be restricted by extension\
        \ type."
      operationId: "readAuthorizationProfile"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        required: true
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthProfileResource"
      x-api-group: "extension/authz-profile"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Medium"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/authz-profile/check:
    get:
      tags:
      - "User Permissions"
      summary: "Check User Permission"
      description: "Checks if a certain user permission is activated for a particular\
        \ extension."
      operationId: "checkUserPermission"
      parameters:
      - name: "permissionId"
        in: "query"
        schema:
          type: "string"
      - name: "targetExtensionId"
        in: "query"
        schema:
          type: "string"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Authorization Profile Resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthProfileCheckResource"
      x-api-group: "extension/authz-profile/check"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/call-queues:
    put:
      tags:
      - "Call Queues"
      summary: "Update User Call Queues"
      description: "Updates the list of call queues where the user is an agent. This\
        \ is a full update request, which means that if any queue where the user is\
        \ an agent is not mentioned in request, then the user is automatically removed\
        \ from this queue."
      operationId: "updateUserCallQueues"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCallQueues"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCallQueues"
      x-api-group: "extension/call-queues"
      x-throttling-group: "Medium"
      x-feature: "EditCallQueuePresence"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-user-permission: "EditCallQueuePresence"
      x-app-permission: "EditAccounts"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/emergency-locations:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get User Emergency Location List"
      description: "Returns a list of emergency response locations available for the\
        \ current user extension."
      operationId: "getExtensionEmergencyLocations"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "siteId"
        in: "query"
        style: "form"
        explode: true
        description: "Internal identifier of a site. To filter Main Site (Company)\
          \ main-site must be specified. Supported only If multi-site feature is enabled\
          \ for the account"
        schema:
          type: "array"
          items:
            type: "string"
      - name: "searchString"
        in: "query"
        description: "Filters entries by the specified substring (search by chassis\
          \ ID, switch name or address) The characters range is 0-64 (if empty the\
          \ filter is ignored)"
        schema:
          type: "string"
      - name: "domesticCountryId"
        in: "query"
        schema:
          type: "string"
      - name: "orderBy"
        in: "query"
        description: "Comma-separated list of fields to order results prefixed by\
          \ plus sign '+' (ascending order) or minus sign '-' (descending order).\
          \ The default value is `+visibility`, which means public ERLs will be returned\
          \ first in the list, then - private ones"
        schema:
          type: "string"
          default: "+visibility"
          enum:
          - "+name"
          - "+siteName"
          - "+address"
          - "+addressStatus"
          - "+usageStatus"
          - "+visibility"
          - "-name"
          - "-siteName"
          - "-address"
          - "-addressStatus"
          - "-usageStatus"
          - "-visibility"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). The values supported:\
          \ `Max` or numeric value. If not specified, 100 records are returned per\
          \ one page"
        schema:
          type: "integer"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are supported"
        schema:
          type: "integer"
          default: 1
      - name: "visibility"
        in: "query"
        required: false
        description: "Specifies whether to return only private or only public (company)\
          \ ERLs (Emergency Response Locations)"
        schema:
          type: "string"
          enum:
          - "Private"
          - "Public"
      - name: "If-None-Match"
        in: "header"
        description: "Flag that provides matching the client 'etag' value with the\
          \ server one"
        schema:
          type: "string"
      responses:
        "200":
          description: "User Emergency Location List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyLocationsResource"
      x-api-group: "extension/emergency-locations"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Create User Emergency Location"
      description: "Creates a personal emergency response location for the current\
        \ user."
      operationId: "createExtensionEmergencyLocation"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserEmergencyLocationRequest"
        required: true
      responses:
        "200":
          description: "Emergency Location Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyLocationInfo"
      x-api-group: "extension/emergency-locations"
      x-throttling-group: "Heavy"
      x-feature: "EmergencyFramework or NewEmergencyCallingFramework"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EmergencyFramework"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/emergency-locations/{locationId}:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get User Emergency Location"
      description: "Returns personal emergency response location for the current user."
      operationId: "getExtensionEmergencyLocation"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "locationId"
        in: "path"
        description: "Internal identifier of emergency location"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyLocationInfo"
      x-api-group: "extension/emergency-locations"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
    put:
      tags:
      - "Automatic Location Updates"
      summary: "Update User Emergency Location"
      description: "Updates a personal emergency response location by the current\
        \ user or admin."
      operationId: "updateExtensionEmergencyLocation"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "locationId"
        in: "path"
        description: "Internal identifier of an emergency response location to be\
          \ deleted"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmergencyLocationInfo"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmergencyLocationInfo"
      x-api-group: "extension/emergency-locations"
      x-throttling-group: "Light"
      x-feature: "EmergencyFramework or NewEmergencyCallingFramework"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EmergencyFramework"
    delete:
      tags:
      - "Automatic Location Updates"
      summary: "Delete User Emergency Location"
      description: "Deletes a personal emergency response location by ID by the current\
        \ user or admin. Multiple personal emergency response locations can be deleted\
        \ by one API call"
      operationId: "deleteExtensionEmergencyLocation"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "locationId"
        in: "path"
        description: "Internal identifier of an emergency response location to be\
          \ deleted"
        required: true
        schema:
          type: "string"
      - name: "validateOnly"
        in: "query"
        description: "Flag indicating that only validation of Emergency Response Locations\
          \ to be deleted is required."
        required: false
        schema:
          type: "boolean"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/emergency-locations"
      x-throttling-group: "Heavy"
      x-feature: "EmergencyFramework or NewEmergencyCallingFramework"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EmergencyFramework"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/forwarding-number:
    get:
      tags:
      - "Call Forwarding"
      summary: "Get Forwarding Number List"
      description: "Returns the list of extension phone numbers used for call forwarding\
        \ and call flip. The returned list contains all the extension phone numbers\
        \ used for call forwarding and call flip."
      operationId: "listForwardingNumbers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted."
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)."
        schema:
          type: "integer"
          default: 100
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtensionForwardingNumberListResponse"
      x-api-group: "extension/forwarding-number"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserForwardingFlipNumbers"
    post:
      tags:
      - "Call Forwarding"
      summary: "Create Forwarding Number"
      description: "Adds a new forwarding number to the forwarding number list."
      operationId: "createForwardingNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateForwardingNumberRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForwardingNumberInfo"
      x-api-group: "extension/forwarding-number"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserForwardingFlipNumbers"
    delete:
      tags:
      - "Call Forwarding"
      summary: "Delete Forwarding Numbers"
      description: "Deletes multiple forwarding numbers from the forwarding number\
        \ list by IDs."
      operationId: "deleteForwardingNumbers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteForwardingNumbersRequest"
        required: true
      responses:
        "204":
          description: "No content"
          content: {}
      x-api-group: "extension/forwarding-number"
      x-throttling-group: "Heavy"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserForwardingFlipNumbers"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}:
    get:
      tags:
      - "Call Forwarding"
      summary: "Get Forwarding Number"
      description: "Returns a specific forwarding number."
      operationId: "readForwardingNumber"
      parameters:
      - name: "forwardingNumberId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForwardingNumberInfo"
      x-api-group: "extension/forwarding-number"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserForwardingFlipNumbers"
    put:
      tags:
      - "Call Forwarding"
      summary: "Update Forwarding Number"
      description: "Updates the existing forwarding number from the forwarding number\
        \ list."
      operationId: "updateForwardingNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "forwardingNumberId"
        in: "path"
        description: "Internal identifier of a forwarding number; returned in response\
          \ in the 'id' field"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateForwardingNumberRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForwardingNumberInfo"
      x-api-group: "extension/forwarding-number"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserForwardingFlipNumbers"
    delete:
      tags:
      - "Call Forwarding"
      summary: "Delete Forwarding Number"
      description: "Deletes a forwarding number from the forwarding number list by\
        \ its ID."
      operationId: "deleteForwardingNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "forwardingNumberId"
        in: "path"
        description: "Internal identifier of a forwarding number"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
      x-api-group: "extension/forwarding-number"
      x-throttling-group: "Medium"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserForwardingFlipNumbers"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting:
    get:
      tags:
      - "Meeting Management"
      summary: "Get Scheduled Meetings"
      description: "Returns a list of user meetings scheduled for the future (meetings\
        \ of 'Instant' type are not included)."
      operationId: "listMeetings"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK: Scheduled Meeting List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingsResource"
      x-api-group: "extension/meeting"
      x-throttling-group: "Light"
      x-feature: "Meetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-user-permission: "Meetings"
      x-app-permission: "Meetings"
    post:
      tags:
      - "Meeting Management"
      summary: "Create Meeting"
      description: "Creates a new meeting."
      operationId: "createMeeting"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingRequestResource"
        required: false
      responses:
        "201":
          description: "Created Meeting"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingResponseResource"
      x-api-group: "extension/meeting"
      x-throttling-group: "Medium"
      x-feature: "EditMeetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-user-permission: "Meetings"
      x-app-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/user-settings:
    get:
      tags:
      - "Meeting Configuration"
      summary: "Get Meeting User Settings"
      description: "Returns user settings for meetings."
      operationId: "GetUserSetting"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK: User Setting"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingUserSettingsResponse"
      x-api-group: "extension/meeting/user-settings"
      x-throttling-group: "Light"
      x-feature: "Meetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}:
    get:
      tags:
      - "Meeting Management"
      summary: "Get Meeting Info"
      description: "Returns a particular meetings details by ID."
      operationId: "readMeeting"
      parameters:
      - name: "meetingId"
        in: "path"
        description: "Internal identifier of a RingCentral meeting"
        required: true
        schema:
          type: "string"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK: Meeting Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingResponseResource"
      x-api-group: "extension/meeting"
      x-throttling-group: "Light"
      x-feature: "Meetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
    put:
      tags:
      - "Meeting Management"
      summary: "Update Meeting"
      description: "Modifies a particular meeting."
      operationId: "updateMeeting"
      parameters:
      - name: "meetingId"
        in: "path"
        description: "Internal identifier of a RingCentral meeting"
        required: true
        schema:
          type: "string"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingRequestResource"
        required: false
      responses:
        "200":
          description: "OK: Updated Meeting Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingResponseResource"
      x-api-group: "extension/meeting"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-throttling-group: "Medium"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
    delete:
      tags:
      - "Meeting Management"
      summary: "Delete Meeting"
      description: "Deletes a scheduled meeting."
      operationId: "deleteMeeting"
      parameters:
      - name: "meetingId"
        in: "path"
        description: "Internal identifier of a RingCentral meeting"
        required: true
        schema:
          type: "string"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension/meeting"
      x-throttling-group: "Medium"
      x-feature: "EditMeetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}/end:
    post:
      tags:
      - "Meeting Management"
      summary: "End Meeting"
      description: "Ends a meetings which is in progress."
      operationId: "endMeeting"
      parameters:
      - name: "meetingId"
        in: "path"
        description: "Internal identifier of a RingCentral meeting"
        required: true
        schema:
          type: "string"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension/meeting/end"
      x-throttling-group: "Medium"
      x-feature: "EditMeetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}/invitation:
    get:
      tags:
      - "Meeting Management"
      summary: "Get Meeting Invitation"
      description: "Returns a meeting invitation by ID."
      operationId: "readMeetingInvitation"
      parameters:
      - name: "meetingId"
        in: "path"
        description: "Internal identifier of a RingCentral meeting"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of an account or tilde (~) to indicate the\
          \ account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK: Meeting Invitation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicMeetingInvitationResponse"
      x-api-group: "extension/meeting"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/service-info:
    get:
      tags:
      - "Meeting Configuration"
      summary: "Get Meeting Service Info"
      description: "Returns information on dial-in numbers for meetings, support and\
        \ international dial-in numbers URIs and meeting account information."
      operationId: "readMeetingServiceInfo"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK: Meeting Service Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingServiceInfoResource"
      x-api-group: "extension/meeting/service-info"
      x-throttling-group: "Light"
      x-feature: "Meetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
    patch:
      tags:
      - "Meeting Configuration"
      summary: "Update Meeting Service Info"
      description: "Updates personal meeting identifier."
      operationId: "updateMeetingServiceInfo"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingServiceInfoRequest"
        required: true
      responses:
        "200":
          description: "OK: Meeting Service Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingServiceInfoResource"
      x-api-group: "extension/meeting/service-info"
      x-throttling-group: "Medium"
      x-feature: "EditMeetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/presence:
    get:
      tags:
      - "Presence"
      summary: "Get User Presence Status"
      description: "Returns presence status of an extension or several extensions\
        \ by their ID(s). Batch request is supported. The 'presenceStatus' is returned\
        \ as Offline (the parameters 'telephonyStatus', 'message', 'userStatus' and\
        \ 'dndStatus' are not returned at all) for the following extension types:\
        \ Department/Announcement Only/Take Messages Only (Voicemail)/Fax User/Paging\
        \ Only Group/Shared Lines Group/IVR Menu/Application Extension/Park Location.If\
        \ the user requests his/her own presence status, the response contains actual\
        \ presence status even if the status publication is turned off. Batch request\
        \ is supported. For batch requests the number of extensions in one request\
        \ is limited to 30. If more extensions are included in the request, the error\
        \ code 400 Bad Request is returned with the logical error code InvalidMultipartRequest\
        \ and the corresponding message 'Extension Presence Info multipart request\
        \ is limited to 30 extensions'."
      operationId: "readUserPresenceStatus"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "detailedTelephonyState"
        in: "query"
        description: "Whether to return detailed telephony state"
        schema:
          type: "boolean"
      - name: "sipData"
        in: "query"
        description: "Whether to return SIP data"
        schema:
          type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPresenceInfo"
      x-api-group: "extension/presence"
      x-request-max-body-size: "100m"
      x-feature: "ReadPresenceStatus"
      x-throttling-group: "Light"
      x-app-permission: "ReadPresence"
      x-user-permission: "ReadPresenceStatus"
    put:
      tags:
      - "Presence"
      summary: "Update User Presence Status"
      description: "Updates user-defined extension presence status, status message\
        \ and DnD status by extension ID. Supported for regular User extensions only.\
        \ The extension types listed do not support presence status: Department, Announcement\
        \ Only, Take Messages Only (Voicemail), Fax User, Paging Only Group, Shared\
        \ Lines Group, IVR Menu, Application Extension."
      operationId: "updateUserPresenceStatus"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PresenceInfoRequest"
        required: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresenceInfoResponse"
      x-api-group: "extension/presence"
      x-request-max-body-size: "100m"
      x-feature: "EditPresenceStatus"
      x-throttling-group: "Medium"
      x-app-permission: "EditPresence"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/fax:
    post:
      tags:
      - "Fax"
      summary: "Create Fax Message"
      description: "Creates and sends/resends a fax message. Resend can be implemented\
        \ if sending has failed. Fax attachment size (both single and total) is limited\
        \ to 50Mb."
      operationId: "createFaxMessage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account (integer) or tilde\
          \ (~) to indicate the account which was logged-in within the current session."
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension (integer) or tilde (~) to\
          \ indicate the extension assigned to the account logged-in within the current\
          \ session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - "attachment"
              - "to"
              properties:
                attachment:
                  type: "string"
                  description: "File to upload"
                  format: "binary"
                faxResolution:
                  type: "string"
                  description: "Resolution of Fax"
                  enum:
                  - "High"
                  - "Low"
                to:
                  type: "array"
                  description: "To Phone Number"
                  items:
                    type: "string"
                sendTime:
                  type: "string"
                  description: "Timestamp to send fax at. If not specified (current\
                    \ or the past), the fax is sent immediately"
                  format: "date-time"
                isoCode:
                  type: "string"
                  description: "ISO Code. e.g UK"
                coverIndex:
                  type: "integer"
                  description: "Cover page identifier. If coverIndex is set to '0'\
                    \ (zero) cover page is not attached. For the list of available\
                    \ cover page identifiers (1-13) please call the Fax Cover Pages\
                    \ method. If not specified, the default cover page is attached\
                    \ (which is configured in 'Outbound Fax Settings')"
                  format: "int32"
                coverPageText:
                  type: "string"
                  description: "Cover page text, entered by the fax sender and printed\
                    \ on the cover page. Maximum length is limited to 1024 symbols"
        required: true
      responses:
        "200":
          description: "Fax Message"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FaxResponse"
      x-api-group: "extension/fax"
      x-request-max-body-size: "30m"
      x-throttling-group: "Heavy"
      x-feature: "FaxSending"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "Faxes"
      x-user-permission: "OutboundFaxes"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/ring-out:
    post:
      tags:
      - "RingOut"
      summary: "Make RingOut Call"
      description: "Makes a 2-leg RingOut call."
      operationId: "createRingOutCall"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakeRingOutRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRingOutStatusResponse"
      x-api-group: "extension/ringout"
      x-source-file: "rc-platform-telephony.yml"
      x-availability: "High"
      x-throttling-group: "Heavy"
      x-app-permission: "RingOut"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/ring-out/{ringoutId}:
    get:
      tags:
      - "RingOut"
      summary: "Get RingOut Call Status"
      description: "Returns the status of a 2-leg RingOut call."
      operationId: "readRingOutCallStatus"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ringoutId"
        in: "path"
        description: "Internal identifier of a RingOut call"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRingOutStatusResponse"
      x-api-group: "extension/ringout"
      x-source-file: "rc-platform-telephony.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "RingOut"
    delete:
      tags:
      - "RingOut"
      summary: "Cancel RingOut Call"
      description: "Cancels a 2-leg RingOut call."
      operationId: "deleteRingOutCall"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "ringoutId"
        in: "path"
        description: "Internal identifier of a RingOut call"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "Success"
          content: {}
      x-api-group: "extension/ringout"
      x-source-file: "rc-platform-telephony.yml"
      x-availability: "High"
      x-throttling-group: "Heavy"
      x-app-permission: "RingOut"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/administered-sites:
    get:
      tags:
      - "Site Administration"
      summary: "Get User Administered Site List"
      description: "Returns the list of sites administered by the current user."
      operationId: "listAdministeredSites"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Success"
          content: {}
      x-api-group: "extension/administered-sites"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    put:
      tags:
      - "Site Administration"
      summary: "Update User Administered Sites"
      operationId: "updateUserAdministeredSites"
      description: "Updates user administered sites. Note: only IDs of records are\
        \ used for update."
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessSiteCollectionRequest"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessSiteCollectionResource"
      x-api-group: "extension/administered-sites"
      x-throttling-group: "Medium"
      x-feature: "EditAssignedRoles"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditAssignedRoles"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact:
    get:
      tags:
      - "External Contacts"
      summary: "Get Contact List"
      description: "Returns user personal contacts."
      operationId: "listContacts"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "startsWith"
        in: "query"
        description: "If specified, only contacts whose First name or Last name start\
          \ with the mentioned substring are returned. Case-insensitive"
        schema:
          type: "string"
      - name: "sortBy"
        in: "query"
        description: "Sorts results by the specified property"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "FirstName"
            - "LastName"
            - "Company"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "phoneNumber"
        in: "query"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactList"
      x-api-group: "extension/address-book/contact"
      x-throttling-group: "Heavy"
      x-feature: "ReadPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "High"
      x-app-permission: "ReadContacts"
      x-user-permission: "ReadPersonalContacts"
    post:
      tags:
      - "External Contacts"
      summary: "Create Contact"
      description: "Creates personal user contact."
      operationId: "createContact"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "dialingPlan"
        in: "query"
        description: "A country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
          \ format. The default value is home country of the current extension"
        schema:
          type: "string"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonalContactRequest"
        required: false
      responses:
        "200":
          description: "New Contact"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalContactResource"
        "400":
          description: "Contact cannot be created: max contacts count reached ($limit)"
          content: {}
      x-api-group: "extension/address-book/contact"
      x-throttling-group: "Heavy"
      x-feature: "EditPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "Limited"
      x-app-permission: "Contacts"
      x-user-permission: "EditPersonalContacts"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}:
    get:
      tags:
      - "External Contacts"
      summary: "Get Contact"
      description: "Returns contact(s) by ID(s). Batch request is supported."
      operationId: "readContact"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "contactId"
        in: "path"
        description: "Internal identifier of a contact record in the RingCentral database"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        default:
          description: "Contact"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalContactResource"
      x-api-group: "extension/address-book/contact"
      x-throttling-group: "Heavy"
      x-feature: "ReadPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "High"
      x-app-permission: "ReadContacts"
      x-user-permission: "ReadPersonalContacts"
    put:
      tags:
      - "External Contacts"
      summary: "Update Contact"
      description: "Updates personal contact information by contact ID(s). Batch request\
        \ is supported"
      operationId: "updateContact"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "contactId"
        in: "path"
        description: "Internal identifier of a contact record in the RingCentral database"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "dialingPlan"
        in: "query"
        description: "A country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
          \ format. The default value is home country of the current extension"
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonalContactRequest"
        required: false
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalContactResource"
      x-api-group: "extension/address-book/contact"
      x-throttling-group: "Heavy"
      x-feature: "EditPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "Limited"
      x-app-permission: "Contacts"
      x-user-permission: "EditPersonalContacts"
    delete:
      tags:
      - "External Contacts"
      summary: "Delete Contact"
      description: "Deletes contact(s) by ID(s). Batch request is supported."
      operationId: "deleteContact"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "contactId"
        in: "path"
        description: "Internal identifier of a contact record in the RingCentral database"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        default:
          description: "Success"
          content: {}
      x-api-group: "extension/address-book/contact"
      x-throttling-group: "Heavy"
      x-feature: "EditPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "Limited"
      x-app-permission: "Contacts"
      x-user-permission: "EditPersonalContacts"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meetings-configuration/assisted:
    get:
      tags:
      - "Meeting Configuration"
      summary: "Get Assisted Users"
      description: "Returns assisted users information."
      operationId: "readAssistedUsers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Assisted User Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistedUsersResource"
      x-api-group: "extension/meeting/assistant-info"
      x-throttling-group: "Light"
      x-feature: "Meetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meetings-configuration/assistants:
    get:
      tags:
      - "Meeting Configuration"
      summary: "Get Assistants"
      description: "Returns assistants information."
      operationId: "readAssistants"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK: Assistants Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssistantsResource"
      x-api-group: "extension/meeting/assistant-info"
      x-throttling-group: "Light"
      x-feature: "Meetings"
      x-source-file: "rc-platform-meetings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "Meetings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/sms:
    post:
      tags:
      - "SMS"
      summary: "Send SMS"
      description: "Creates and sends a new text message. You can send SMS messages\
        \ simultaneously to different recipients up to 40 requests per minute; this\
        \ limitation is relevant for all client applications. Sending and receiving\
        \ SMS is available for Toll-Free Numbers within the USA. You can send up to\
        \ 10 attachments in one MMS message; the size of all attachments linked is\
        \ limited to 1500000 bytes."
      operationId: "createSMSMessage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSMSMessage"
          multipart/mixed:
            schema:
              $ref: "#/components/schemas/CreateSMSMessage"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateSMSMessage"
        required: true
      responses:
        "200":
          description: "Message information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSMSMessageInfoResponse"
      x-api-group: "extension/sms"
      x-request-max-body-size: "10m"
      x-throttling-group: "Medium"
      x-feature: "SMSSending"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "SMS"
      x-user-permission: "OutboundSMS"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/assigned-role:
    get:
      tags:
      - "Role Management"
      summary: "Get User Assigned Role List"
      description: "Returns the list of roles assigned to the current extension."
      operationId: "listUserAssignedRoles"
      parameters:
      - name: "showHidden"
        in: "query"
        schema:
          type: "boolean"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Assigned Roles List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedRolesResource"
      x-api-group: "extension/assigned-role"
      x-throttling-group: "Light"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    put:
      tags:
      - "Role Management"
      summary: "Update User Assigned Roles"
      description: "Updates the list of assigned roles for the current user."
      operationId: "updateUserAssignedRoles"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignedRolesResource"
        required: false
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedRolesResource"
      x-api-group: "extension/assigned-role"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-throttling-group: "Medium"
      x-app-permission: "RoleManagement"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/assigned-role/default:
    put:
      tags:
      - "Role Management"
      summary: "Assign Default Role"
      description: "Assigns the default role to the currently logged-in user extension."
      operationId: "assignDefaultRole"
      parameters:
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Assigned Roles Resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedRolesResource"
      x-api-group: "extension/assigned-role"
      x-throttling-group: "Medium"
      x-feature: "EditUsers"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "Limited"
      x-app-permission: "RoleManagement"
      x-user-permission: "Users"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting-recordings:
    get:
      tags:
      - "Meeting Recordings"
      summary: "Get User Meeting Recordings List"
      description: "Returns the list of meetings recordings for the current user."
      operationId: "listUserMeetingRecordings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "meetingId"
        in: "query"
        description: "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime`\
          \ can be specified"
        schema:
          type: "string"
      - name: "meetingStartTimeFrom"
        in: "query"
        description: "Recordings of meetings started after the time specified in [ISO\
          \ 8601](https://en.wikipedia.org/wiki/ISO_8601) format, will be returned,\
          \ for example *2016-03-10T18:07:52.534Z*. Either `meetingId` or `meetingStartTime`/`meetingEndTime`\
          \ can be specified"
        schema:
          type: "string"
      - name: "meetingStartTimeTo"
        in: "query"
        description: "Recordings of meetings started before the time specified in\
          \ [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format will be returned,\
          \ for example *2016-03-10T18:07:52.534Z*. The default value is current time.\
          \ Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified"
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Page number"
        schema:
          type: "integer"
      - name: "perPage"
        in: "query"
        description: "Number of items per page. The `max` value is supported to indicate\
          \ the maximum size - 300"
        schema:
          maximum: 300
          type: "integer"
          default: 100
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMeetingRecordingsResponse"
      x-api-group: "account/extension/meeting-recordings"
      x-throttling-group: "Medium"
      x-feature: "MeetingsPersonalRecordings"
      x-source-file: "rc-platform-meeting-recordings.yml"
      x-availability: "High"
      x-app-permission: "Meetings"
      x-user-permission: "MeetingsRecordings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/notification-settings:
    get:
      tags:
      - "User Settings"
      summary: "Get Notification Settings"
      description: "Returns notification settings for the current extension.\n <p>Knowledge\
        \ Article: <a href=\"https://success.ringcentral.com/articles/RC_Knowledge_Article/9740\"\
        >User Settings - Set up Message Notifications</a></p>"
      operationId: "readNotificationSettings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationSettings"
      x-api-group: "extension/notification-settings"
      x-throttling-group: "Light"
      x-feature: "ReadMessageAndNotificationSettings"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadMessagesNotificationsSettings"
    put:
      tags:
      - "User Settings"
      summary: "Update Notification Settings"
      description: "Updates notification settings for the current extension.\n<p>Knowledge\
        \ Article: <a href=\"https://success.ringcentral.com/articles/RC_Knowledge_Article/9740\"\
        >User Settings - Set up Message Notifications</a></p>"
      operationId: "updateNotificationSettings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSettingsUpdateRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationSettings"
      x-api-group: "extension/notification-settings"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-throttling-group: "Medium"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditMessagesNotificationsSettings"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/forward-all-calls:
    get:
      tags:
      - "Call Handling Rules"
      description: "Returns information about *Forward All Calls* feature setting."
      summary: "Get Forward All Calls"
      operationId: "getForwardAllCalls"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForwardAllCallsInfo"
      x-api-group: "extension/forward-all-calls"
      x-feature: "ReadExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-throttling-group: "Light"
    patch:
      tags:
      - "Call Handling Rules"
      description: "Updates *Forward All Calls* feature setting."
      summary: "Update Forward All Calls"
      operationId: "updateForwardAllCalls"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForwardAllCallsInfo"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForwardAllCallsInfo"
      x-api-group: "extension/forward-all-calls"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-throttling-group: "Medium"
      x-app-permission: "EditExtensions"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/mms:
    post:
      tags:
      - "SMS"
      summary: "Send MMS"
      description: "Creates and sends media messages. Sending MMS messages simultaneously\
        \ to different recipients is limited up to 50 requests per minute; relevant\
        \ for all client applications."
      operationId: "createMMS"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "MMS envelope and content"
        content:
          multipart/mixed:
            schema:
              $ref: "#/components/schemas/CreateMMSMessage"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateMMSMessage"
        required: true
      responses:
        default:
          description: "MMS Message"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSMSMessageInfoResponse"
      x-api-group: "extension/sms"
      x-request-max-body-size: "10m"
      x-throttling-group: "Medium"
      x-feature: "SMSSending"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "SMS"
      x-user-permission: "OutboundSMS"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/features:
    get:
      tags:
      - "Features"
      summary: "Get User Features"
      description: "Returns the list of supported features and information on their\
        \ availability for the current extension. Specific feature(s) might be checked\
        \ by providing `featureId` query param. Multiple values supported, format:\
        \ `?featureId=Feature1&featureId=Feature2`. To get only available features\
        \ in order to decrease response size, `availableOnly=true` query param might\
        \ be specified.\nIn case the feature is available for the current user, `\"\
        available\": true` is returned in the response for the record with corresponding\
        \ feature `id`. Otherwise, additional attribute `reason` is returned with\
        \ the appropriate code:\n* `ServicePlanLimitation` - the feature not included\
        \ to the account service plan;\n* `AccountLimitation` - the feature is turned\
        \ off for the account;\n* `ExtensionTypeLimitation` - the feature is not applicable\
        \ for the extension type;\n* `ExtensionLimitation` - the feature is not available\
        \ for the extension, e.g., additional license required;\n* `InsufficientPermissions`\
        \ - required permission not granted to the current user (not the one, who\
        \ is specified in the URL, but the one who's access token is used);\n* `ConfigurationLimitation`\
        \ - the feature is turned off for the extension, e.g., by the account administrator.\n\
        \nAlso, some feature may have some additional parameters, e.g., limits, which\
        \ are returned in `params` attribute as a name-value collection:\n\n    {\n\
        \      \"id\": \"HUD\",\n      \"available\": true,\n      \"params\": [\n\
        \        {\n          \"name\": \"limitMax\",\n          \"value\": \"100\"\
        \n        }\n      ]\n    }"
      operationId: "readUserFeatures"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "availableOnly"
        in: "query"
        schema:
          type: "boolean"
          default: false
      - name: "featureId"
        in: "query"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "Feature List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureList"
      x-api-group: "features"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensions"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store:
    get:
      tags:
      - "Message Store"
      summary: "Get Message List"
      description: "Returns the list of messages from an extension mailbox."
      operationId: "listMessages"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "availability"
        in: "query"
        description: "Specifies the availability status for the resulting messages.\
          \ Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Alive"
            - "Deleted"
            - "Purged"
      - name: "conversationId"
        in: "query"
        description: "Specifies the conversation identifier for the resulting messages"
        schema:
          type: "integer"
      - name: "dateFrom"
        in: "query"
        description: "The start datetime for resulting messages in ISO 8601 format\
          \ including timezone, for example 2016-03-10T18:07:52.534Z. The default\
          \ value is dateTo minus 24 hours"
        schema:
          type: "string"
          format: "date-time"
      - name: "dateTo"
        in: "query"
        description: "The end datetime for resulting messages in ISO 8601 format including\
          \ timezone, for example 2016-03-10T18:07:52.534Z. The default value is current\
          \ time"
        schema:
          type: "string"
          format: "date-time"
      - name: "direction"
        in: "query"
        description: "The direction for the resulting messages. If not specified,\
          \ both inbound and outbound messages are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Inbound"
            - "Outbound"
      - name: "distinctConversations"
        in: "query"
        description: "If 'True', then the latest messages per every conversation ID\
          \ are returned"
        schema:
          type: "boolean"
      - name: "messageType"
        in: "query"
        description: "The type of the resulting messages. If not specified, all messages\
          \ without message type filtering are returned. Multiple values are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Fax"
            - "SMS"
            - "VoiceMail"
            - "Pager"
            - "Text"
      - name: "readStatus"
        in: "query"
        description: "The read status for the resulting messages. Multiple values\
          \ are accepted"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Read"
            - "Unread"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "phoneNumber"
        in: "query"
        description: "The phone number. If specified, messages are returned for this\
          \ particular phone number only"
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessageList"
      x-api-group: "extension/message-store"
      x-throttling-group: "Light"
      x-feature: "ReadMessages"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "ReadMessages"
      x-user-permission: "ReadMessages"
    delete:
      tags:
      - "Message Store"
      summary: "Delete Conversation"
      description: "Deletes conversation(s) by conversation ID(s). Batch request is\
        \ supported, max number of IDs passed as query/path parameters is 50. Alternative\
        \ syntax is supported - user conversations can be deleted by passing multiple\
        \ IDs in request body as an array of string, max number of conversation IDs\
        \ passed in request body is 100. In this case asterisk is used in the path\
        \ instead of IDs"
      operationId: "deleteMessageByFilter"
      parameters:
      - name: "conversationId"
        in: "query"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
      - name: "dateTo"
        in: "query"
        description: "Messages received earlier then the date specified will be deleted.\
          \ The default value is current datetime"
        schema:
          type: "string"
          format: "date-time"
      - name: "type"
        in: "query"
        description: "Type of messages to be deleted"
        schema:
          type: "string"
          default: "All"
          enum:
          - "Fax"
          - "SMS"
          - "VoiceMail"
          - "Pager"
          - "Text"
          - "All"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension/message-store"
      x-throttling-group: "Medium"
      x-feature: "EditMessages"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "Limited"
      x-app-permission: "EditMessages"
      x-user-permission: "EditMessages"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageId}:
    get:
      tags:
      - "Message Store"
      summary: "Get Message"
      description: "Returns individual message record(s) by the given message ID(s).\
        \ The length of inbound messages is unlimited. Batch request is supported."
      operationId: "readMessage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "messageId"
        in: "path"
        description: "Internal identifier of a message"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessageInfoResponse"
        "207":
          description: "Multi-Status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessageMultiResponse"
      x-api-group: "extension/message-store"
      x-throttling-group: "Light"
      x-feature: "ReadMessages"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "ReadMessages"
      x-user-permission: "ReadMessages"
    put:
      tags:
      - "Message Store"
      summary: "Update Message List"
      description: "Updates message(s) by ID(s). Currently only message read status\
        \ can be updated. Batch request is supported, max number of IDs passed as\
        \ query/path parameters is 50. Alternative syntax is supported - user messages\
        \ can be updated by passing multiple IDs in request body as an array of string,\
        \ max number of IDs passed in request body is 1000. In this case asterisk\
        \ is used in the path instead of IDs."
      operationId: "updateMessage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "messageId"
        in: "path"
        description: "Internal identifier of a message"
        required: true
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int64"
      - name: "dateFrom"
        in: "query"
        schema:
          type: "string"
      - name: "type"
        in: "query"
        schema:
          type: "string"
          enum:
          - "Fax"
          - "SMS"
          - "VoiceMail"
          - "Pager"
          - "Text"
          - "All"
      requestBody:
        description: "JSON body"
        content:
          multipart/mixed:
            schema:
              $ref: "#/components/schemas/UpdateMessageRequest"
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMessageRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessageInfoResponse"
        "207":
          description: "Multi-Status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessageMultiResponse"
      x-api-group: "extension/message-store"
      x-throttling-group: "Medium"
      x-feature: "EditMessages"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "Limited"
      x-app-permission: "EditMessages"
      x-user-permission: "EditMessages"
    delete:
      tags:
      - "Message Store"
      summary: "Delete Message"
      description: "Deletes message(s) by the given message ID(s). The first call\
        \ of this method transfers the message to the 'Delete' status. The second\
        \ call transfers the deleted message to the 'Purged' status. If it is required\
        \ to make the message 'Purged' immediately (from the first call), then set\
        \ the query parameter purge to 'True'."
      operationId: "deleteMessage"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "messageId"
        in: "path"
        description: "Internal identifier of a message"
        required: true
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int64"
      - name: "purge"
        in: "query"
        description: "If the value is 'True', then the message is purged immediately\
          \ with all the attachments"
        schema:
          type: "boolean"
          default: false
      - name: "conversationId"
        in: "query"
        description: "Internal identifier of a message thread"
        schema:
          type: "integer"
          format: "int64"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "extension/message-store"
      x-throttling-group: "Medium"
      x-feature: "EditMessages"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "Limited"
      x-app-permission: "EditMessages"
      x-user-permission: "EditMessages"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/message-store/{messageId}/content/{attachmentId}:
    get:
      tags:
      - "Message Store"
      summary: "Get Message Content"
      description: "Returns a specific message attachment data as media stream."
      operationId: "readMessageContent"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "attachmentId"
        in: "path"
        description: "Internal identifier of a message attachment"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "messageId"
        in: "path"
        description: "Internal identifier of a message"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "Range"
        in: "header"
        schema:
          type: "string"
      - name: "contentDisposition"
        in: "query"
        description: "Content disposition of a response"
        schema:
          type: "string"
          default: "Inline"
          enum:
          - "Inline"
          - "Attachment"
      responses:
        "200":
          description: "Attachment Data"
          content:
            text/plain:
              schema:
                type: "string"
                format: "binary"
            image/tiff:
              schema:
                type: "string"
                format: "binary"
      x-api-group: "extension/message-store/content"
      x-throttling-group: "Medium"
      x-feature: "ReadMessages"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-app-permission: "ReadMessages"
      x-user-permission: "ReadMessageContent"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/greeting:
    post:
      tags:
      - "Greetings"
      summary: "Create Custom User Greeting"
      description: "Creates custom greeting for an extension user."
      operationId: "createCustomUserGreeting"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "apply"
        in: "query"
        description: "Specifies whether to apply an answering rule or not. If set\
          \ to true then `answeringRule` parameter is mandatory. If set to false,\
          \ then the answering rule is not applied even if specified"
        schema:
          type: "boolean"
          default: true
      requestBody:
        content:
          multipart/mixed:
            schema:
              required:
              - "binary"
              - "type"
              properties:
                type:
                  type: "string"
                  description: "Type of a greeting, specifying the case when the greeting\
                    \ is played."
                  enum:
                  - "Introductory"
                  - "Announcement"
                  - "ConnectingMessage"
                  - "ConnectingAudio"
                  - "Voicemail"
                  - "Unavailable"
                  - "HoldMusic"
                answeringRuleId:
                  type: "string"
                  description: "Internal identifier of an answering rule"
                binary:
                  type: "string"
                  description: "Media file to upload"
                  format: "binary"
          multipart/form-data:
            schema:
              required:
              - "binary"
              - "type"
              properties:
                type:
                  type: "string"
                  description: "Type of a greeting, specifying the case when the greeting\
                    \ is played."
                  enum:
                  - "Introductory"
                  - "Announcement"
                  - "ConnectingMessage"
                  - "ConnectingAudio"
                  - "Voicemail"
                  - "Unavailable"
                  - "HoldMusic"
                answeringRuleId:
                  type: "string"
                  description: "Internal identifier of an answering rule"
                binary:
                  type: "string"
                  description: "Media file to upload"
                  format: "binary"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomUserGreetingInfo"
      x-api-group: "extension/greeting"
      x-request-max-body-size: "20m"
      x-throttling-group: "Heavy"
      x-feature: "EditExtensionAnsweringRules"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditUserAnsweringRules"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/greeting/{greetingId}:
    get:
      tags:
      - "Greetings"
      summary: "Get Custom Greeting"
      description: "Returns a custom user greeting by ID."
      operationId: "readCustomGreeting"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "greetingId"
        in: "path"
        description: "Internal identifier of a greeting"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomUserGreetingInfo"
      x-api-group: "extension/greeting"
      x-throttling-group: "Medium"
      x-feature: "ReadExtensionInfo"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserInfo"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/unified-presence:
    get:
      tags:
      - "Presence"
      summary: "Get Unified Presence"
      description: "Returns the unified presence status of the requested user(s).\
        \ The set of parameters returned by this method differs whether you return\
        \ the requester's presence or any other user presence."
      operationId: "readUnifiedPresence"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnifiedPresence"
        "207":
          description: "Multi-Status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnifiedPresenceList"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Resource not found"
          content: {}
      x-api-group: "extension/unified-presence"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "ReadPresence"
      x-user-permission: "ReadPresenceStatus"
    patch:
      tags:
      - "Presence"
      summary: "Update Unified Presence"
      description: "Updates the unified presence for the current user specified in\
        \ path."
      operationId: "updateUnifiedPresence"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUnifiedPresence"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnifiedPresence"
        "400":
          description: "Some of parameters are missing or have invalid format"
          content: {}
        "403":
          description: "User is not allowed to do this action"
          content: {}
        "404":
          description: "Resource not found"
          content: {}
      x-api-group: "extension/unified-presence"
      x-feature: "EditPresenceStatus"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "EditPresence"
      x-user-permission: "EditPresenceStatus"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking:
    get:
      tags:
      - "Call Blocking"
      summary: "Get Caller Blocking Settings"
      description: "Returns the current caller blocking settings of a user."
      operationId: "readCallerBlockingSettings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallerBlockingSettings"
      x-api-group: "extension/caller-blocking"
      x-throttling-group: "Light"
      x-feature: "ReadBlockedNumbers"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadBlockedNumbers"
    put:
      tags:
      - "Call Blocking"
      summary: "Update Caller Blocking Settings"
      description: "Updates the current caller blocking settings of a user."
      operationId: "updateCallerBlockingSettings"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallerBlockingSettingsUpdate"
        required: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallerBlockingSettings"
      x-api-group: "extension/caller-blocking"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-throttling-group: "Light"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditBlockedNumbers"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers:
    get:
      tags:
      - "Call Blocking"
      summary: "Get Blocked/Allowed Phone Numbers"
      description: "Returns the lists of blocked and allowed phone numbers."
      operationId: "listBlockedAllowedNumbers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "page"
        in: "query"
        schema:
          type: "integer"
      - name: "perPage"
        in: "query"
        schema:
          type: "integer"
      - name: "status"
        in: "query"
        schema:
          type: "string"
          enum:
          - "Blocked"
          - "Allowed"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockedAllowedPhoneNumbersList"
      x-api-group: "extension/caller-blocking/phone-numbers"
      x-throttling-group: "Light"
      x-feature: "ReadBlockedNumbers"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadBlockedNumbers"
    post:
      tags:
      - "Call Blocking"
      summary: "Add Blocked/Allowed Number"
      description: "Updates either blocked or allowed phone number list with a new\
        \ phone number."
      operationId: "createBlockedAllowedNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddBlockedAllowedPhoneNumber"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockedAllowedPhoneNumberInfo"
      x-api-group: "extension/caller-blocking/phone-numbers"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-throttling-group: "Medium"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditBlockedNumbers"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}:
    get:
      tags:
      - "Call Blocking"
      summary: "Get Blocked/Allowed Number"
      description: "Returns blocked or allowed phone number(s) by their ID(s). Batch\
        \ request is supported."
      operationId: "readBlockedAllowedNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "blockedNumberId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockedAllowedPhoneNumberInfo"
      x-api-group: "extension/caller-blocking/phone-numbers"
      x-throttling-group: "Light"
      x-feature: "ReadBlockedNumbers"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadBlockedNumbers"
    put:
      tags:
      - "Call Blocking"
      summary: "Update Blocked/Allowed Number"
      description: "Updates blocked or allowed phone number(s) by their ID(s). Batch\
        \ request is supported."
      operationId: "updateBlockedAllowedNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "blockedNumberId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddBlockedAllowedPhoneNumber"
        required: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockedAllowedPhoneNumberInfo"
      x-api-group: "extension/caller-blocking/phone-numbers"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-throttling-group: "Medium"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditBlockedNumbers"
    delete:
      tags:
      - "Call Blocking"
      summary: "Delete Blocked/Allowed Number"
      description: "Deletes blocked or allowed phone number(s) by their ID(s). Batch\
        \ request is supported."
      operationId: "deleteBlockedAllowedNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "blockedNumberId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
      x-api-group: "extension/caller-blocking/phone-numbers"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "Limited"
      x-throttling-group: "Medium"
      x-app-permission: "EditExtensions"
      x-user-permission: "EditBlockedNumbers"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/address-book-sync:
    get:
      tags:
      - "External Contacts"
      summary: "Address Book Synchronization"
      description: "Synchronizes user contacts."
      operationId: "syncAddressBook"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "syncType"
        in: "query"
        description: "Type of synchronization"
        schema:
          type: "string"
          enum:
          - "FSync"
          - "ISync"
      - name: "syncToken"
        in: "query"
        description: "Value of syncToken property of the last sync request response"
        schema:
          type: "string"
      - name: "perPage"
        in: "query"
        description: "Number of records per page to be returned. The max number of\
          \ records is 250, which is also the default. For 'FSync' if the number of\
          \ records exceeds the parameter value (either specified or default), all\
          \ of the pages can be retrieved in several requests. For 'ISync' if the\
          \ number of records exceeds the page size, the number of incoming changes\
          \ to this number is limited"
        schema:
          type: "integer"
      - name: "pageId"
        in: "query"
        description: "Internal identifier of a page. It can be obtained from the 'nextPageId'\
          \ parameter passed in response body"
        schema:
          type: "integer"
          format: "int64"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressBookSync"
      x-api-group: "extension/address-book-sync"
      x-throttling-group: "Heavy"
      x-feature: "ReadPersonalContacts"
      x-source-file: "rc-platform-address-book.yml"
      x-availability: "High"
      x-app-permission: "ReadContacts"
      x-user-permission: "ReadPersonalContacts"
  /restapi/v1.0/account/{accountId}/extension/{extensionId}/phone-number:
    get:
      tags:
      - "Phone Numbers"
      summary: "Get Extension Phone Number List"
      description: "Returns the list of phone numbers that are used by a particular\
        \ extension, and can be filtered by the phone number type. The returned list\
        \ contains all numbers which are directly mapped to a given extension plus\
        \ the features and also company-level numbers which may be used when performing\
        \ different operations on behalf of this extension."
      operationId: "listExtensionPhoneNumbers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "status"
        in: "query"
        description: "Status of a phone number. Multiple values are supported"
        schema:
          type: "string"
          enum:
          - "Normal"
          - "Pending"
          - "PortedIn"
          - "Temporary"
      - name: "extensionId"
        in: "path"
        description: "Internal identifier of an extension or tilde (~) to indicate\
          \ the extension assigned to the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "usageType"
        in: "query"
        description: "Usage type of a phone number"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "MainCompanyNumber"
            - "AdditionalCompanyNumber"
            - "CompanyNumber"
            - "DirectNumber"
            - "CompanyFaxNumber"
            - "ForwardedNumber"
            - "ForwardedCompanyNumber"
            - "BusinessMobileNumber"
            - "IntegrationNumber"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are allowed. Default value is '1'"
        schema:
          type: "integer"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). If not specified,\
          \ the value is '100' by default"
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK: User Phone Number List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtensionPhoneNumbersResponse"
      x-api-group: "extension/phone-number"
      x-throttling-group: "Light"
      x-feature: "ReadExtensionPhoneNumbers"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserPhoneNumbers"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/tasks/{taskId}:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Emergency Map Configuration Task"
      description: "Returns results of the task created within the frame of Automatic\
        \ Location Updates feature. Currently four task types are supported: 'Wireless\
        \ Points Bulk Create', 'Wireless Points Bulk Update', 'Switches Bulk Create',\
        \ 'Switches Bulk Update'."
      operationId: "readAutomaticLocationUpdatesTask"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "taskId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Task Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomaticLocationUpdatesTaskInfo"
      x-api-group: "account/emergency-address-auto-update/tasks"
      x-throttling-group: "Light"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/users:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get User List"
      description: "Returns the list of users with their status of Automatic Location\
        \ Updates feature."
      operationId: "listAutomaticLocationUpdatesUsers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "type"
        in: "query"
        description: "Extension type. Multiple values are supported"
        schema:
          type: "string"
          enum:
          - "User"
          - "Limited"
      - name: "searchString"
        in: "query"
        description: "Filters entries containing the specified substring in user name,\
          \ extension or department. The characters range is 0-64; not case-sensitive.\
          \ If empty then the filter is ignored"
        schema:
          type: "string"
      - name: "department"
        in: "query"
        description: "Department name to filter the users. The value range is 0-64;\
          \ not case-sensitive. If not specified then the parameter is ignored. Multiple\
          \ values are supported"
        schema:
          type: "string"
      - name: "siteId"
        in: "query"
        description: "Internal identifier of a site. To filter users of Main Site\
          \ (Company) `main-site` must be specified. Supported only If Multi-Site\
          \ feature is enabled for the account. Multiple values are supported"
        schema:
          type: "string"
      - name: "featureEnabled"
        in: "query"
        description: "Filters entries by their status of Automatic Location Updates\
          \ feature"
        schema:
          type: "boolean"
      - name: "orderBy"
        in: "query"
        description: "Comma-separated list of fields to order results prefixed by\
          \ plus sign '+' (ascending order) or minus sign '-' (descending order).\
          \ Supported values: 'name', 'modelName', 'siteName', 'featureEnabled'"
        schema:
          type: "string"
          default: "name"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). The values supported:\
          \ `Max` or numeric value. If not specified, 100 records are returned per\
          \ one page"
        schema:
          type: "integer"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are supported"
        schema:
          type: "integer"
          default: 1
      responses:
        default:
          description: "User List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomaticLocationUpdatesUserList"
      x-api-group: "account/emergency-address-auto-update/users"
      x-throttling-group: "Medium"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/users/bulk-assign:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Enable Automatic Location Updates for Users"
      description: "Enables or disables Automatic Location Updates feature for multiple\
        \ account users."
      operationId: "assignMultipleAutomaticLocationUpdatesUsers"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkAssignAutomaticLocationUpdatesUsers"
        required: false
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/emergency-address-auto-update/users/bulk-assign"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-create:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Create Multiple Wireless Points"
      description: "Creates multiple wireless points in corporate map. The maximum\
        \ number of wireless points per request is 10 000; limitation for account\
        \ is 70 000."
      operationId: "createMultipleWirelessPoints"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMultipleWirelessPointsRequest"
        required: true
      responses:
        "202":
          description: "Multiple Wireless Points Creation Task"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMultipleWirelessPointsResponse"
      x-api-group: "account/emergency-address-auto-update/wireless-points-bulk-create"
      x-request-max-body-size: "100m"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/networks:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Network Map"
      description: "Returns corporate networks map with emergency addresses assigned\
        \ to the current account."
      operationId: "listNetworks"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        default:
          description: "Networks List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworksList"
      x-api-group: "account/emergency-address-auto-update/networks"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Create Network"
      description: "Creates a new network in corporate ethernet map for assignment\
        \ of emergency addresses to network access points."
      operationId: "createNetwork"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNetworkRequest"
        required: true
      responses:
        "200":
          description: "Created Network"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInfo"
      x-api-group: "account/emergency-address-auto-update/networks"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/networks/{networkId}:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Network"
      description: "Returns the specified network with emergency addresses assigned\
        \ to the current account."
      operationId: "readNetwork"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "networkId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Network information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkInfo"
      x-api-group: "account/emergency-address-auto-update/networks"
      x-throttling-group: "Medium"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    put:
      tags:
      - "Automatic Location Updates"
      summary: "Update Network"
      description: "Updates network in corporate ethernet map for assignment of emergency\
        \ addresses to network access points."
      operationId: "updateNetwork"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "networkId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNetworkRequest"
        required: true
      responses:
        "200":
          description: "Success"
          content: {}
      x-api-group: "account/emergency-address-auto-update/networks"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    delete:
      tags:
      - "Automatic Location Updates"
      summary: "Delete Network"
      description: "Deletes network(s) in corporate ethernet map for Automatic Location\
        \ Updates feature."
      operationId: "deleteNetwork"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "networkId"
        in: "path"
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/emergency-address-auto-update/networks"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/switches-bulk-validate:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Validate Multiple Switches"
      description: "Validates switches before creation or update. The maximum number\
        \ of switches per request is 10 000."
      operationId: "validateMultipleSwitches"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateMultipleSwitchesRequest"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateMultipleSwitchesResponse"
      x-api-group: "account/emergency-address-auto-update/switches-points-bulk-validate"
      x-request-max-body-size: "100m"
      x-throttling-group: "Heavy"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/switches:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Account Switch List"
      description: "Returns corporate map of configured network switches with the\
        \ assigned emergency addresses for the logged-in account."
      operationId: "listAccountSwitches"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "siteId"
        in: "query"
        description: "Internal identifier of a site. To filter Main Site (Company)\
          \ main-site must be specified. Supported only If multi-site feature is enabled\
          \ for the account"
        schema:
          type: "string"
      - name: "searchString"
        in: "query"
        description: "Filters entries by the specified substring (search by chassis\
          \ ID, switch name or address) The characters range is 0-64 (if empty the\
          \ filter is ignored)"
        schema:
          type: "string"
      - name: "orderBy"
        in: "query"
        description: "Comma-separated list of fields to order results prefixed by\
          \ '+' sign (ascending order) or '-' sign (descending order). The default\
          \ sorting is by `name`"
        schema:
          type: "string"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). The values supported:\
          \ `Max` or numeric value. If not specified, 100 records are returned per\
          \ one page"
        schema:
          type: "integer"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are supported"
        schema:
          type: "integer"
          default: 1
      responses:
        "200":
          description: "Switches Map"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SwitchesList"
      x-api-group: "account/emergency-address-auto-update/switches"
      x-throttling-group: "Heavy"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Create Switch"
      description: "Creates a new switch in corporate map based on chassis ID and\
        \ used for Automatic Locations Update feature."
      operationId: "createSwitch"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSwitchInfo"
        required: true
      responses:
        "200":
          description: "Switch information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SwitchInfo"
      x-api-group: "account/emergency-address-auto-update/switches"
      x-throttling-group: "Heavy"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/switches/{switchId}:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Switch"
      description: "Returns the specified switch with the assigned emergency address."
      operationId: "readSwitch"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "switchId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Switch information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SwitchInfo"
      x-api-group: "account/emergency-address-auto-update/switches"
      x-throttling-group: "Medium"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    put:
      tags:
      - "Automatic Location Updates"
      summary: "Update Switch"
      description: "Updates switch. Partial update is not supported, all switch parameters\
        \ should be specified. If null value is received or parameter is missing,\
        \ its value is removed."
      operationId: "updateSwitch"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "switchId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSwitchInfo"
        required: true
      responses:
        "200":
          description: "Switch information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SwitchInfo"
      x-api-group: "account/emergency-address-auto-update/switches"
      x-throttling-group: "Heavy"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    delete:
      tags:
      - "Automatic Location Updates"
      summary: "Delete Switch"
      description: "Deletes wireless switch(es) in network configuration for Automatic\
        \ Location Updates feature."
      operationId: "deleteSwitch"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "switchId"
        in: "path"
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/emergency-address-auto-update/switches"
      x-throttling-group: "Heavy"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/wireless-points:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Wireless Point List"
      description: "Returns account wireless points configured and used for Automatic\
        \ Location Updates feature."
      operationId: "listWirelessPoints"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "siteId"
        in: "query"
        description: "Internal identifier of a site. To filter Main Site (Company)\
          \ 'main-site' must be specified. Supported only If multi-site feature is\
          \ enabled for the account"
        schema:
          type: "string"
      - name: "searchString"
        in: "query"
        description: "Filters entries by the specified substring (search by chassis\
          \ ID, switch name or address) The characters range is 0-64 (if empty the\
          \ filter is ignored)"
        schema:
          type: "string"
      - name: "orderBy"
        in: "query"
        description: "Comma-separated list of fields to order results prefixed by\
          \ '+' sign (ascending order) or '-' sign (descending order). The default\
          \ sorting is by `name`"
        schema:
          type: "string"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). The values supported:\
          \ `Max` or numeric value. If not specified, 100 records are returned per\
          \ one page"
        schema:
          type: "integer"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are supported"
        schema:
          type: "integer"
          default: 1
      responses:
        "200":
          description: "Wireless Points"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WirelessPointsList"
      x-api-group: "account/emergency-address-auto-update/wireless-points"
      x-throttling-group: "Medium"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Create Wireless Point"
      description: "Creates a new wireless point in network configuration with the\
        \ emergency address assigned."
      operationId: "createWirelessPoint"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWirelessPoint"
        required: true
      responses:
        "200":
          description: "Wireless Point"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WirelessPointInfo"
      x-api-group: "account/emergency-address-auto-update/wireless-points"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/wireless-points/{pointId}:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Wireless Point"
      description: "Returns the specified wireless access point of a corporate map\
        \ with the emergency address assigned."
      operationId: "readWirelessPoint"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "pointId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Wireless Point"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WirelessPointInfo"
      x-api-group: "account/emergency-address-auto-update/wireless-points"
      x-throttling-group: "Medium"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    put:
      tags:
      - "Automatic Location Updates"
      summary: "Update Wireless Point"
      description: "Updates the specified wireless access point of a corporate map\
        \ by ID."
      operationId: "updateWirelessPoint"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "pointId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWirelessPoint"
        required: true
      responses:
        "200":
          description: "Wireless Point"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WirelessPointInfo"
      x-api-group: "account/emergency-address-auto-update/wireless-points"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
    delete:
      tags:
      - "Automatic Location Updates"
      summary: "Delete Wireless Point"
      description: "Deletes wireless point(s) of a corporate map by ID(s)."
      operationId: "deleteWirelessPoint"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "pointId"
        in: "path"
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/emergency-address-auto-update/wireless-points"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-validate:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Validate Multiple Wireless Points"
      description: "Validates wireless points before creation or update. The maximum\
        \ number of wireless points per request is 10 000."
      operationId: "validateMultipleWirelessPoints"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateMultipleWirelessPointsRequest"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateMultipleWirelessPointsResponse"
      x-api-group: "account/emergency-address-auto-update/wireless-points-bulk-validate"
      x-request-max-body-size: "100m"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/devices:
    get:
      tags:
      - "Automatic Location Updates"
      summary: "Get Device List"
      description: "Returns the list of common devices with their status of Automatic\
        \ Location Updates feature."
      operationId: "listDevicesAutomaticLocationUpdates"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "siteId"
        in: "query"
        description: "Internal identifier of a site. To filter devices of Main Site\
          \ (Company) `main-site` must be specified. Supported only If Multi-Site\
          \ feature is enabled for the account"
        schema:
          type: "string"
      - name: "featureEnabled"
        in: "query"
        description: "Filters entries by their status of Automatic Location Updates\
          \ feature"
        schema:
          type: "boolean"
      - name: "model"
        in: "query"
        description: "Internal identifier of a device model for filtering. Multiple\
          \ values are supported"
        schema:
          type: "string"
      - name: "compatibleOnly"
        in: "query"
        description: "Filters devices which support HELD protocol"
        schema:
          type: "boolean"
      - name: "searchString"
        in: "query"
        description: "Filters entries which have device name or model name containing\
          \ the mentioned substring. The value should be split by spaces; the range\
          \ is 0 - 64 characters, not case-sensitive. If empty the filter is ignored"
        schema:
          type: "string"
      - name: "orderBy"
        in: "query"
        description: "Comma-separated list of fields to order results prefixed by\
          \ plus sign '+' (ascending order) or minus sign '-' (descending order).\
          \ Supported values: 'name', 'modelName', 'siteName', 'featureEnabled'"
        schema:
          type: "string"
          default: "name"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items). The values supported:\
          \ `Max` or numeric value. If not specified, 100 records are returned per\
          \ one page"
        schema:
          type: "integer"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are supported"
        schema:
          type: "integer"
          default: 1
      responses:
        "200":
          description: "Device List with their status of Automatic Location Updates\
            \ feature"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDevicesAutomaticLocationUpdates"
      x-api-group: "account/emergency-address-auto-update/devices"
      x-throttling-group: "Medium"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/devices/bulk-assign:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Enable Automatic Location Updates for Devices"
      description: "Enables or disables Automatic Location Updates feature for the\
        \ specified common phones."
      operationId: "assignMultipleDevicesAutomaticLocationUpdates"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignMultipleDevicesAutomaticLocationUpdates"
        required: false
      responses:
        "204":
          description: "No Content"
          content: {}
      x-api-group: "account/emergency-address-auto-update/devices/bulk-assign"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate OR EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/switches-bulk-create:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Create Multiple Switches"
      description: "Creates multiple switches in corporate map. The maximum number\
        \ of switches per request is 10 000; limitation for account is 10 000."
      operationId: "createMultipleSwitches"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMultipleSwitchesRequest"
        required: true
      responses:
        "202":
          description: "Multiple Switches Creation Task"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMultipleSwitchesResponse"
      x-api-group: "account/emergency-address-auto-update/switches-bulk-create"
      x-request-max-body-size: "100m"
      x-throttling-group: "Heavy"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-update:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Update Multiple Wireless Points"
      description: "Updates wireless points in corporate map. The maximum number of\
        \ wireless points per request is 10 000; limitation for account is 70 000."
      operationId: "updateMultipleWirelessPoints"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMultipleWirelessPointsRequest"
        required: true
      responses:
        "202":
          description: "Multiple Wireless Points Update Task"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMultipleWirelessPointsResponse"
      x-api-group: "account/emergency-address-auto-update/wireless-points-bulk-update"
      x-request-max-body-size: "100m"
      x-throttling-group: "Heavy"
      x-feature: "EditSoftPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/emergency-address-auto-update/switches-bulk-update:
    post:
      tags:
      - "Automatic Location Updates"
      summary: "Update Multiple Switches"
      description: "Updates multiple switches in corporate map. The maximum number\
        \ of switches per request is 10 000; limitation for account is 10 000."
      operationId: "updateMultipleSwitches"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMultipleSwitchesRequest"
        required: true
      responses:
        "202":
          description: "Multiple Switches Update Task"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMultipleSwitchesResponse"
      x-api-group: "account/emergency-address-auto-update/switches-bulk-update"
      x-request-max-body-size: "100m"
      x-throttling-group: "Heavy"
      x-feature: "EditHardPhoneAutoLocationUpdate"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "EditAccounts"
      x-user-permission: "ConfigureEmergencyMaps"
  /restapi/v1.0/account/{accountId}/phone-number:
    get:
      tags:
      - "Phone Numbers"
      summary: "Get Company Phone Number List"
      description: "Returns the list of phone numbers assigned to RingCentral customer\
        \ account. Both company-level and extension-level numbers are returned."
      operationId: "listAccountPhoneNumbers"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "usageType"
        in: "query"
        description: "Usage type of a phone number"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "MainCompanyNumber"
            - "AdditionalCompanyNumber"
            - "CompanyNumber"
            - "DirectNumber"
            - "CompanyFaxNumber"
            - "ForwardedNumber"
            - "ForwardedCompanyNumber"
            - "ContactCenterNumber"
            - "ConferencingNumber"
            - "MeetingsNumber"
            - "BusinessMobileNumber"
            - "IntegrationNumber"
      - name: "status"
        in: "query"
        description: "Status of a phone number. Multiple values are supported"
        schema:
          type: "string"
          enum:
          - "Normal"
          - "Pending"
          - "PortedIn"
          - "Temporary"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountPhoneNumbers"
      x-api-group: "account/phone-number"
      x-throttling-group: "Heavy"
      x-feature: "ReadAccountPhoneNumbers"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "Limited"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyPhoneNumbers"
  /restapi/v1.0/account/{accountId}/phone-number/{phoneNumberId}:
    get:
      tags:
      - "Phone Numbers"
      summary: "Get Phone Number"
      description: "Returns the phone number(s) belonging to a certain account or\
        \ extension by phoneNumberId(s). Batch request is supported."
      operationId: "readAccountPhoneNumber"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "phoneNumberId"
        in: "path"
        description: "Internal identifier of a phone number"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyPhoneNumberInfo"
      x-api-group: "account/phone-number"
      x-throttling-group: "Light"
      x-feature: "ReadAccountPhoneNumbers"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadCompanyPhoneNumbers"
  /restapi/v1.0/glip/tasks/{taskId}:
    get:
      tags:
      - "Tasks"
      summary: "Get Task"
      description: "Returns information about the specified task(s) by ID(s)."
      operationId: "readTask"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task, or comma separated list of task\
          \ IDs"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Task Information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTaskInfo"
        "400":
          description: "Invalid input parameter(-s)"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Requested task ID does not exist"
          content: {}
      x-api-group: "glip/tasks"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
    delete:
      tags:
      - "Tasks"
      summary: "Delete Task"
      description: "Deletes the specified task."
      operationId: "deleteTask"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Task with the specified ID does not exist"
          content: {}
      x-api-group: "glip/tasks"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
    patch:
      tags:
      - "Tasks"
      summary: "Update Task"
      description: "Updates the specified task by ID."
      operationId: "patchTask"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/GlipUpdateTask"
        required: false
      responses:
        "200":
          description: "Updated Tasks"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTaskList"
        "400":
          description: "Invalid input parameter(-s)"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Task with the specified ID does not exist"
          content: {}
      x-api-group: "glip/tasks"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
  /restapi/v1.0/glip/tasks/{taskId}/complete:
    post:
      tags:
      - "Tasks"
      summary: "Complete Task"
      description: "Completes a task in the specified chat."
      operationId: "completeTask"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/GlipCompleteTask"
        required: true
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Invalid input parameter(-s)"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Requested task ID does not exist"
          content: {}
      x-api-group: "glip/tasks/complete"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
  /restapi/v1.0/glip/events:
    get:
      tags:
      - "Calendar Events"
      summary: "Get User Events List"
      description: "Returns all calendar events created by the current user."
      operationId: "readGlipEvents"
      parameters:
      - name: "recordCount"
        in: "query"
        description: "Number of groups to be fetched by one request. The maximum value\
          \ is 250, by default - 30."
        schema:
          maximum: 250
          type: "integer"
          default: 30
      - name: "pageToken"
        in: "query"
        description: "Token of a page to be returned"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEventsInfo"
            multipart/mixed:
              schema:
                $ref: "#/components/schemas/GlipEventsInfo"
      x-api-group: "glip/events"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Calendar Events"
      summary: "Create Event"
      description: "Creates a new calendar event."
      operationId: "createEvent"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipEventCreate"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEventInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
      x-api-group: "glip/events"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/events/{eventId}:
    get:
      tags:
      - "Calendar Events"
      summary: "Get Event"
      description: "Returns the specified calendar event(s) by ID(s)."
      operationId: "readEvent"
      parameters:
      - name: "eventId"
        in: "path"
        description: "event id or comma separated list of event ids."
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEventInfo"
            multipart/mixed:
              schema:
                $ref: "#/components/schemas/GlipEventInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Event not found."
          content: {}
      x-api-group: "glip/events"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    put:
      tags:
      - "Calendar Events"
      summary: "Update Event"
      description: "Updates the specified calendar event."
      operationId: "updateEvent"
      parameters:
      - name: "eventId"
        in: "path"
        description: "Internal identifier of an event"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipEventCreate"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEventInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Event to update not exists."
          content: {}
      x-api-group: "glip/events"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    delete:
      tags:
      - "Calendar Events"
      summary: "Delete Event"
      description: "Deletes the specified calendar event."
      operationId: "deleteEvent"
      parameters:
      - name: "eventId"
        in: "path"
        description: "Internal identifier of an event to be deleted"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Event not found."
          content: {}
      x-api-group: "glip/events"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/recent/chats:
    get:
      tags:
      - "Chats"
      summary: "Get Recent Chats"
      description: "Returns recent chats where the user is a member. All records in\
        \ response are sorted by the `lastModifiedTime` in descending order (the latest\
        \ changed chat is displayed first on page). **Note** 'Chat' is a general name\
        \ for all types of threads including *Personal* (user's own me-chat), *Direct*\
        \ (one on one chat), *Group* (chat of 3-15 participants without specific name),\
        \ *Team* (chat of 2 and more participants, with a specific name), *Everyone*\
        \ (company chat including all employees, with a specific name).\""
      operationId: "listRecentChats"
      parameters:
      - name: "type"
        in: "query"
        description: "Type of chats to be fetched. By default all chat types are returned"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Everyone"
            - "Group"
            - "Personal"
            - "Direct"
            - "Team"
      - name: "recordCount"
        in: "query"
        description: "Max number of chats to be fetched by one request (Not more than\
          \ 250)."
        schema:
          maximum: 250
          type: "integer"
          default: 30
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipChatsListWithoutNavigation"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
      x-api-group: "glip/recent"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/files:
    post:
      tags:
      - "Posts"
      summary: "Upload File"
      description: "Posts a file."
      operationId: "createGlipFile"
      parameters:
      - name: "groupId"
        in: "query"
        description: "Internal identifier of a group to which the post with attachment\
          \ will be added to"
        schema:
          type: "integer"
          format: "int64"
      - name: "name"
        in: "query"
        description: "Name of a file attached"
        schema:
          type: "string"
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - "body"
              properties:
                body:
                  type: "string"
                  description: "The file (binary or multipart/form-data) to upload"
                  format: "binary"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostGlipFile"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "415":
          description: "Media type is not supported"
          content: {}
      x-api-group: "glip/files"
      x-request-max-body-size: "30m"
      x-throttling-group: "Heavy"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats:
    get:
      tags:
      - "Chats"
      summary: "Get Chats"
      description: "Returns the list of chats where the user is a member and also\
        \ public teams that can be joined.\n\nAll records in response are sorted by\
        \ creation time of a chat in ascending order.\n\n**Chat types**\n\nThere are\
        \ multiple types of chats, including:\n\n* **Personal** - each user is given\
        \ a dedicated \"personal chat\" in which they are the only member.\n* **Direct**\
        \ - a chat between two individuals.\n* **Group** - a chat between three or\
        \ more named individuals. A \"group\" chat has no name.\n* **Team** - a chat\
        \ related to a specific topic. Members can come and go freely from this chat\
        \ type.\n* **Everyone** - a special chat containing every individual in a\
        \ company.\n"
      operationId: "listGlipChats"
      parameters:
      - name: "type"
        in: "query"
        description: "Type of chats to be fetched. By default all type of chats will\
          \ be fetched"
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Personal"
            - "Direct"
            - "Group"
            - "Team"
            - "Everyone"
      - name: "recordCount"
        in: "query"
        description: "Number of chats to be fetched by one request. The maximum value\
          \ is 250, by default - 30."
        schema:
          maximum: 250
          type: "integer"
          default: 30
      - name: "pageToken"
        in: "query"
        description: "Pagination token."
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipChatsList"
      x-api-group: "glip/chats"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats/{chatId}:
    get:
      tags:
      - "Chats"
      summary: "Get Chat"
      description: "Returns information about a chat by ID. **Note** 'Chat' is a general\
        \ name for all types of threads including *Personal* (user's own me-chat),\
        \ *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific\
        \ name), *Team* (chat of 2 and more participants, with a specific name), *Everyone*\
        \ (company chat including all employees, with a specific name).\""
      operationId: "readGlipChat"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat. If tilde (~) is specified, then\
          \ `/me` (Personal) chat will be returned"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipChatInfo"
        "404":
          description: "Chat Not Found."
          content: {}
      x-api-group: "glip/chats"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats/{chatId}/unfavorite:
    post:
      tags:
      - "Chats"
      summary: "Remove Chat from Favorites"
      description: "Removes the specified chat from the users's list of favorite chats."
      operationId: "unfavoriteGlipChat"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat to remove from favorite list."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "404":
          description: "Chat not found"
          content: {}
      x-api-group: "glip/chats/unfavorite"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats/{chatId}/tasks:
    get:
      tags:
      - "Tasks"
      summary: "Get Chat Tasks"
      description: "Returns the list of tasks of the specified chat."
      operationId: "listChatTasks"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat"
        required: true
        schema:
          type: "string"
      - name: "creationTimeTo"
        in: "query"
        description: "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
          \ format including timezone, e.g. 2019-03-10T18:23:45Z"
        schema:
          type: "string"
          default: "now"
      - name: "creationTimeFrom"
        in: "query"
        description: "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
          \ format including timezone, e.g. 2016-02-23T00:00:00"
        schema:
          type: "string"
      - name: "creatorId"
        in: "query"
        description: "Internal identifier of a task creator"
        style: "form"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      - name: "status"
        in: "query"
        description: "Task execution status"
        style: "form"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
            enum:
            - "Pending"
            - "InProgress"
            - "Completed"
      - name: "assignmentStatus"
        in: "query"
        description: "Task assignment status"
        schema:
          type: "string"
          enum:
          - "Unassigned"
          - "Assigned"
      - name: "assigneeId"
        in: "query"
        description: "Internal identifier of a task assignee"
        style: "form"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      - name: "assigneeStatus"
        in: "query"
        description: "Task execution status by assignee(-s) specified in assigneeId"
        schema:
          type: "string"
          enum:
          - "Pending"
          - "Completed"
      - name: "pageToken"
        in: "query"
        description: "Token of the current page. If token is omitted then the first\
          \ page should be returned"
        schema:
          type: "string"
      - name: "recordCount"
        in: "query"
        description: "Number of records to be returned per screen"
        schema:
          maximum: 250
          minimum: 1
          type: "integer"
          default: 30
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTaskList"
        "400":
          description: "Invalid input parameter(-s)"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Specified chat ID does not exist"
          content: {}
      x-api-group: "glip/chats/tasks"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Heavy"
      x-app-permission: "TeamMessaging"
    post:
      tags:
      - "Tasks"
      summary: "Create Task"
      description: "Creates a task in the specified chat."
      operationId: "createTask"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/GlipCreateTask"
        required: true
      responses:
        "201":
          description: "Task information"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTaskInfo"
        "400":
          description: "Invalid input parameter(-s)"
          content: {}
        "403":
          description: "Forbidden"
          content: {}
        "404":
          description: "Specified chat ID does not exist"
          content: {}
      x-api-group: "glip/tasks"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
  /restapi/v1.0/glip/chats/{chatId}/posts:
    get:
      tags:
      - "Posts"
      summary: "Get Posts"
      description: "Returns a list of posts from the specified chat."
      operationId: "readGlipPosts"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat"
        required: true
        schema:
          type: "string"
      - name: "recordCount"
        in: "query"
        description: "Max number of posts to be fetched by one request (not more than\
          \ 250)"
        schema:
          maximum: 250
          type: "integer"
          default: 30
      - name: "pageToken"
        in: "query"
        description: "Pagination token."
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPostsList"
      x-api-group: "glip/chats/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Posts"
      summary: "Create Post"
      description: "Creates a post in the chat specified in path. Any mention can\
        \ be added within the `text` attribute of the request body in .md format -\
        \ `![:Type](id)`, where `type` is one of (Person, Team, File, Note, Task,\
        \ Event, Link, Card) and `id` is a unique identifier of the mentioned object\
        \ of the specified type. Attachments of the following types (File, Card, Event,\
        \ Note) can also be added to a post by passing type and ID of attachment(s)\
        \ in request body."
      operationId: "createGlipPost"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat."
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipPostPostBody"
        required: true
      responses:
        "201":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPostInfo"
        "400":
          description: "One of body parameters has invalid value."
          content: {}
        "404":
          description: "Resource for parameter [chatId] is not found."
          content: {}
      x-api-group: "glip/chats/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats/{chatId}/posts/{postId}:
    get:
      tags:
      - "Posts"
      summary: "Get Post"
      description: "Returns information about the specified post."
      operationId: "readGlipPost"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat."
        required: true
        schema:
          type: "string"
      - name: "postId"
        in: "path"
        description: "Internal identifier of a post."
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPostInfo"
        "404":
          description: "Post Not Found."
          content: {}
      x-api-group: "glip/chats/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    delete:
      tags:
      - "Posts"
      summary: "Delete Post"
      description: "Deletes the specified post from the chat."
      operationId: "deleteGlipPost"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat."
        required: true
        schema:
          type: "string"
      - name: "postId"
        in: "path"
        description: "Internal identifier of a post to be deleted."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content."
          content: {}
        "403":
          description: "Requestor has no permissions to do this action."
          content: {}
        "404":
          description: "Post Not Found."
          content: {}
      x-api-group: "glip/chats/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    patch:
      tags:
      - "Posts"
      summary: "Update Post"
      description: "Updates a specific post within a chat."
      operationId: "patchGlipPost"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat."
        required: true
        schema:
          type: "string"
      - name: "postId"
        in: "path"
        description: "Internal identifier of a post to be updated."
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipPatchPostBody"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPostInfo"
        "400":
          description: "One of body parameters has invalid value."
          content: {}
        "403":
          description: "Requestor has no permissions to do this action."
          content: {}
        "404":
          description: "Chat not found."
          content: {}
      x-api-group: "glip/chats/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats/{chatId}/favorite:
    post:
      tags:
      - "Chats"
      summary: "Add Chat to Favorites"
      description: "Adds the specified chat to the users's list of favorite chats.\n"
      operationId: "favoriteGlipChat"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat to add to favorite list."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Favorite chat list is limited to 250 unique chats"
          content: {}
        "403":
          description: "User is not member of chat"
          content: {}
        "404":
          description: "Chat not found"
          content: {}
      x-api-group: "glip/chats/favorite"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats/{chatId}/unread:
    post:
      tags:
      - "Chats"
      summary: "Mark Chat as Unread"
      description: "Sets the specified chat status to 'Unread' for the current user.\
        \ **Note** 'Chat' is a general name for all types of threads including *Personal*\
        \ (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15\
        \ participants without specific name), *Team* (chat of 2 and more participants,\
        \ with a specific name), *Everyone* (company chat including all employees,\
        \ with a specific name).\""
      operationId: "markChatUnread"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Id of chat to be marked"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
        "204":
          description: "No Content"
          content: {}
        "403":
          description: "You have no permissions to mark this chat"
          content: {}
        "404":
          description: "Chat is not found"
          content: {}
      x-api-group: "glip/glpum"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessagingInternal"
  /restapi/v1.0/glip/chats/{chatId}/adaptive-cards:
    post:
      tags:
      - "Adaptive Cards"
      summary: "Create Adaptive Card"
      description: "Creates a new adaptive card in the chat specified in path."
      operationId: "createGlipAdaptiveCard"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipAdaptiveCardRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipAdaptiveCardShortInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "You do not have permissions to create adaptive card in the\
            \ specified chat."
          content: {}
        "404":
          description: "Specified chat ID does not exist."
          content: {}
      x-api-group: "glip/adaptive-cards"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/chats/{chatId}/read:
    post:
      tags:
      - "Chats"
      summary: "Mark Chat as Read"
      description: "Sets the specified chat status to 'Read' for the current user."
      operationId: "markChatRead"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Id of chat to be marked"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
        "204":
          description: "No Content"
          content: {}
        "403":
          description: "You have no permissions to mark this chat"
          content: {}
        "404":
          description: "Chat is not found"
          content: {}
      x-api-group: "glip/glpum"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessagingInternal"
  /restapi/v1.0/glip/chats/{chatId}/notes:
    get:
      tags:
      - "Notes"
      summary: "Get Chat Notes"
      description: "Returns the list of notes created in the specified chat."
      operationId: "listChatNotes"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat to fetch notes from."
        required: true
        schema:
          type: "string"
      - name: "creationTimeTo"
        in: "query"
        description: "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
          \ format including timezone, e.g. 2019-03-10T18:23:45. The default value\
          \ is Now."
        schema:
          type: "string"
      - name: "creationTimeFrom"
        in: "query"
        description: "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
          \ format including timezone"
        schema:
          type: "string"
      - name: "creatorId"
        in: "query"
        description: "Internal identifier of the user that created the note. Multiple\
          \ values are supported"
        schema:
          type: "string"
      - name: "status"
        in: "query"
        description: "Status of notes to be fetched; if not specified all notes are\
          \ fetched by default."
        schema:
          type: "string"
          enum:
          - "Active"
          - "Draft"
      - name: "pageToken"
        in: "query"
        description: "Pagination token"
        schema:
          type: "string"
      - name: "recordCount"
        in: "query"
        description: "Max number of notes to be fetched by one request; the value\
          \ range is 1-250."
        schema:
          maximum: 250
          type: "integer"
          default: 30
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipNotesInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "You do not have permissions to get such kind of information."
          content: {}
        "404":
          description: "Group Not Found."
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Heavy"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Notes"
      summary: "Create Note"
      description: "Creates a new note in the specified chat."
      operationId: "createChatNote"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a chat to create a note in"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipNoteCreate"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipNoteInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "You do not have permissions to create note in the specified\
            \ group."
          content: {}
        "404":
          description: "Group not found."
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/adaptive-cards/{cardId}:
    get:
      tags:
      - "Adaptive Cards"
      summary: "Get Adaptive Card"
      description: "Returns adaptive card(s) with given id(s)."
      operationId: "getGlipAdaptiveCard"
      parameters:
      - name: "cardId"
        in: "path"
        description: "Internal identifier of an adaptive card, or comma separated\
          \ list of adaptive cards IDs."
        required: true
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipAdaptiveCardInfo"
        "207":
          description: "Multi-Status"
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Adaptive Card not found."
          content: {}
      x-api-group: "glip/adaptive-cards"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "Glip"
    put:
      tags:
      - "Adaptive Cards"
      summary: "Update Adaptive Card"
      description: "Updates an adaptive card."
      operationId: "updateGlipAdaptiveCard"
      parameters:
      - name: "cardId"
        in: "path"
        description: "Internal identifier of an adaptive card"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipAdaptiveCardRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipAdaptiveCardShortInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "You do not have permissions to update specified adaptive card."
          content: {}
        "404":
          description: "Adaptive Card for update does not exist."
          content: {}
      x-api-group: "glip/adaptive-cards"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    delete:
      tags:
      - "Adaptive Cards"
      summary: "Delete Adaptive Card"
      description: "Deletes an adaptive card by ID."
      operationId: "deleteGlipAdaptiveCard"
      parameters:
      - name: "cardId"
        in: "path"
        description: "Adaptive Card ID to be deleted."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "You do not have permissions to delete specified adaptive card."
          content: {}
        "404":
          description: "Adaptive Card not found."
          content: {}
      x-api-group: "glip/adaptive-cards"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/webhooks:
    get:
      tags:
      - "Incoming Webhooks"
      summary: "Get Webhooks"
      description: "Returns the list of all webhooks associated with the current account."
      operationId: "listGlipWebhooks"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipWebhookList"
            multipart/mixed:
              schema:
                $ref: "#/components/schemas/GlipWebhookList"
      x-api-group: "glip/webhooks"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/webhooks/{webhookId}:
    get:
      tags:
      - "Incoming Webhooks"
      summary: "Get Webhook"
      description: "Returns webhooks(s) with the specified id(s)."
      operationId: "readGlipWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "Internal identifier of a webhook or comma separated list of\
          \ webhooks IDs"
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipWebhookList"
            multipart/mixed:
              schema:
                $ref: "#/components/schemas/GlipWebhookList"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Webhooks not found."
          content: {}
      x-api-group: "glip/webhooks"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    delete:
      tags:
      - "Incoming Webhooks"
      summary: "Delete Webhook"
      description: "Deletes a webhook by ID."
      operationId: "deleteGlipWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "Internal identifier of a webhook"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "The resource was deleted successfully."
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Webhook not found."
          content: {}
      x-api-group: "glip/webhooks"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/webhooks/{webhookId}/activate:
    post:
      tags:
      - "Incoming Webhooks"
      summary: "Activate Webhook"
      description: "Activates a webhook by ID."
      operationId: "activateGlipWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "Internal identifier of a webhook"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Webhook not found."
          content: {}
      x-api-group: "glip/webhooks"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/webhooks/{webhookId}/suspend:
    post:
      tags:
      - "Incoming Webhooks"
      summary: "Suspend Webhook"
      description: "Suspends a webhook by ID."
      operationId: "suspendGlipWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "Internal identifier of a webhook"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Webhook not found."
          content: {}
      x-api-group: "glip/webhooks"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/companies/{companyId}:
    get:
      tags:
      - "Profile"
      summary: "Get Company Info"
      description: "Returns information about one or more companies by their IDs."
      operationId: "readGlipCompany"
      parameters:
      - name: "companyId"
        in: "path"
        description: "Internal identifier of an RC account/Glip company, or tilde\
          \ (~) to indicate a company the current user belongs to."
        required: true
        schema:
          type: "string"
          default: "~"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipCompany"
            multipart/mixed:
              schema:
                $ref: "#/components/schemas/GlipCompany"
        "207":
          description: "Mixed Result"
          content: {}
        "403":
          description: "You do not have permissions to get such kind of information"
          content: {}
        "404":
          description: "Company Not Found"
          content: {}
      x-api-group: "glip/companies"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/persons/{personId}:
    get:
      tags:
      - "Profile"
      summary: "Get Person"
      description: "Returns a user or multiple users by their ID(s). Batch request\
        \ is supported."
      operationId: "readGlipPerson"
      parameters:
      - name: "personId"
        in: "path"
        description: "Internal identifier of a user to be returned, the maximum number\
          \ of IDs is 30"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPersonInfo"
        "207":
          description: "Mixed Result"
          content: {}
        "403":
          description: "You do not have permissions to get such kind of information"
          content: {}
        "404":
          description: "Person Not Found"
          content: {}
      x-api-group: "glip/persons"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/posts:
    get:
      tags:
      - "Posts"
      summary: "Get Posts"
      description: "Returns posts available for the current user by group ID."
      operationId: "listGlipPosts"
      parameters:
      - name: "groupId"
        in: "query"
        description: "Identifier of a group to filter posts"
        schema:
          type: "string"
      - name: "pageToken"
        in: "query"
        description: "Token of a page to be returned"
        schema:
          type: "string"
      - name: "recordCount"
        in: "query"
        description: "Number of records to be returned. The maximum value is 250,\
          \ by default - 30"
        schema:
          maximum: 250
          type: "integer"
          format: "int64"
          default: 30
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPosts"
        "404":
          description: "Group with the specified ID is not found."
          content: {}
      deprecated: true
      x-api-group: "glip/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Posts"
      summary: "Create Post"
      description: "Creates a post."
      operationId: "createPost"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipCreatePost"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPostInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Group not found."
          content: {}
      deprecated: true
      x-api-group: "glip/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/conversations:
    get:
      tags:
      - "Conversations"
      summary: "Get Conversations"
      description: "Returns the list of conversations where the user is a member.\
        \ All records in response are sorted by creation time of a conversation in\
        \ ascending order. Conversation is a chat of the *Group* type."
      operationId: "listGlipConversations"
      parameters:
      - name: "recordCount"
        in: "query"
        description: "Number of conversations to be fetched by one request. The maximum\
          \ value is 250, by default - 30"
        schema:
          maximum: 250
          type: "integer"
          default: 30
      - name: "pageToken"
        in: "query"
        description: "Pagination token."
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipConversationsList"
      x-api-group: "glip/conversations"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Conversations"
      summary: "Create/Open Conversation"
      description: "Creates a new conversation or opens the existing one. If the conversation\
        \ already exists, then its ID will be returned in response. A conversation\
        \ is an adhoc discussion between a particular set of users, not featuring\
        \ any specific name or description; it is a chat of 'Group' type. If you add\
        \ a person to the existing conversation (group), it creates a whole new conversation."
      operationId: "createGlipConversation"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGlipConversationRequest"
        required: true
      responses:
        "200":
          description: "Conversation is opened"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipConversationInfo"
        "201":
          description: "Conversation is created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipConversationInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
      x-api-group: "glip/conversations"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/conversations/{chatId}:
    get:
      tags:
      - "Conversations"
      summary: "Get Conversation"
      description: "Returns information about the specified conversation, including\
        \ the list of conversation participants. A conversation is an adhoc discussion\
        \ between a particular set of users, not featuring any specific name or description;\
        \ it is a chat of 'Group' type. If you add a person to the existing conversation,\
        \ it creates a whole new conversation."
      operationId: "readGlipConversation"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a conversation to be returned."
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipConversationInfo"
        "404":
          description: "Conversation Not Found."
          content: {}
      x-api-group: "glip/conversations"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/groups:
    get:
      tags:
      - "Chats"
      summary: "Get User Groups"
      description: "Returns the list of groups where the user is a member."
      operationId: "listGlipGroups"
      parameters:
      - name: "type"
        in: "query"
        description: "Type of groups to be fetched (by default all type of groups\
          \ will be fetched)"
        schema:
          type: "string"
          enum:
          - "Group"
          - "Team"
          - "PrivateChat"
          - "PersonalChat"
      - name: "recordCount"
        in: "query"
        description: "Number of groups to be fetched by one request. The maximum value\
          \ is 250, by default - 30"
        schema:
          maximum: 250
          type: "integer"
          default: 30
      - name: "pageToken"
        in: "query"
        description: "Pagination token."
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipGroupList"
        "404":
          description: "Group with the specified ID is not found."
          content: {}
      deprecated: true
      x-api-group: "glip/groups"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Chats"
      summary: "Create Group"
      description: "Creates a new private chat/team."
      operationId: "createGlipGroup"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipCreateGroup"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipGroupInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "Forbidden"
          content: {}
      deprecated: true
      x-api-group: "glip/groups"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/groups/{groupId}:
    get:
      tags:
      - "Chats"
      summary: "Get Group"
      description: "Returns information about a group or multiple groups by their\
        \ ID(s). Batch request is supported."
      operationId: "readGlipGroup"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group to be returned, the maximum number\
          \ of IDs is 30"
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipGroupInfo"
            multipart/mixed:
              schema:
                $ref: "#/components/schemas/GlipGroupInfo"
        "207":
          description: "Mixed Result"
          content: {}
        "403":
          description: "You do not have permissions to get such kind of information."
          content: {}
        "404":
          description: "Person Not Found."
          content: {}
      deprecated: true
      x-api-group: "glip/groups"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/groups/{groupId}/events:
    get:
      tags:
      - "Calendar Events"
      summary: "Get Group Events"
      description: "Returns a list of calendar events available for the current user\
        \ within the specified group. Users can only see their personal tasks and\
        \ public tasks."
      operationId: "listGroupEvents"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEventInfo"
        "404":
          description: "Group with specified Id is not found."
          content: {}
      x-api-group: "glip/events"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Calendar Events"
      summary: "Create Event by Group ID"
      description: "Creates a new calendar event within the specified group."
      operationId: "createEventByGroupId"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipEventCreate"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEventInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
      x-api-group: "glip/groups/events"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/groups/{groupId}/posts:
    get:
      tags:
      - "Posts"
      summary: "Get Group Posts"
      description: "Returns posts which are available for the current user by group\
        \ ID."
      operationId: "listGlipGroupPosts"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group"
        required: true
        schema:
          type: "string"
      - name: "recordCount"
        in: "query"
        description: "Max number of records to be returned"
        schema:
          maximum: 250
          type: "integer"
          default: 30
      - name: "pageToken"
        in: "query"
        description: "Pagination token"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPosts"
        "404":
          description: "Group with specified ID is not found."
          content: {}
      deprecated: true
      x-api-group: "glip/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Posts"
      summary: "Create Post in Group"
      description: "Creates a new post in a group specified."
      operationId: "createGlipGroupPost"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group."
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipCreatePost"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPostInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Group not found."
          content: {}
      deprecated: true
      x-api-group: "glip/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/groups/{groupId}/posts/{postId}/text:
    put:
      tags:
      - "Posts"
      summary: "Update Post"
      description: "Modifies text of a post."
      operationId: "updateGlipPostText"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group"
        required: true
        schema:
          type: "string"
      - name: "postId"
        in: "path"
        description: "Internal identifier of a post"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          text/*:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
            application/json:
              schema:
                type: "string"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "Forbidden"
          content: {}
      deprecated: true
      x-api-group: "glip/posts"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/groups/{groupId}/bulk-assign:
    post:
      tags:
      - "Chats"
      summary: "Edit Group Members"
      description: "Updates group members. **Please note:** Only groups of 'Team'\
        \ type can be updated. Currently only one operation at a time (either adding\
        \ or removal) is supported."
      operationId: "assignGlipGroupMembers"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditGroupRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipGroupInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "Forbidden"
          content: {}
      deprecated: true
      x-api-group: "glip/groups"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/groups/{groupId}/webhooks:
    get:
      tags:
      - "Incoming Webhooks"
      summary: "Get Webhooks in Group"
      description: "Returns webhooks which are available for the current user by group\
        \ ID."
      operationId: "listGlipGroupWebhooks"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipWebhookList"
        "404":
          description: "Group with specified ID is not found."
          content: {}
      x-api-group: "glip/webhooks"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Incoming Webhooks"
      summary: "Create Webhook in Group"
      description: "Creates a new webhook."
      operationId: "createGlipGroupWebhook"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Internal identifier of a group"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipWebhookInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
      x-api-group: "glip/webhooks"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/data-export:
    get:
      tags:
      - "Compliance Exports"
      summary: "Get Data Export Task List"
      description: "Returns the list of Glip data export tasks."
      operationId: "listDataExportTasks"
      parameters:
      - name: "status"
        in: "query"
        description: "Status of the task(s) to be returned. Multiple values are supported"
        schema:
          type: "string"
          enum:
          - "Accepted"
          - "InProgress"
          - "Completed"
          - "Failed"
          - "Expired"
      - name: "page"
        in: "query"
        description: "Page number to be retrieved; value range is > 0"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Number of records to be returned per page; value range is 1\
          \ - 250"
        schema:
          type: "integer"
          default: 30
      responses:
        "200":
          description: "Data Export Task List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataExportTaskList"
      x-api-group: "glip/compliance"
      x-source-file: "rc-glip-information-collector-public.yml"
      x-throttling-group: "Medium"
      x-app-permission: "Glip"
    post:
      tags:
      - "Compliance Exports"
      summary: "Create Data Export Task"
      description: "Creates a task for Glip data export and returns a link at which\
        \ the exported data will be available in future once the task is implemented.\
        \ The exported data can be downloaded by calling Get Data Export Task method\
        \ with the specified task ID. Simultaneously no more than 2 tasks per company\
        \ can be created."
      operationId: "createDataExportTask"
      requestBody:
        description: "JSON body"
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/CreateDataExportTaskRequest"
        required: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataExportTask"
      x-api-group: "glip/data-export"
      x-source-file: "rc-glip-information-collector-public.yml"
      x-throttling-group: "Heavy"
      x-app-permission: "Glip"
  /restapi/v1.0/glip/data-export/{taskId}:
    get:
      tags:
      - "Compliance Exports"
      summary: "Get Data Export Task"
      description: "Returns the links for downloading Glip data exported within the\
        \ specified task. If the export task is still in progress, then only the task\
        \ status will be returned. If the data is ready for downloading, then the\
        \ list of URLs will be returned."
      operationId: "readDataExportTask"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task to be retrieved"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataExportTask"
      x-api-group: "glip/compliance"
      x-source-file: "rc-glip-information-collector-public.yml"
      x-throttling-group: "Medium"
      x-app-permission: "Glip"
  /restapi/v1.0/glip/data-export/{taskId}/datasets/{datasetId}:
    get:
      tags:
      - "Compliance Exports"
      summary: "Get Data Export Task Dataset"
      description: "Returns the specified dataset by ID. Each dataset is a ZIP archive\
        \ the size of which is limited to 1 Gb."
      operationId: "readDataExportTaskDataset"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Internal identifier of a task"
        required: true
        schema:
          type: "string"
      - name: "datasetId"
        in: "path"
        description: "Internal identifier of a dataset"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Dataset Zip Archive"
          content:
            application/json:
              schema:
                type: "string"
                format: "binary"
      x-api-group: "glip/compliance"
      x-source-file: "rc-glip-information-collector-public.yml"
      x-throttling-group: "Heavy"
      x-app-permission: "Glip"
  /restapi/v1.0/glip/everyone:
    get:
      tags:
      - "Teams"
      summary: "Get Everyone Chat"
      description: "Returns information about Everyone chat, which is a company level\
        \ chat including all employees; assigned with specific name."
      operationId: "readGlipEveryone"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEveryoneInfo"
        "404":
          description: "Chat Not Found."
          content: {}
      x-api-group: "glip/everyone"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    patch:
      tags:
      - "Teams"
      summary: "Update Everyone Сhat"
      description: "Updates Everyone chat information. Everyone chat is a company\
        \ level chat including all employees; assigned with specific name."
      operationId: "patchGlipEveryone"
      requestBody:
        description: "JSON body"
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UpdateGlipEveryoneRequest"
        required: false
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipEveryoneInfo"
        "404":
          description: "Chat Not Found."
          content: {}
      x-api-group: "glip/everyone"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams:
    get:
      tags:
      - "Teams"
      summary: "Get Teams"
      description: "Returns the list of teams where the user is a member (both archived\
        \ and active) combined with a list of public teams that can be joined by the\
        \ current user. All records in response are sorted by creation time of a chat\
        \ in ascending order. A team is a chat between 2 and more (unlimited number)\
        \ participants assigned with specific name."
      operationId: "listGlipTeams"
      parameters:
      - name: "recordCount"
        in: "query"
        description: "Number of teams to be fetched by one request. The maximum value\
          \ is 250, by default - 30"
        schema:
          maximum: 250
          type: "integer"
          default: 30
      - name: "pageToken"
        in: "query"
        description: "Pagination token."
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTeamsList"
      x-api-group: "glip/teams"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    post:
      tags:
      - "Teams"
      summary: "Create Team"
      description: "Creates a team, and adds a list of people to the team.  A team\
        \ is a chat between 2 and more (unlimited number) participants assigned with\
        \ specific name."
      operationId: "createGlipTeam"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipPostTeamBody"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTeamInfo"
        "400":
          description: "One of body parameters has invalid value."
          content: {}
      x-api-group: "glip/teams"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams/{chatId}:
    get:
      tags:
      - "Teams"
      summary: "Get Team"
      description: "Returns information about the specified team. A team is a chat\
        \ between 2 and more participants assigned with specific name."
      operationId: "readGlipTeam"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to be returned."
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTeamInfo"
        "404":
          description: "Team Not Found."
          content: {}
      x-api-group: "glip/teams"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    delete:
      tags:
      - "Teams"
      summary: "Delete Team"
      description: "Deletes the specified team. A team is a chat between 2 and more\
        \ (unlimited number) participants assigned with specific name."
      operationId: "deleteGlipTeam"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content."
          content: {}
        "403":
          description: "User is not Team Admin."
          content: {}
        "404":
          description: "Team Not Found."
          content: {}
      x-api-group: "glip/teams"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    patch:
      tags:
      - "Teams"
      summary: "Update Team"
      description: "Updates the name and description of the specified team. A team\
        \ is a chat between 2 and more (unlimited number) participants assigned with\
        \ specific name."
      operationId: "patchGlipTeam"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to be updated."
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipPatchTeamBody"
        required: true
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipTeamInfo"
        "400":
          description: "One of body parameters has invalid value."
          content: {}
        "403":
          description: "User is not Team Admin or Team is not active."
          content: {}
        "404":
          description: "Team Not Found."
          content: {}
      x-api-group: "glip/teams"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams/{chatId}/remove:
    post:
      tags:
      - "Teams"
      summary: "Remove Team Members"
      description: "Removes members from the specified team. A team is a chat between\
        \ 2 and more participants assigned with specific name."
      operationId: "removeGlipTeamMembers"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to remove members from."
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/GlipPostMembersIdsListBody"
        required: true
      responses:
        "204":
          description: "No Content."
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "User is not Team Admin."
          content: {}
        "404":
          description: "Team Not Found."
          content: {}
      x-api-group: "glip/teams/remove-members"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams/{chatId}/join:
    post:
      tags:
      - "Teams"
      summary: "Join Team"
      description: "Adds the current user to the specified team. A team is a chat\
        \ between 2 and more participants assigned with specific name."
      operationId: "joinGlipTeam"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to be joined."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "205":
          description: "Reset Content"
          content: {}
        "403":
          description: "Team status is not Active or Team is not public"
          content: {}
        "404":
          description: "Team Not Found."
          content: {}
      x-api-group: "glip/teams/join"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams/{chatId}/archive:
    post:
      tags:
      - "Teams"
      summary: "Archive Team"
      description: "Changes the status of the specified team to 'Archived'. A team\
        \ is a chat between 2 and more participants assigned with specific name."
      operationId: "archiveGlipTeam"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to be archived."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "205":
          description: "Reset Content"
          content: {}
        "403":
          description: "User is not Team Admin"
          content: {}
        "404":
          description: "Team Not Found"
          content: {}
      x-api-group: "glip/teams/archive"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams/{chatId}/unarchive:
    post:
      tags:
      - "Teams"
      summary: "Unarchive Team"
      description: "Changes the status of the specified team to 'Active'. A team is\
        \ a chat between 2 and more participants assigned with specific name."
      operationId: "unarchiveGlipTeam"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to be made active."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "205":
          description: "Reset Content"
          content: {}
        "403":
          description: "User is not Team Admin"
          content: {}
        "404":
          description: "Team Not Found"
          content: {}
      x-api-group: "glip/teams/unarchive"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams/{chatId}/leave:
    post:
      tags:
      - "Teams"
      summary: "Leave Team"
      description: "Removes the current user from the specified team. A team is a\
        \ chat between 2 and more participants assigned with specific name."
      operationId: "leaveGlipTeam"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to be left."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "205":
          description: "Reset Content."
          content: {}
        "403":
          description: "Team status is not Active."
          content: {}
        "404":
          description: "Team Not Found."
          content: {}
      x-api-group: "glip/teams/leave"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/teams/{chatId}/add:
    post:
      tags:
      - "Teams"
      summary: "Add Team Members"
      description: "Adds members to the specified team. A team is a chat between 2\
        \ and more participants assigned with specific name."
      operationId: "addGlipTeamMembers"
      parameters:
      - name: "chatId"
        in: "path"
        description: "Internal identifier of a team to add members to."
        required: true
        schema:
          type: "string"
      requestBody:
        description: "JSON body"
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/GlipPostMembersListBody"
        required: true
      responses:
        "204":
          description: "No Content."
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "403":
          description: "User is not Team Admin."
          content: {}
        "404":
          description: "Team Not Found."
          content: {}
      x-api-group: "glip/teams/add-members"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/notes/{noteId}:
    get:
      tags:
      - "Notes"
      summary: "Get Note"
      description: "Returns the specified note(s). It is possible to fetch up to 50\
        \ notes per request."
      operationId: "readUserNote"
      parameters:
      - name: "noteId"
        in: "path"
        description: "Internal identifier of a note to be fetched"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGlipNoteInfo"
        "404":
          description: "When note is not found."
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    delete:
      tags:
      - "Notes"
      summary: "Delete Note"
      description: "Deletes the specified note."
      operationId: "deleteNote"
      parameters:
      - name: "noteId"
        in: "path"
        description: "Internal identifier of a note to be deleted"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Note is locked by another user"
          content: {}
        "403":
          description: "You have no permissions to delete note"
          content: {}
        "404":
          description: "Note is not found"
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    patch:
      tags:
      - "Notes"
      summary: "Update Note"
      description: "Edits a note. Notes can be edited by any user if posted to a chat.\
        \ the user belongs to."
      operationId: "patchNote"
      parameters:
      - name: "noteId"
        in: "path"
        description: "Internal identifier of a note to be updated"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipNoteCreate"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipNoteInfo"
        "400":
          description: "Note is locked by another user"
          content: {}
        "403":
          description: "You have no permissions to update the note"
          content: {}
        "404":
          description: "Note is not found"
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/notes/{noteId}/lock:
    post:
      tags:
      - "Notes"
      summary: "Lock Note"
      description: "Locks a note providing the user with the unique write access for\
        \ 5 hours."
      operationId: "lockNote"
      parameters:
      - name: "noteId"
        in: "path"
        description: "Internal identifier of a note to be locked"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Сontent"
          content: {}
        "400":
          description: "Note is locked by another user"
          content: {}
        "403":
          description: "You have no permissions to lock the note"
          content: {}
        "404":
          description: "Note is not found"
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/notes/{noteId}/publish:
    post:
      tags:
      - "Notes"
      summary: "Publish Note"
      description: "Publishes a note making it visible to other users."
      operationId: "publishNote"
      parameters:
      - name: "noteId"
        in: "path"
        description: "Internal identifier of a note to be published"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "User is not a creator of note"
          content: {}
        "404":
          description: "Note is not found"
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/notes/{noteId}/unlock:
    post:
      tags:
      - "Notes"
      summary: "Unlock Note"
      description: "Unlocks a note letting other users edit this note. Once the note\
        \ is locked (by another user) it cannot be unlocked during 5 hours since the\
        \ lock datetime."
      operationId: "unlockNote"
      parameters:
      - name: "noteId"
        in: "path"
        description: "Internal identifier of a note to be unlocked"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
          content: {}
        "400":
          description: "Note is locked by another user"
          content: {}
        "403":
          description: "You have no permissions to unlock the note"
          content: {}
        "404":
          description: "Note is not found"
          content: {}
      x-api-group: "glip/notes"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/cards:
    post:
      tags:
      - "Posts"
      summary: "Create Card"
      description: "Creates a new message."
      operationId: "createGlipCard"
      parameters:
      - name: "groupId"
        in: "query"
        description: "Internal identifier of a group where to create a post with the\
          \ card"
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipMessageAttachmentInfoRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipMessageAttachmentInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
      deprecated: true
      x-api-group: "glip/cards"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/cards/{cardId}:
    get:
      tags:
      - "Posts"
      summary: "Get Card"
      description: "Returns card(s) with given id(s)."
      operationId: "readGlipCard"
      parameters:
      - name: "cardId"
        in: "path"
        description: "Internal identifier of a card or comma separated list of card\
          \ IDs."
        required: true
        style: "simple"
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipMessageAttachmentInfo"
            multipart/mixed:
              schema:
                $ref: "#/components/schemas/GlipMessageAttachmentInfo"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Card not found."
          content: {}
      deprecated: true
      x-api-group: "glip/cards"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    put:
      tags:
      - "Posts"
      summary: "Update Card"
      description: "Updates a card."
      operationId: "updateGlipCard"
      parameters:
      - name: "cardId"
        in: "path"
        description: "Internal identifier of a card"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlipMessageAttachmentInfoRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Card for update does not exist."
          content: {}
      deprecated: true
      x-api-group: "glip/cards"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
    delete:
      tags:
      - "Posts"
      summary: "Delete Card"
      description: "Deletes a card by ID."
      operationId: "deleteGlipCard"
      parameters:
      - name: "cardId"
        in: "path"
        description: "Card ID to be deleted."
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content: {}
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
        "404":
          description: "Card not found."
          content: {}
      deprecated: true
      x-api-group: "glip/cards"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/preferences:
    get:
      tags:
      - "Profile"
      summary: "Get Preferences"
      description: "Returns information about user preferences."
      operationId: "readGlipPreferences"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipPreferencesInfo"
      x-api-group: "glip/preferences"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Medium"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/glip/favorites:
    get:
      tags:
      - "Chats"
      summary: "Get Favorite Chats"
      description: "Returns a list of the current user's favorite chats."
      operationId: "listFavoriteChats"
      parameters:
      - name: "recordCount"
        in: "query"
        description: "Max number of chats to be fetched by one request (Not more than\
          \ 250)."
        schema:
          maximum: 250
          type: "integer"
          default: 30
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlipChatsListWithoutNavigation"
        "400":
          description: "Some of parameters are missing or have invalid format."
          content: {}
      x-api-group: "glip/favorites"
      x-feature: "RCAppDesktop"
      x-source-file: "rc-glip.yml"
      x-throttling-group: "Light"
      x-app-permission: "TeamMessaging"
      x-user-permission: "UnifiedAppDesktop"
  /restapi/v1.0/subscription:
    get:
      tags:
      - "Subscriptions"
      summary: "Get Subscription List"
      description: "Returns a list of subscriptions created by the user for the current\
        \ authorized client application.\n"
      operationId: "listSubscriptions"
      responses:
        "200":
          description: "List of Subscriptions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionListResource"
      x-api-group: "n11s/subscriptions"
      x-request-max-body-size: "100m"
      x-availability: "High"
      x-throttling-group: "Light"
    post:
      tags:
      - "Subscriptions"
      summary: "Create Subscription"
      description: "Creates a new subscription for the current authorized user / client\
        \ application."
      operationId: "createSubscription"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubscriptionRequest"
        required: true
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionInfo"
      x-api-group: "n11s/subscriptions"
      x-request-max-body-size: "100m"
      x-availability: "High"
      x-throttling-group: "Medium"
  /restapi/v1.0/subscription/{subscriptionId}:
    get:
      tags:
      - "Subscriptions"
      summary: "Get Subscription"
      description: "Returns the existing subscription by ID."
      operationId: "readSubscription"
      parameters:
      - $ref: "#/components/parameters/SubscriptionId"
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionInfo"
      x-api-group: "n11s/subscription"
      x-request-max-body-size: "100m"
      x-availability: "High"
      x-throttling-group: "Light"
    put:
      tags:
      - "Subscriptions"
      summary: "Update Subscription"
      description: "Updates the existing subscription. The client application can\
        \ extend/narrow\nthe list of events for which it receives notifications within\
        \ this subscription.\nIf event filters are specified, calling this method\
        \ modifies them for the\nexisting subscription. The method also allows to\
        \ set the subscription expiration time.\nIf other than `events` and `expiresIn`\
        \ parameters are passed in the request they will be ignored.\nIf the request\
        \ body is empty then the specified subscription will be just renewed without\
        \ any\nevent filter modifications and with default expiration time.\n"
      operationId: "updateSubscription"
      parameters:
      - $ref: "#/components/parameters/SubscriptionId"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSubscriptionRequest"
        required: true
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionInfo"
      x-api-group: "n11s/subscription"
      x-request-max-body-size: "100m"
      x-availability: "High"
      x-throttling-group: "Medium"
    delete:
      tags:
      - "Subscriptions"
      summary: "Cancel Subscription"
      description: "Cancels the existing subscription."
      operationId: "deleteSubscription"
      parameters:
      - $ref: "#/components/parameters/SubscriptionId"
      responses:
        "204":
          description: "No Content"
      x-api-group: "n11s/subscription"
      x-request-max-body-size: "100m"
      x-availability: "High"
      x-throttling-group: "Medium"
  /restapi/v1.0/subscription/{subscriptionId}/renew:
    post:
      tags:
      - "Subscriptions"
      summary: "Renew Subscription"
      description: "Renews the existing subscription (this request comes with empty\
        \ body)."
      operationId: "renewSubscription"
      parameters:
      - $ref: "#/components/parameters/SubscriptionId"
      responses:
        "200":
          description: "Subscription renewed successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionInfo"
      x-api-group: "n11s/subscription/renew"
      x-request-max-body-size: "100m"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/number-parser/parse:
    post:
      tags:
      - "Phone Numbers"
      summary: "Parse Phone Number"
      description: "Returns one or more parsed and/or formatted phone numbers that\
        \ are passed as a string."
      operationId: "parsePhoneNumber"
      parameters:
      - name: "homeCountry"
        in: "query"
        description: "Internal identifier of a home country. The default value is\
          \ ISO code (ISO 3166) of the user's home country or brand country, if the\
          \ user is undefined"
        schema:
          type: "string"
      - name: "nationalAsPriority"
        in: "query"
        description: "The default value is 'False'. If 'True', the numbers that are\
          \ closer to the home country are given higher priority"
        schema:
          type: "boolean"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParsePhoneNumberRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParsePhoneNumberResponse"
      x-api-group: "number-parser/parse"
      x-source-file: "rc-platform-number-parser.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/brand/{brandId}/contracted-country/{contractedCountryId}:
    get:
      tags:
      - "Company"
      summary: "Get Domestic Country List"
      description: "Returns the list of domestic countries by contracted country and\
        \ brand of the account."
      operationId: "listDomesticCountries"
      parameters:
      - name: "brandId"
        in: "path"
        description: "Internal identifier of a brand"
        required: true
        schema:
          type: "string"
      - name: "contractedCountryId"
        in: "path"
        description: "Internal identifier of a country"
        required: true
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCountryListResponse"
      x-api-group: "dictionary/contracted-country"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/state:
    get:
      tags:
      - "Regional Settings"
      summary: "Get States List"
      description: "Returns all the states of a certain country"
      operationId: "listStates"
      parameters:
      - name: "allCountries"
        in: "query"
        description: "If set to 'True' then states for all countries are returned\
          \ and `countryId` is ignored, even if specified. If the value is empty then\
          \ the parameter is ignored"
        schema:
          type: "boolean"
      - name: "countryId"
        in: "query"
        description: "Internal identifier of a country"
        schema:
          type: "integer"
          format: "int64"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "withPhoneNumbers"
        in: "query"
        description: "If 'True', the list of states with phone numbers available for\
          \ buying is returned"
        schema:
          type: "boolean"
          default: false
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStateListResponse"
      x-api-group: "dictionary/state"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/state/{stateId}:
    get:
      tags:
      - "Regional Settings"
      summary: "Get State"
      description: "Returns the information on a specific state."
      operationId: "readState"
      parameters:
      - name: "stateId"
        in: "path"
        description: "Internal identifier of a state"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStateInfoResponse"
      x-api-group: "dictionary/state"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/location:
    get:
      tags:
      - "Regional Settings"
      summary: "Get Location List"
      description: "Returns all available locations for a certain state."
      operationId: "listLocations"
      parameters:
      - name: "orderBy"
        in: "query"
        description: "Sorts results by the property specified"
        schema:
          type: "string"
          default: "City"
          enum:
          - "Npa"
          - "City"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "stateId"
        in: "query"
        description: "Internal identifier of a state"
        schema:
          type: "string"
      - name: "withNxx"
        in: "query"
        description: "Specifies if nxx codes are returned"
        schema:
          type: "boolean"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLocationListResponse"
      x-api-group: "dictionary/location"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/permission:
    get:
      tags:
      - "Permissions"
      summary: "Get Permission List"
      description: "Returns a list of extension user permissions."
      operationId: "listPermissions"
      parameters:
      - name: "page"
        in: "query"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        schema:
          type: "string"
          default: "100"
      - name: "assignable"
        in: "query"
        schema:
          type: "boolean"
      - name: "servicePlanId"
        in: "query"
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionCollectionResource"
      x-api-group: "dictionary/permission"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/permission/{permissionId}:
    get:
      tags:
      - "Permissions"
      summary: "Get Permission"
      description: "Returns user permission by ID."
      operationId: "readPermission"
      parameters:
      - name: "permissionId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionResource"
      x-api-group: "dictionary/permission"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/language:
    get:
      tags:
      - "Regional Settings"
      summary: "Get Language List"
      description: "Returns the information about supported languages."
      operationId: "listLanguages"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LanguageList"
      x-api-group: "dictionary/language"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/language/{languageId}:
    get:
      tags:
      - "Regional Settings"
      summary: "Get Language"
      description: "Returns language by ID."
      operationId: "readLanguage"
      parameters:
      - name: "languageId"
        in: "path"
        description: "Internal identifier of a language"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LanguageInfo"
      x-api-group: "dictionary/language"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/permission-category:
    get:
      tags:
      - "Permissions"
      summary: "Get Permission Category List"
      description: "Returns the list of permission categories."
      operationId: "listPermissionCategories"
      parameters:
      - name: "page"
        in: "query"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        schema:
          type: "string"
          default: "100"
      - name: "servicePlanId"
        in: "query"
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionCategoryCollectionResource"
      x-api-group: "dictionary/permission-category"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/permission-category/{permissionCategoryId}:
    get:
      tags:
      - "Permissions"
      summary: "Get Permission Category"
      description: "Returns permission category by ID."
      operationId: "readPermissionCategory"
      parameters:
      - name: "permissionCategoryId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionCategoryResource"
      x-api-group: "dictionary/permission-category"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/greeting:
    get:
      tags:
      - "Greetings"
      summary: "Get Standard Greeting List"
      description: "Returns the list of predefined standard greetings. Custom greetings\
        \ recorded by user are not returned in response to this request. See Get Extension\
        \ Custom Greetings."
      operationId: "listStandardGreetings"
      parameters:
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted."
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)."
        schema:
          type: "integer"
          default: 100
      - name: "type"
        in: "query"
        description: "Type of a greeting, specifying the case when the greeting is\
          \ played"
        schema:
          type: "string"
          enum:
          - "Introductory"
          - "Announcement"
          - "ConnectingMessage"
          - "ConnectingAudio"
          - "Voicemail"
          - "Unavailable"
          - "HoldMusic"
          - "Company"
      - name: "usageType"
        in: "query"
        description: "Usage type of a greeting, specifying if the greeting is applied\
          \ for user extension or department (call queue) extension"
        schema:
          type: "string"
          enum:
          - "UserExtensionAnsweringRule"
          - "ExtensionAnsweringRule"
          - "DepartmentExtensionAnsweringRule"
          - "CompanyAnsweringRule"
          - "CompanyAfterHoursAnsweringRule"
          - "VoicemailExtensionAnsweringRule"
          - "AnnouncementExtensionAnsweringRule"
          - "SharedLinesGroupAnsweringRule"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DictionaryGreetingList"
      x-api-group: "dictionary/greeting"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-throttling-group: "Medium"
  /restapi/v1.0/dictionary/greeting/{greetingId}:
    get:
      tags:
      - "Greetings"
      summary: "Get Standard Greeting"
      description: "Returns a standard greeting by ID."
      operationId: "readStandardGreeting"
      parameters:
      - name: "greetingId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DictionaryGreetingInfo"
      x-api-group: "dictionary/greeting"
      x-source-file: "rc-platform-answering-rules.yml"
      x-availability: "High"
      x-throttling-group: "Medium"
  /restapi/v1.0/dictionary/timezone:
    get:
      tags:
      - "Regional Settings"
      summary: "Get Timezone List"
      description: "Returns all available timezones."
      operationId: "listTimezones"
      parameters:
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "string"
          default: "100"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTimezoneListResponse"
      x-api-group: "dictionary/timezone"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/timezone/{timezoneId}:
    get:
      tags:
      - "Regional Settings"
      summary: "Get Timezone"
      description: "Returns the information on a certain timezone."
      operationId: "readTimezone"
      parameters:
      - name: "timezoneId"
        in: "path"
        description: "Internal identifier of a timezone"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "string"
          default: "100"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTimezoneInfoResponse"
      x-api-group: "dictionary/timezone"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/fax-cover-page:
    get:
      tags:
      - "Fax"
      summary: "Get Fax Cover Page List"
      description: "Returns fax cover pages available for the current extension."
      operationId: "listFaxCoverPages"
      parameters:
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      responses:
        "200":
          description: "List of Fax Cover Pages"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFaxCoverPagesResponse"
      x-api-group: "dictionary/fax-cover-page"
      x-source-file: "rc-platform-messaging.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/user-role:
    get:
      tags:
      - "Role Management"
      summary: "Get Standard User Role List"
      operationId: "listStandardUserRole"
      parameters:
      - name: "page"
        in: "query"
        schema:
          type: "string"
          default: "1"
      - name: "perPage"
        in: "query"
        schema:
          type: "string"
          default: "100"
      - name: "servicePlanId"
        in: "query"
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolesCollectionResource"
      x-api-group: "dictionary/user-role"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/user-role/{roleId}:
    get:
      tags:
      - "Role Management"
      summary: "Get Standard User Role"
      description: "Returns standard user role."
      operationId: "readStandardUserRole"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleResource"
      x-api-group: "dictionary/user-role"
      x-source-file: "rc-platform-rnp.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/country:
    get:
      tags:
      - "Regional Settings"
      summary: "Get Country List"
      description: "Returns all the countries available for calling."
      operationId: "listCountries"
      parameters:
      - name: "loginAllowed"
        in: "query"
        description: "Specifies whether login with the phone numbers of this country\
          \ is enabled or not"
        schema:
          type: "boolean"
      - name: "signupAllowed"
        in: "query"
        description: "Indicates whether signup/billing is allowed for a country. If\
          \ not specified all countries are returned (according to other filters specified\
          \ if any)"
        schema:
          type: "boolean"
      - name: "numberSelling"
        in: "query"
        description: "Specifies if RingCentral sells phone numbers of this country"
        schema:
          type: "boolean"
      - name: "page"
        in: "query"
        description: "Indicates the page number to retrieve. Only positive number\
          \ values are accepted"
        schema:
          type: "integer"
          default: 1
      - name: "perPage"
        in: "query"
        description: "Indicates the page size (number of items)"
        schema:
          type: "integer"
          default: 100
      - name: "freeSoftphoneLine"
        in: "query"
        description: "Specifies if free phone line for softphone is available for\
          \ a country or not"
        schema:
          type: "boolean"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCountryListResponse"
      x-api-group: "dictionary/country"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/dictionary/country/{countryId}:
    get:
      tags:
      - "Regional Settings"
      summary: "Get Country"
      description: "Returns the information on a specific country."
      operationId: "readCountry"
      parameters:
      - name: "countryId"
        in: "path"
        description: "Internal identifier of a country"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCountryInfoDictionaryResponse"
      x-api-group: "dictionary/country"
      x-source-file: "rc-platform-provisioning.yml"
      x-availability: "High"
      x-throttling-group: "Light"
  /restapi/v1.0/client-info/sip-provision:
    post:
      tags:
      - "Device SIP Registration"
      summary: "Register Device"
      description: "Creates SIP registration of a device/application (WebPhone, Mobile,\
        \ softphone)."
      operationId: "createSIPRegistration"
      requestBody:
        description: "JSON body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSipRegistrationRequest"
        required: true
      responses:
        default:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSipRegistrationResponse"
      x-api-group: "client-info/sip-provision"
      x-source-file: "rc-platform-client-info.yml"
      x-availability: "High"
      x-throttling-group: "Heavy"
      x-app-permission: "VoipCalling"
  /restapi/{apiVersion}:
    get:
      tags:
      - "API Info"
      summary: "Get Version Info"
      description: "Returns current API version info by apiVersion."
      operationId: "readAPIVersion"
      parameters:
      - name: "apiVersion"
        in: "path"
        description: "API version to be requested, for example 'v1.0'"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "API Version"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVersionResponse"
      x-api-group: "restapi/version"
      x-source-file: "rc-platform-api-info.yml"
      x-availability: "High"
      x-throttling-group: "NoThrottling"
  /scim/v2/Users:
    get:
      tags:
      - "SCIM"
      summary: "Search/List Users"
      operationId: "searchViaGet2"
      parameters:
      - name: "filter"
        in: "query"
        description: "only support 'userName' or 'email' filter expressions for now"
        schema:
          type: "string"
      - name: "startIndex"
        in: "query"
        description: "start index (1-based)"
        schema:
          type: "integer"
          format: "int32"
          default: 1
      - name: "count"
        in: "query"
        description: "page size"
        schema:
          type: "integer"
          format: "int32"
          default: 100
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSearchResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserSearchResponse"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "1m"
      x-source-file: "rc-scim.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
    post:
      tags:
      - "SCIM"
      summary: "Create User"
      operationId: "createUser2"
      requestBody:
        description: "a new user without 'id'"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
          application/scim+json:
            schema:
              $ref: "#/components/schemas/CreateUser"
        required: false
      responses:
        "201":
          description: "successfully created user"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "409":
          description: "duplicate email"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "10m"
      x-source-file: "rc-scim.yml"
      x-availability: "Limited"
      x-throttling-group: "Heavy"
      x-app-permission: "EditAccounts"
  /scim/v2/Users/.search:
    post:
      tags:
      - "SCIM"
      summary: "Search/List Users"
      operationId: "searchViaPost2"
      requestBody:
        description: "search parameters"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
          application/scim+json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
        required: false
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSearchResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserSearchResponse"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "1m"
      x-source-file: "rc-scim.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
  /scim/v2/Users/{id}:
    get:
      tags:
      - "SCIM"
      summary: "Get User"
      operationId: "readUser2"
      parameters:
      - name: "id"
        in: "path"
        description: "user id"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "1m"
      x-source-file: "rc-scim.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
    put:
      tags:
      - "SCIM"
      summary: "Update/Replace User"
      operationId: "replaceUser2"
      parameters:
      - name: "id"
        in: "path"
        description: "user id"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "an existing user"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/scim+json:
            schema:
              $ref: "#/components/schemas/User"
        required: false
      responses:
        "200":
          description: "successfully fully updated a user"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "409":
          description: "duplicate email"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "10m"
      x-source-file: "rc-scim.yml"
      x-availability: "Limited"
      x-throttling-group: "Heavy"
      x-app-permission: "EditAccounts"
    delete:
      tags:
      - "SCIM"
      summary: "Delete User"
      operationId: "deleteUser2"
      parameters:
      - name: "id"
        in: "path"
        description: "user id"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "successfully deleted"
          content: {}
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "1m"
      x-source-file: "rc-scim.yml"
      x-availability: "Limited"
      x-throttling-group: "Heavy"
      x-app-permission: "EditAccounts"
    patch:
      tags:
      - "SCIM"
      summary: "Update/Patch User"
      operationId: "patchUser2"
      parameters:
      - name: "id"
        in: "path"
        description: "user id"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "patch operations list"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPatch"
          application/scim+json:
            schema:
              $ref: "#/components/schemas/UserPatch"
        required: false
      responses:
        "200":
          description: "successfully partially updated user"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "409":
          description: "duplicate email"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "10m"
      x-source-file: "rc-scim.yml"
      x-availability: "Limited"
      x-throttling-group: "Heavy"
      x-app-permission: "EditAccounts"
  /scim/v2/ServiceProviderConfig:
    get:
      tags:
      - "SCIM"
      summary: "Get Service Provider Config"
      operationId: "readServiceProviderConfig2"
      responses:
        "200":
          description: "Service Provider Configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceProviderConfig"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ServiceProviderConfig"
      x-api-group: "scim/ServiceProviderConfig"
      x-request-max-body-size: "1m"
      x-source-file: "rc-scim.yml"
      x-availability: "High"
      x-throttling-group: "NoThrottling"
  /scim/Users:
    get:
      tags:
      - "SCIM"
      summary: "Search/List Users"
      operationId: "searchViaGet"
      parameters:
      - name: "filter"
        in: "query"
        description: "only support 'userName' or 'email' filter expressions for now"
        schema:
          type: "string"
      - name: "startIndex"
        in: "query"
        description: "start index (1-based)"
        schema:
          type: "integer"
          format: "int32"
          default: 1
      - name: "count"
        in: "query"
        description: "page size"
        schema:
          type: "integer"
          format: "int32"
          default: 100
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSearchResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserSearchResponse"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "1m"
      x-source-file: "rc-scim.yml"
      x-availability: "High"
      x-throttling-group: "Light"
      x-app-permission: "ReadAccounts"
    post:
      tags:
      - "SCIM"
      summary: "Create User"
      operationId: "createUser"
      requestBody:
        description: "New user without ID"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
          application/scim+json:
            schema:
              $ref: "#/components/schemas/CreateUser"
        required: false
      responses:
        "201":
          description: "successfully created user"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "401":
          description: "authorization failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "403":
          description: "permissions denied"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "404":
          description: "not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "409":
          description: "duplicate email"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "429":
          description: "too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
        "500":
          description: "internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ScimErrorResponse"
      x-api-group: "scim/Users"
      x-request-max-body-size: "10m"
      x-source-file: "rc-scim.yml"
      x-availability: "Limited"
      x-throttling-group: "Heavy"
      x-app-permission: "EditAccounts"
  /scim/ServiceProviderConfig:
    get:
      tags:
      - "SCIM"
      summary: "Get Service Provider Config"
      operationId: "readServiceProviderConfig"
      responses:
        "200":
          description: "Service Provider Configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceProviderConfig"
            application/scim+json:
              schema:
                $ref: "#/components/schemas/ServiceProviderConfig"
      x-api-group: "scim/ServiceProviderConfig"
      x-request-max-body-size: "1m"
      x-source-file: "rc-scim.yml"
      x-availability: "High"
      x-throttling-group: "NoThrottling"
  /analytics/phone/performance/v1/accounts/{accountId}/calls/aggregate:
    post:
      tags:
      - "Line Of Business Analytics"
      summary: "Aggregate Call Performance Data"
      description: "Returns call performance aggregations filtered by parameters specified.\
        \ This API is deprecated, and it will be disabled after September 8th. Please\
        \ use [new version](https://developers.ringcentral.com/api-reference/Line-Of-Business-Analytics/analyticsCallsAggregationFetch)\
        \ instead."
      operationId: "aggregatePerformanceReportCalls"
      deprecated: true
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "page"
        in: "query"
        description: "The current page number"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 1
      - name: "perPage"
        in: "query"
        description: "Number of records displayed on a page"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsAggregatesRequest"
        required: true
      responses:
        "200":
          description: "Performance Calls Aggregates"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsAggregatesResponse"
        "400":
          description: "Request is invalid (e.g. malformed request syntax, invalid\
            \ request parameters, etc.)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyBadRequest"
        "401":
          description: "Client must authenticate itself to get the requested response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyUnauthorized"
        "403":
          description: "The client does not have access rights to the content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyForbidden"
        "500":
          description: "The server has encountered a situation it does not know how\
            \ to handle"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyInternalError"
      x-api-group: "analytics/phone/performance/calls/aggregate"
      x-throttling-group: "Light"
      x-app-permission: "Analytics"
  /analytics/phone/performance/v1/accounts/{accountId}/calls/timeline:
    post:
      tags:
      - "Line Of Business Analytics"
      summary: "Timeline Call Performance Data"
      description: "Returns time-value data aggregations filtered by parameters specified.\
        \ This API is deprecated, and it will be disabled after September 8th. Please\
        \ use [new version](https://developers.ringcentral.com/api-reference/Line-Of-Business-Analytics/analyticsCallsTimelineFetch)\
        \ instead."
      operationId: "performanceReportCallsTimeline"
      deprecated: true
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "interval"
        in: "query"
        description: "Aggregation interval"
        required: true
        schema:
          $ref: "#/components/schemas/AnalyticsLegacyInterval"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimelineRequest"
        required: true
      responses:
        "200":
          description: "Timeline Call Performance Data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimelineResponse"
        "400":
          description: "Request is invalid (e.g. malformed request syntax, invalid\
            \ request parameters, etc.)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyBadRequest"
        "401":
          description: "Client must authenticate itself to get the requested response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyUnauthorized"
        "403":
          description: "The client does not have access rights to the content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyForbidden"
        "500":
          description: "The server has encountered a situation it does not know how\
            \ to handle"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsLegacyInternalError"
      x-api-group: "analytics/phone/performance/calls/timeline"
      x-throttling-group: "Light"
      x-app-permission: "Analytics"
  /analytics/calls/v1/accounts/{accountId}/aggregation/fetch:
    post:
      tags:
      - "Line Of Business Analytics"
      summary: "Calls Aggregation Data"
      description: "Returns call aggregations filtered by parameters specified"
      operationId: "analyticsCallsAggregationFetch"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "page"
        in: "query"
        description: "The current page number (positive numbers only)"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 1
      - name: "perPage"
        in: "query"
        description: "Number of records displayed on a page (positive numbers only,\
          \ max value of 200)"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 1
          maximum: 200
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AggregationRequest"
        required: true
      responses:
        "200":
          description: "Calls Aggregation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AggregationResponse"
        "400":
          description: "Request is invalid (e.g. malformed request syntax, invalid\
            \ request parameters, etc.)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "401":
          description: "Client must authenticate itself to get the requested response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "403":
          description: "The client does not have access rights to the content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: "The server has encountered a situation it does not know how\
            \ to handle"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
      x-api-group: "analytics/calls/aggregation/fetch"
      x-throttling-group: "Light"
      x-app-permission: "Analytics"
  /analytics/calls/v1/accounts/{accountId}/timeline/fetch:
    post:
      tags:
      - "Line Of Business Analytics"
      summary: "Calls Timeline Data"
      description: "Returns time-value data aggregations filtered by parameters specified"
      operationId: "analyticsCallsTimelineFetch"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Internal identifier of a RingCentral account or tilde (~) to\
          \ indicate the account logged-in within the current session"
        required: true
        schema:
          type: "string"
          default: "~"
      - name: "interval"
        in: "query"
        description: "Aggregation interval"
        required: true
        schema:
          $ref: "#/components/schemas/Interval"
      - name: "page"
        in: "query"
        description: "The current page number (positive numbers only)"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 1
      - name: "perPage"
        in: "query"
        description: "Number of records displayed on a page (positive numbers only,\
          \ max value of 20)"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 1
          maximum: 20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimelineRequest"
        required: true
      responses:
        "200":
          description: "Calls Timeline"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimelineResponse"
        "400":
          description: "Request is invalid (e.g. malformed request syntax, invalid\
            \ request parameters, etc.)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "401":
          description: "Client must authenticate itself to get the requested response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "403":
          description: "The client does not have access rights to the content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forbidden"
        "500":
          description: "The server has encountered a situation it does not know how\
            \ to handle"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
      x-api-group: "analytics/calls/timeline/fetch"
      x-throttling-group: "Light"
      x-app-permission: "Analytics"
components:
  securitySchemes:
    OAuth2:
      type: "oauth2"
      flows:
        authorizationCode:
          authorizationUrl: "https://platform.ringcentral.com/restapi/oauth/authorize"
          tokenUrl: "https://platform.ringcentral.com/restapi/oauth/token"
          scopes:
            scope: "scope description"
  schemas:
    VersionInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of API versions"
        versionString:
          type: "string"
          description: "Version of the RingCentral REST API"
        releaseDate:
          type: "string"
          description: "Release date of this version"
        uriString:
          type: "string"
          description: "URI part determining the current version"
    GetVersionsResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of the API version"
        apiVersions:
          type: "array"
          description: "Full API version information: uri, number, release date"
          items:
            $ref: "#/components/schemas/VersionInfo"
        serverVersion:
          type: "string"
          description: "Server version"
        serverRevision:
          type: "string"
          description: "Server revision"
      example:
        application/json:
          uri: "https://platform.ringcentral.com/restapi"
          apiVersions:
          - uri: "https://platform.ringcentral.com/restapi/v1.0"
            versionString: "1.0.34"
            releaseDate: "2018-02-09T00:00:00.000+00:00"
            uriString: "v1.0"
          serverVersion: "10.0.4.7854"
          serverRevision: "32f2a96b769c"
    TokenInfo:
      type: "object"
      required:
      - "access_token"
      - "expires_in"
      - "scope"
      - "token_type"
      properties:
        access_token:
          type: "string"
          description: "OAuth access token to pass to subsequent API requests"
          example: "U1BCMDFUMDRKV1MwMXxzLFSvXdw5PHMsVLEn_MrtcyxUsw"
        expires_in:
          type: "integer"
          format: "int32"
          description: "Issued access token TTL (time-to-live) in seconds"
          example: 7199
        refresh_token:
          type: "string"
          description: "OAuth refresh token (in case the one was issued)\n"
          example: "U1BCMDFUMDRKV1MwMXxzLFL4ec6A0XMsUv9wLriecyxS_w"
        refresh_token_expires_in:
          type: "integer"
          format: "int32"
          description: "Issued refresh token TTL (time-to-live) in seconds"
          example: 604799
        scope:
          type: "string"
          description: "List of permissions (space separated) granted to the application\
            \ with this access token\n"
          example: "AccountInfo CallLog ExtensionInfo Messages SMS"
        token_type:
          type: "string"
          description: "Type of token. The only supported value is `bearer`. This\
            \ value should be used when specifying access token in `Authorization`\
            \ header of subsequent API requests"
          example: "bearer"
        owner_id:
          type: "string"
          description: "Token owner (extension/user) identifier"
          example: "256440016"
        endpoint_id:
          type: "string"
          description: "Application instance identifier"
          example: "8zXq6oaLT7WvwWITlGiA1A"
        id_token:
          type: "string"
          description: "OIDC ID token (if OpenId Connect flow was activated during\
            \ authorization)"
    GetAccountInfoResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of an account"
        uri:
          type: "string"
          description: "Canonical URI of an account"
        bsid:
          type: "string"
          description: "Internal identifier of an account in the billing system"
        mainNumber:
          type: "string"
          description: "Main phone number of the current account"
        operator:
          $ref: "#/components/schemas/AccountOperatorInfo"
        partnerId:
          type: "string"
          description: "Additional account identifier, created by partner application\
            \ and applied on client side"
        serviceInfo:
          $ref: "#/components/schemas/ServiceInfo"
        setupWizardState:
          type: "string"
          description: "Specifies account configuration wizard state (web service\
            \ setup)"
          default: "NotStarted"
          enum:
          - "NotStarted"
          - "Incomplete"
          - "Completed"
        signupInfo:
          $ref: "#/components/schemas/SignupInfoResource"
        status:
          type: "string"
          description: "Status of the current account"
          enum:
          - "Initial"
          - "Confirmed"
          - "Unconfirmed"
          - "Disabled"
        statusInfo:
          $ref: "#/components/schemas/AccountStatusInfo"
        regionalSettings:
          $ref: "#/components/schemas/AccountRegionalSettings"
        federated:
          type: "boolean"
          description: "Specifies whether an account is included into any federation\
            \ of accounts or not"
        outboundCallPrefix:
          type: "integer"
          description: "If outbound call prefix is not specified, or set to null (0),\
            \ then the parameter is not returned; the supported value range is 2-9"
        cfid:
          type: "string"
          description: "Customer facing identifier. Returned for accounts with the\
            \ turned off PBX features. Equals to main company number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ (without '+' sign)format "
        limits:
          $ref: "#/components/schemas/AccountLimits"
    GreetingLanguageInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a greeting language"
        localeCode:
          type: "string"
          description: "Localization code of a greeting language"
        name:
          type: "string"
          description: "Official name of a greeting language"
      description: "Information on language used for telephony greetings"
    ServicePlanInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a service plan"
        name:
          type: "string"
          description: "Name of a service plan"
        edition:
          type: "string"
          description: "Edition of a service plan"
        freemiumProductType:
          type: "string"
          enum:
          - "Freyja"
          - "Phoenix"
      description: "Information on account service plan"
    ServiceInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a service info resource"
        billingPlan:
          $ref: "#/components/schemas/BillingPlanInfo"
        brand:
          $ref: "#/components/schemas/BrandInfo"
        servicePlan:
          $ref: "#/components/schemas/ServicePlanInfo"
        targetServicePlan:
          $ref: "#/components/schemas/TargetServicePlanInfo"
        contractedCountry:
          $ref: "#/components/schemas/ContractedCountryInfo"
      description: "Account service information, including brand, service plan and\
        \ billing plan"
    TargetServicePlanInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a target service plan"
        name:
          type: "string"
          description: "Name of a target service plan"
        edition:
          type: "string"
          description: "Edition of a service plan"
        freemiumProductType:
          type: "string"
          enum:
          - "Freyja"
          - "Phoenix"
      description: "Information on account target service plan"
    CurrencyInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a currency"
        code:
          type: "string"
          description: "Official code of a currency"
        name:
          type: "string"
          description: "Official name of a currency"
        symbol:
          type: "string"
          description: "Graphic symbol of a currency"
        minorSymbol:
          type: "string"
          description: "Minor graphic symbol of a currency"
      description: "Currency information"
    FormattingLocaleInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a formatting language"
        localeCode:
          type: "string"
          description: "Localization code of a formatting language"
        name:
          type: "string"
          description: "Official name of a formatting language"
      description: "Formatting language preferences for numbers, dates and currencies"
    AccountOperatorInfo:
      type: "object"
      description: "Operator's extension information. This extension will receive\
        \ all calls and messages intended for the operator."
      properties:
        uri:
          type: "string"
          description: "Link to an operator extension resource"
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of an operator extension"
        extensionNumber:
          type: "string"
          description: "Number of an operator extension"
    AccountStatusInfo:
      type: "object"
      properties:
        comment:
          type: "string"
          description: "A free-form user comment, describing the status change reason"
        reason:
          type: "string"
          description: "Type of suspension"
          enum:
          - "SuspendedVoluntarily"
          - "SuspendedInvoluntarily"
          - "UserResumed"
        till:
          type: "string"
          description: "Date until which the account will get deleted. The default\
            \ value is 30 days since current date"
      description: "Status information (reason, comment, lifetime). Returned for 'Disabled'\
        \ status only"
    TimezoneInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a timezone"
        uri:
          type: "string"
          description: "Canonical URI of a timezone"
        name:
          type: "string"
          description: "Short name of a timezone"
        description:
          type: "string"
          description: "Meaningful description of the timezone"
        bias:
          type: "string"
      description: "Extension timezone information"
    AccountLimits:
      type: "object"
      properties:
        freeSoftPhoneLinesPerExtension:
          type: "integer"
          description: "Max number of free softphone phone lines per user extension"
        meetingSize:
          type: "integer"
          description: "Max number of participants in RingCentral meeting hosted by\
            \ this account's user"
        cloudRecordingStorage:
          type: "integer"
          description: "Meetings recording cloud storage limitation in Gb"
        maxMonitoredExtensionsPerUser:
          type: "integer"
          description: "Max number of extensions which can be included in the list\
            \ of users monitored for Presence"
        maxExtensionNumberLength:
          type: "integer"
          description: "Max length of extension numbers of an account; the supported\
            \ value is up to 8 symbols, depends on account type"
        siteCodeLength:
          type: "integer"
          description: "Length of a site code"
        shortExtensionNumberLength:
          type: "integer"
          description: "Length of a short extension number"
      description: "Limits which are effective for the account"
    RegionalLanguageInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a language set as regional"
        localeCode:
          type: "string"
          description: "Localization code of a language set as regional"
        name:
          type: "string"
          description: "Official name of a language set as regional"
      description: "Information on a language set as regional"
    CountryInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a home country"
        uri:
          type: "string"
          description: "Canonical URI of a home country"
        name:
          type: "string"
          description: "Official name of a home country"
        isoCode:
          type: "string"
          description: "ISO code of a country"
        callingCode:
          type: "string"
          description: "Calling code of a country"
      description: "Country information"
    BrandInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a brand"
        name:
          type: "string"
          description: "Brand name, for example  RingCentral UK ,  ClearFax "
        homeCountry:
          $ref: "#/components/schemas/CountryInfo"
      description: "Information on account brand"
    BillingPlanInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a billing plan"
        name:
          type: "string"
          description: "Billing plan name"
        durationUnit:
          type: "string"
          description: "Duration period"
          enum:
          - "Day"
          - "Month"
          - "Year"
        duration:
          type: "integer"
          description: "Number of duration units"
        type:
          type: "string"
          description: "Billing plan type"
          enum:
          - "Initial"
          - "Regular"
          - "Suspended"
          - "Trial"
          - "TrialNoCC"
          - "Free"
        includedPhoneLines:
          type: "integer"
          description: "Included digital lines count"
      description: "Information on account billing plan"
    SignupInfoResource:
      type: "object"
      properties:
        tosAccepted:
          type: "boolean"
          default: false
        signupState:
          type: "array"
          items:
            type: "string"
            enum:
            - "AccountCreated"
            - "BillingEntered"
            - "CreditCardApproved"
            - "AccountConfirmed"
            - "PhoneVerificationRequired"
            - "PhoneVerificationPassed"
        verificationReason:
          type: "string"
          enum:
          - "CC_Failed"
          - "Phone_Suspicious"
          - "CC_Phone_Not_Match"
          - "AVS_Not_Available"
          - "MaxMind"
          - "CC_Blacklisted"
          - "Email_Blacklisted"
          - "Phone_Blacklisted"
          - "Cookie_Blacklisted"
          - "Device_Blacklisted"
          - "IP_Blacklisted"
          - "Agent_Instance_Blacklisted"
          - "Charge_Limit"
          - "Other_Country"
          - "Unknown"
        marketingAccepted:
          type: "boolean"
          description: "Updates 'Send Marketing Information' flag on web interface"
      description: "Account sign up data"
    ContractedCountryInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Identifier of a contracted country"
        uri:
          type: "string"
          description: "Canonical URI of a contracted country"
      description: "Information on the contracted country of account"
    AccountRegionalSettings:
      type: "object"
      properties:
        homeCountry:
          $ref: "#/components/schemas/CountryInfo"
        timezone:
          $ref: "#/components/schemas/TimezoneInfo"
        language:
          $ref: "#/components/schemas/RegionalLanguageInfo"
        greetingLanguage:
          $ref: "#/components/schemas/GreetingLanguageInfo"
        formattingLocale:
          $ref: "#/components/schemas/FormattingLocaleInfo"
        timeFormat:
          type: "string"
          description: "Time format setting. The default value is '12h' = ['12h',\
            \ '24h']"
          enum:
          - "12h"
          - "24h"
        currency:
          $ref: "#/components/schemas/CurrencyInfo"
      description: "Account level region data (web service Auto-Receptionist settings)"
    CompanyBusinessHoursUpdateRequest:
      type: "object"
      properties:
        schedule:
          $ref: "#/components/schemas/CompanyBusinessHoursScheduleInfo"
      example:
        schedule:
          weeklyRanges:
            tuesday:
            - from: "09:00"
              to: 1080
            friday:
            - from: "09:00"
              to: 1080
            thursday:
            - from: "09:00"
              to: 1080
            wednesday:
            - from: "09:00"
              to: 1080
            monday:
            - from: "09:00"
              to: 1080
    WeeklyScheduleInfo:
      type: "object"
      properties:
        monday:
          type: "array"
          description: "Time intervals for a particular day"
          items:
            $ref: "#/components/schemas/TimeInterval"
        tuesday:
          type: "array"
          description: "Time intervals for a particular day"
          items:
            $ref: "#/components/schemas/TimeInterval"
        wednesday:
          type: "array"
          description: "Time intervals for a particular day"
          items:
            $ref: "#/components/schemas/TimeInterval"
        thursday:
          type: "array"
          description: "Time intervals for a particular day"
          items:
            $ref: "#/components/schemas/TimeInterval"
        friday:
          type: "array"
          description: "Time intervals for a particular day"
          items:
            $ref: "#/components/schemas/TimeInterval"
        saturday:
          type: "array"
          description: "Time intervals for a particular day"
          items:
            $ref: "#/components/schemas/TimeInterval"
        sunday:
          type: "array"
          description: "Time intervals for a particular day"
          items:
            $ref: "#/components/schemas/TimeInterval"
      description: "Weekly schedule"
    CompanyBusinessHours:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a business-hours resource "
        schedule:
          $ref: "#/components/schemas/CompanyBusinessHoursScheduleInfo"
      example:
        uri: "https.../restapi/v1.0/account/401800045008/business-hours"
        schedule:
          weeklyRanges:
            wednesday:
            - from: "09:00"
              to: 1080
            friday:
            - from: "09:00"
              to: 1080
            tuesday:
            - from: "09:00"
              to: 1080
            monday:
            - from: "09:00"
              to: 1080
            thursday:
            - from: "09:00"
              to: 1080
    TimeInterval:
      type: "object"
      properties:
        from:
          type: "string"
          description: "Time in format hh:mm"
        to:
          type: "string"
          description: "Time in format hh:mm"
    CompanyBusinessHoursScheduleInfo:
      type: "object"
      properties:
        weeklyRanges:
          $ref: "#/components/schemas/WeeklyScheduleInfo"
      description: "Schedule when an answering rule is applied"
    EmergencyServiceAddressResource:
      type: "object"
      properties:
        street:
          type: "string"
        street2:
          type: "string"
        city:
          type: "string"
        zip:
          type: "string"
        customerName:
          type: "string"
        state:
          type: "string"
          description: "State/province name"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        stateIsoCode:
          type: "string"
          description: "ISO code of a state"
        stateName:
          type: "string"
          description: "Full name of a state"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
        countryIsoCode:
          type: "string"
          description: "ISO code of a country"
        country:
          type: "string"
          description: "Country name"
        countryName:
          type: "string"
          description: "Full name of a country"
        outOfCountry:
          type: "boolean"
          description: "Specifies if emergency address is out of country"
        syncStatus:
          type: "string"
          description: "Resulting status of emergency address synchronization. Returned\
            \ if `syncEmergencyAddress` parameter is set to 'True'"
          enum:
          - "Verified"
          - "Updated"
          - "Deleted"
          - "NotRequired"
          - "Unsupported"
          - "Failed"
        additionalCustomerName:
          type: "string"
          description: "Name of an additional contact person. Should be specified\
            \ for countries except the US, Canada, the UK and Australia."
        customerEmail:
          type: "string"
          description: "Email of a primary contact person (receiver). Should be specified\
            \ for countries except the US, Canada, the UK and Australia."
        additionalCustomerEmail:
          type: "string"
          description: "Email of an additional contact person. Should be specified\
            \ for countries except the US, Canada, the UK and Australia."
        customerPhone:
          type: "string"
          description: "Phone number of a primary contact person (receiver). Should\
            \ be specified for countries except the US, Canada, the UK and Australia"
        additionalCustomerPhone:
          type: "string"
          description: "Phone number of an additional contact person. Should be specified\
            \ for countries except the US, Canada, the UK & Australia."
        lineProvisioningStatus:
          type: "string"
          description: "Status of digital line provisioning"
          enum:
          - "Provisioning"
          - "Valid"
          - "Invalid"
        taxId:
          type: "string"
          description: "Internal identifier of a tax"
      description: "Address for emergency cases. The same emergency address is assigned\
        \ to all the numbers of one device"
    ShippingAddressInfo:
      type: "object"
      properties:
        customerName:
          type: "string"
          description: "Name of a primary contact person (receiver)"
        additionalCustomerName:
          type: "string"
          description: "Name of an additional contact person. Should be specified\
            \ for countries except the US, Canada, the UK and Australia."
        customerEmail:
          type: "string"
          description: "Email of a primary contact person (receiver). Should be specified\
            \ for countries except the US, Canada, the UK and Australia."
        additionalCustomerEmail:
          type: "string"
          description: "Email of an additional contact person. Should be specified\
            \ for countries except the US, Canada, the UK and Australia."
        customerPhone:
          type: "string"
          description: "Phone number of a primary contact person (receiver). Should\
            \ be specified for countries except the US, Canada, the UK and Australia"
        additionalCustomerPhone:
          type: "string"
          description: "Phone number of an additional contact person. Should be specified\
            \ for countries except the US, Canada, the UK & Australia."
        street:
          type: "string"
          description: "Street address, line 1 - street address, P.O. box, company\
            \ name, c/o"
        street2:
          type: "string"
          description: "Street address, line 2 - apartment, suite, unit, building,\
            \ floor, etc."
        city:
          type: "string"
          description: "City name"
        state:
          type: "string"
          description: "State/province name"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        stateIsoCode:
          type: "string"
          description: "ISO code of a state"
        stateName:
          type: "string"
          description: "Full name of a state"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
        countryIsoCode:
          type: "string"
          description: "ISO code of a country"
        country:
          type: "string"
          description: "Country name"
        countryName:
          type: "string"
          description: "Full name of a country"
        zip:
          type: "string"
          description: "Zip code"
        taxId:
          type: "string"
          description: "National taxpayer identification number. Should be specified\
            \ for Brazil (CNPJ/CPF number) and Argentina (CUIT number)."
      description: "Shipping address for the order. If it coincides with the Emergency\
        \ Service Address, then can be omitted. By default the same value as the emergencyServiceAddress.\
        \ Multiple addresses can be specified; in case the order contains several\
        \ devices, they can be delivered to different addresses"
    EmergencyAddress:
      type: "object"
      properties:
        required:
          type: "boolean"
          description: " 'True' if specifying of emergency address is required"
        localOnly:
          type: "boolean"
          description: " 'True' if only local emergency address can be specified"
    ShippingInfo:
      type: "object"
      properties:
        status:
          type: "string"
          description: "Shipping status of the order item. It is set to 'Initial'\
            \ when the order is submitted. Then it is changed to 'Accepted' when a\
            \ distributor starts processing the order. Finally the status is changed\
            \ to 'Shipped' which means that distributor shipped the device."
          enum:
          - "Initial"
          - "Accepted"
          - "Shipped"
          - "Won't ship"
        carrier:
          type: "string"
          description: "Shipping carrier name. Appears only if the device status is\
            \ 'Shipped'"
        trackingNumber:
          type: "string"
          description: "Carrier-specific tracking number. Appears only if the device\
            \ status is 'Shipped'"
        method:
          $ref: "#/components/schemas/MethodInfo"
        address:
          $ref: "#/components/schemas/ShippingAddressInfo"
      description: "Shipping information, according to which devices (in case of \
        \ HardPhone ) or e911 stickers (in case of  SoftPhone  and  OtherPhone ) will\
        \ be delivered to the customer"
    EmergencyServiceAddressResourceRequest:
      type: "object"
      properties:
        street:
          type: "string"
        street2:
          type: "string"
        city:
          type: "string"
        zip:
          type: "string"
        customerName:
          type: "string"
        state:
          type: "string"
          description: "State/province name"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        country:
          type: "string"
          description: "Country name"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
      description: "Address for emergency cases. The same emergency address is assigned\
        \ to all numbers of a single device. If the emergency address is also specified\
        \ in `emergency` resource, then this value is ignored"
    AccountDeviceUpdate:
      type: "object"
      properties:
        emergencyServiceAddress:
          $ref: "#/components/schemas/EmergencyServiceAddressResourceRequest"
        emergency:
          $ref: "#/components/schemas/DeviceEmergencyInfo"
        extension:
          $ref: "#/components/schemas/DeviceUpdateExtensionInfo"
        phoneLines:
          $ref: "#/components/schemas/DeviceUpdatePhoneLinesInfo"
        useAsCommonPhone:
          type: "boolean"
          description: "Supported only for devices assigned to Limited extensions.\
            \ If true, enables users to log in to this phone as a common phone."
        name:
          type: "string"
          description: "Device label, maximum number of symbols is 64"
    BillingStatementCharges:
      type: "object"
      properties:
        description:
          type: "string"
        amount:
          type: "number"
        feature:
          type: "string"
        freeServiceCredit:
          type: "number"
    DeviceUpdatePhoneLinesInfo:
      type: "object"
      properties:
        phoneLines:
          type: "array"
          description: "Information on phone lines added to a device"
          items:
            $ref: "#/components/schemas/UpdateDevicePhoneInfo"
      description: "Information on phone lines added to a device"
    AddonInfo:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        count:
          type: "integer"
    DeviceEmergencyAddress:
      type: "object"
      properties:
        customerName:
          type: "string"
          description: "Name of a customer"
        street:
          type: "string"
          description: "Street address, line 1 - street address, P.O. box, company\
            \ name, c/o"
        street2:
          type: "string"
          description: "Street address, line 2 - apartment, suite, unit, building,\
            \ floor, etc."
        city:
          type: "string"
          description: "City name"
        zip:
          type: "string"
          description: "Zip code"
        state:
          type: "string"
          description: "State/province name"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        stateIsoCode:
          type: "string"
          description: "ISO code of a state"
        stateName:
          type: "string"
          description: "Full name of a state"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
        countryIsoCode:
          type: "string"
          description: "ISO code of a country"
        country:
          type: "string"
          description: "Country name"
        countryName:
          type: "string"
          description: "Full name of a country"
    UpdateDevicePhoneInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a phone number"
    ExtensionInfoIntId:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of an extension"
          format: "int64"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        partnerId:
          type: "string"
          description: "For Partner Applications Internal identifier of an extension\
            \ created by partner. The RingCentral supports the mapping of accounts\
            \ and stores the corresponding account ID/extension ID for each partner\
            \ ID of a client application. In request URIs partner IDs are accepted\
            \ instead of regular RingCentral native IDs as path parameters using pid\
            \ = XXX clause. Though in response URIs contain the corresponding account\
            \ IDs and extension IDs. In all request and response bodies these values\
            \ are reflected via partnerId attributes of account and extension"
      description: "This attribute can be omitted for unassigned devices"
    PhoneNumberCountryInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a home country"
        uri:
          type: "string"
          description: "Canonical URI of a home country"
        name:
          type: "string"
          description: "Official name of a home country"
      description: "Brief information on a phone number country"
    PhoneLinesInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a phone line"
        lineType:
          type: "string"
          description: "Type of phone line"
          enum:
          - "Standalone"
          - "StandaloneFree"
          - "BlaPrimary"
          - "BlaSecondary"
        phoneInfo:
          $ref: "#/components/schemas/PhoneNumberInfoIntId"
        emergencyAddress:
          $ref: "#/components/schemas/EmergencyAddress"
    DeviceSiteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a site"
        name:
          type: "string"
          description: "Name of a site"
      description: "Site data"
    BillingStatementInfo:
      type: "object"
      properties:
        currency:
          type: "string"
          description: "Currency code complying with [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217)\
            \ standard"
        charges:
          type: "array"
          items:
            $ref: "#/components/schemas/BillingStatementCharges"
        fees:
          type: "array"
          items:
            $ref: "#/components/schemas/BillingStatementFees"
        totalCharged:
          type: "number"
        totalCharges:
          type: "number"
        totalFees:
          type: "number"
        subtotal:
          type: "number"
        totalFreeServiceCredit:
          type: "number"
      description: "Billing information. Returned for device update request if `prestatement`\
        \ query parameter is set to 'true'"
    BillingStatementFees:
      type: "object"
      properties:
        description:
          type: "string"
        amount:
          type: "number"
        freeServiceCredit:
          type: "number"
    MethodInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Method identifier. The default value is 1 (Ground)"
          enum:
          - "1"
          - "2"
          - "3"
        name:
          type: "string"
          description: "Method name, corresponding to the identifier"
          enum:
          - "Ground"
          - "2 Day"
          - "Overnight"
      description: "Shipping method information"
    DeviceEmergencyInfo:
      type: "object"
      properties:
        address:
          $ref: "#/components/schemas/DeviceEmergencyAddress"
        location:
          $ref: "#/components/schemas/DeviceEmergencyLocationInfo"
        outOfCountry:
          type: "boolean"
          description: "Specifies if emergency address is out of country"
        addressStatus:
          type: "string"
          description: "Emergency address status"
          enum:
          - "Valid"
          - "Invalid"
          - "Provisioning"
        visibility:
          type: "string"
          description: "Visibility of an emergency response location. If `Private`\
            \ is set, then location is visible only for the restricted number of users,\
            \ specified in `owners` array"
          enum:
          - "Private"
          - "Public"
        syncStatus:
          type: "string"
          description: "Resulting status of emergency address synchronization. Returned\
            \ if `syncEmergencyAddress` parameter is set to 'True'"
          enum:
          - "Verified"
          - "Updated"
          - "Deleted"
          - "NotRequired"
          - "Unsupported"
          - "Failed"
        addressEditableStatus:
          type: "string"
          description: "Ability to register new emergency address for a phone line\
            \ using devices sharing this line or only main device (line owner)"
          enum:
          - "MainDevice"
          - "AnyDevice"
      description: "Device emergency settings"
    DeviceProvisioningExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        partnerId:
          type: "string"
          description: "For Partner Applications Internal identifier of an extension\
            \ created by partner. The RingCentral supports the mapping of accounts\
            \ and stores the corresponding account ID/extension ID for each partner\
            \ ID of a client application. In request URIs partner IDs are accepted\
            \ instead of regular RingCentral native IDs as path parameters using pid\
            \ = XXX clause. Though in response URIs contain the corresponding account\
            \ IDs and extension IDs. In all request and response bodies these values\
            \ are reflected via partnerId attributes of account and extension"
      description: "Information on the extension, to which the phone number is assigned.\
        \ Returned only for the request of Account phone number list"
    ModelInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a HardPhone device model"
        name:
          type: "string"
          description: "Device name"
        addons:
          type: "array"
          description: "Addons description"
          items:
            $ref: "#/components/schemas/AddonInfo"
        deviceClass:
          type: "string"
        features:
          type: "array"
          description: "Device feature or multiple features supported"
          items:
            type: "string"
            enum:
            - "BLA"
            - "CommonPhone"
            - "Intercom"
            - "Paging"
            - "HELD"
        lineCount:
          type: "integer"
          description: "Max supported count of phone lines"
      description: "HardPhone model information"
    PhoneNumberInfoIntId:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of a phone number"
          format: "int64"
        country:
          $ref: "#/components/schemas/PhoneNumberCountryInfo"
        extension:
          $ref: "#/components/schemas/DeviceProvisioningExtensionInfo"
        label:
          type: "string"
          description: "Custom user name of a phone number, if any"
        location:
          type: "string"
          description: "Location (City, State). Filled for local US numbers"
        paymentType:
          type: "string"
          description: "Payment type. 'External' is returned for forwarded numbers\
            \ which are not terminated in the RingCentral phone system"
          enum:
          - "External"
          - "TollFree"
          - "Local"
        phoneNumber:
          type: "string"
          description: "Phone number"
        status:
          type: "string"
          description: "Status of a phone number. If the value is 'Normal', the phone\
            \ number is ready to be used. Otherwise it is an external number not yet\
            \ ported to RingCentral"
        type:
          type: "string"
          description: "Phone number type"
          enum:
          - "VoiceFax"
          - "FaxOnly"
          - "VoiceOnly"
        usageType:
          type: "string"
          description: "Usage type of the phone number"
          enum:
          - "MainCompanyNumber"
          - "AdditionalCompanyNumber"
          - "CompanyNumber"
          - "DirectNumber"
          - "CompanyFaxNumber"
          - "ForwardedNumber"
          - "ForwardedCompanyNumber"
          - "ContactCenterNumber"
      description: "Phone number information"
    GetDeviceInfoResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a device"
        uri:
          type: "string"
          description: "Canonical URI of a device"
        sku:
          type: "string"
          description: "Device identification number (stock keeping unit) in the format\
            \ TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for\
            \ all other devices including softphone); ID - device model ID; AT -addon\
            \ type ID; AC - addon count (if any). For example 'HP-56-2-2'"
        type:
          type: "string"
          description: "Device type"
          default: "HardPhone"
          enum:
          - "BLA"
          - "SoftPhone"
          - "OtherPhone"
          - "HardPhone"
          - "WebPhone"
          - "Paging"
          - "Room"
          - "WebRTC"
        name:
          type: "string"
          description: "Device name. Mandatory if ordering  SoftPhone  or  OtherPhone.\
            \ Optional for  HardPhone. If not specified for HardPhone, then device\
            \ model name is used as device name"
        serial:
          type: "string"
          description: "Serial number for HardPhone (is returned only when the phone\
            \ is shipped and provisioned); endpoint_id for softphone and mobile applications"
        status:
          type: "string"
          description: "Device status"
          enum:
          - "Offline"
          - "Online"
        computerName:
          type: "string"
          description: "PC name for softphone"
        model:
          $ref: "#/components/schemas/ModelInfo"
        extension:
          $ref: "#/components/schemas/ExtensionInfoIntId"
        emergency:
          $ref: "#/components/schemas/DeviceEmergencyInfo"
        emergencyServiceAddress:
          $ref: "#/components/schemas/EmergencyServiceAddressResource"
        phoneLines:
          type: "array"
          description: "Phone lines information"
          items:
            $ref: "#/components/schemas/PhoneLinesInfo"
        shipping:
          $ref: "#/components/schemas/ShippingInfo"
        boxBillingId:
          type: "integer"
          format: "int64"
          description: "Box billing identifier of a device. Applicable only for HardPhones.\
            \ It is an alternative way to identify the device to be ordered. Either\
            \ model  structure, or  boxBillingId  must be specified for HardPhone"
        useAsCommonPhone:
          type: "boolean"
          description: "Supported only for devices assigned to Limited extensions.\
            \ If true, enables users to log in to this phone as a common phone."
        inCompanyNet:
          type: "boolean"
          description: "Network location status. 'True' if the device is located in\
            \ the configured corporate network (On-Net); 'False' for Off-Net location.\
            \ Parameter is not returned if `EmergencyAddressAutoUpdate` feature is\
            \ not enabled for the account/user, or if device network location is not\
            \ determined"
        site:
          $ref: "#/components/schemas/DeviceSiteInfo"
        lastLocationReportTime:
          type: "string"
          description: "Datetime of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z"
        linePooling:
          type: "string"
          description: "Pooling type of a deviceHost - device with standalone paid\
            \ phone line which can be linked to Glip/Softphone instanceGuest - device\
            \ with a linked phone lineNone - device without a phone line or with specific\
            \ line (free, BLA, etc.) = ['Host', 'Guest', 'None']"
          enum:
          - "Host"
          - "Guest"
          - "None"
        billingStatement:
          $ref: "#/components/schemas/BillingStatementInfo"
    DeviceUpdateExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
      description: "Information on extension that the device is assigned to"
    DeviceEmergencyLocationInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the emergency response location"
        name:
          type: "string"
          description: "Location name"
      description: "Company emergency response location details"
    OutboundProxyInfo:
      type: "object"
      properties:
        region:
          type: "string"
          description: "Geographical region"
          example: "APAC"
        proxy:
          type: "string"
          description: "SIP outbound proxy"
        proxyTLS:
          type: "string"
          description: "SIP details for TLS (Transport Layer Security)"
    SipInfoResource:
      type: "object"
      properties:
        domain:
          type: "string"
          description: "SIP domain"
        outboundProxies:
          type: "array"
          description: "List of outbound proxies"
          items:
            $ref: "#/components/schemas/OutboundProxyInfo"
        userName:
          type: "string"
          description: "User credentials"
        password:
          type: "string"
          description: "User password"
        authorizationId:
          type: "string"
          description: "Internal identifier for SIP authorization"
    CustomFieldCreateRequest:
      type: "object"
      properties:
        category:
          type: "string"
          description: "Object category to attach custom fields"
          enum:
          - "User"
        displayName:
          type: "string"
          description: "Custom field display name"
    CustomFieldResource:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Custom field identifier"
        category:
          type: "string"
          description: "Object category to attach custom fields"
          enum:
          - "User"
        displayName:
          type: "string"
          description: "Custom field display name"
    CustomFieldsResource:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/CustomFieldResource"
    CustomFieldUpdateRequest:
      type: "object"
      properties:
        displayName:
          type: "string"
          description: "Custom field display name"
    AutomaticRecordingResource:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Flag for controlling Automatic Call Recording settings"
        outboundCallTones:
          type: "boolean"
          description: "Flag for controlling 'Play Call Recording Announcement for\
            \ Outbound Calls' settings"
        outboundCallAnnouncement:
          type: "boolean"
          description: "Flag for controlling 'Play periodic tones for outbound calls'\
            \ settings"
        allowMute:
          type: "boolean"
          description: "Flag for controlling 'Allow mute in auto call recording' settings"
        extensionCount:
          type: "integer"
          description: "Total amount of extension that are used in call recordings"
        retentionPeriod:
          type: "integer"
          description: "Retention period of a call recording, the default value is\
            \ 90 days"
        maxNumberLimit:
          type: "integer"
          description: "Max number of automatic call recordings per account, the default\
            \ value is 100 000"
    GreetingResource:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "StartRecording"
          - "StopRecording"
          - "AutomaticRecording"
        mode:
          type: "string"
          description: "'Default' value specifies that all greetings of that type\
            \ (in all languages) are default, if at least one greeting (in any language)\
            \ of the specified type is custom, then 'Custom' value is returned."
          enum:
          - "Default"
          - "Custom"
    CallRecordingSettingsResource:
      type: "object"
      properties:
        onDemand:
          $ref: "#/components/schemas/OnDemandResource"
        automatic:
          $ref: "#/components/schemas/AutomaticRecordingResource"
        greetings:
          type: "array"
          description: "Collection of Greeting Info"
          items:
            $ref: "#/components/schemas/GreetingResource"
    OnDemandResource:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Flag for controlling OnDemand Call Recording settings"
        retentionPeriod:
          type: "integer"
          description: "Retention period of a call recording, the default value is\
            \ 90 days"
    CallRecordingCustomGreeting:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "StartRecording"
          - "StopRecording"
          - "AutomaticRecording"
        custom:
          $ref: "#/components/schemas/CallRecordingCustomGreetingData"
        language:
          $ref: "#/components/schemas/CallRecordingCustomGreetingLanguage"
    CallRecordingCustomGreetingData:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a custom company greeting"
        id:
          type: "string"
          description: "Internal identifier of a custom company greeting"
      description: "Custom greeting data"
    CallRecordingCustomGreetings:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/CallRecordingCustomGreeting"
      description: "Returns data on call recording custom greetings."
    CallRecordingCustomGreetingLanguage:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a language"
        id:
          type: "string"
          description: "Internal identifier of a language"
        name:
          type: "string"
          description: "Language name"
        localeCode:
          type: "string"
          description: "Language locale code"
      description: "Custom greeting language"
    CallRecordingExtensionResource:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
        extensionNumber:
          type: "string"
        type:
          type: "string"
        callDirection:
          type: "string"
          description: "Direction of call"
          enum:
          - "Outbound"
          - "Inbound"
          - "All"
    BulkAccountCallRecordingsResource:
      type: "object"
      properties:
        addedExtensions:
          type: "array"
          items:
            $ref: "#/components/schemas/CallRecordingExtensionResource"
        updatedExtensions:
          type: "array"
          items:
            $ref: "#/components/schemas/CallRecordingExtensionResource"
        removedExtensions:
          type: "array"
          items:
            $ref: "#/components/schemas/CallRecordingExtensionResource"
    CallRecordingExtensions:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to call recording extension list resource"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/CallRecordingExtensionInfo"
        navigation:
          $ref: "#/components/schemas/CallHandlingNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallHandlingPagingInfo"
    CallHandlingPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
      description: "Information on paging"
    CallHandlingNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/CallHandlingNavigationInfoUri"
        nextPage:
          $ref: "#/components/schemas/CallHandlingNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/CallHandlingNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/CallHandlingNavigationInfoUri"
      description: "Information on navigation"
    CallRecordingExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Link to an extension resource"
        extensionNumber:
          type: "string"
          description: "Number of an extension"
        name:
          type: "string"
          description: "Name of an extension"
    CallHandlingNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    MakeCallOutRequest:
      required:
      - "from"
      - "to"
      type: "object"
      properties:
        from:
          $ref: "#/components/schemas/MakeCallOutCallerInfoRequestFrom"
        to:
          $ref: "#/components/schemas/MakeCallOutCallerInfoRequestTo"
    CallParty:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a party"
        status:
          $ref: "#/components/schemas/CallStatusInfo"
        muted:
          type: "boolean"
          description: "Specifies if a call participant is muted or not. **Note:**\
            \ If a call is also controlled via Hard phone or RingCentral App (not\
            \ only through the API by calling call control methods) then it cannot\
            \ be fully muted/unmuted via API only, in this case the action should\
            \ be duplicated via Hard phone/RC App interfaces"
        standAlone:
          type: "boolean"
          description: "If 'True' then the party is not connected to a session voice\
            \ conference, 'False' means the party is connected to other parties in\
            \ a session"
        park:
          $ref: "#/components/schemas/ParkInfo"
        from:
          $ref: "#/components/schemas/PartyInfo"
        to:
          $ref: "#/components/schemas/PartyInfo"
        owner:
          $ref: "#/components/schemas/OwnerInfo"
        direction:
          type: "string"
          description: "Direction of a call"
          enum:
          - "Inbound"
          - "Outbound"
        conferenceRole:
          type: "string"
          description: "A party's role in the conference scenarios. For calls of 'Conference'\
            \ type only"
          enum:
          - "Host"
          - "Participant"
        ringOutRole:
          type: "string"
          description: "A party's role in 'Ring Me'/'RingOut' scenarios. For calls\
            \ of 'Ringout' type only"
          enum:
          - "Initiator"
          - "Target"
        ringMeRole:
          type: "string"
          description: "A party's role in 'Ring Me'/'RingOut' scenarios. For calls\
            \ of 'Ringme' type only"
          enum:
          - "Initiator"
          - "Target"
        recordings:
          type: "array"
          description: "Active recordings list"
          items:
            $ref: "#/components/schemas/RecordingInfo"
      description: "Information on a party of a call session"
    OwnerInfo:
      type: "object"
      properties:
        accountId:
          type: "string"
          description: "Internal identifier of an account that monitors a call"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension that monitors a call"
      description: "Deprecated. Information on call owner"
    RecordingInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a recording resource"
        active:
          type: "boolean"
          description: "True if the recording is active. False if the recording is\
            \ paused."
    MakeCallOutCallerInfoRequestFrom:
      type: "object"
      properties:
        deviceId:
          type: "string"
          description: "Internal identifier of a device"
          example: "59474004"
      description: "Instance id of the caller. It corresponds to the 1st leg of the\
        \ CallOut call."
    PartyInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number of a party"
        name:
          type: "string"
          description: "Displayed name of a party"
        deviceId:
          type: "string"
          description: "Internal identifier of a device"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
      description: "Information on a calling/called party"
    CallSessionObject:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a call session"
        origin:
          $ref: "#/components/schemas/OriginInfo"
        voiceCallToken:
          type: "string"
          description: "For calls of 'Conference' type only"
        parties:
          type: "array"
          items:
            $ref: "#/components/schemas/CallParty"
        creationTime:
          type: "string"
          description: "Date and time of the latest session update represented in\
            \ Unix time format"
      description: "Call session information"
    CallStatusInfo:
      type: "object"
      properties:
        code:
          type: "string"
          description: "Status code of a call"
          enum:
          - "Setup"
          - "Proceeding"
          - "Answered"
          - "Disconnected"
          - "Gone"
          - "Parked"
          - "Hold"
          - "VoiceMail"
          - "FaxReceive"
          - "VoiceMailScreening"
        peerId:
          $ref: "#/components/schemas/PeerInfo"
        reason:
          type: "string"
          description: "Reason for call termination. For 'Disconnected' code only"
          enum:
          - "Pickup"
          - "Supervising"
          - "TakeOver"
          - "Timeout"
          - "BlindTransfer"
          - "RccTransfer"
          - "AttendedTransfer"
          - "CallerInputRedirect"
          - "CallFlip"
          - "ParkLocation"
          - "DtmfTransfer"
          - "AgentAnswered"
          - "AgentDropped"
          - "Rejected"
          - "Cancelled"
          - "InternalError"
          - "NoAnswer"
          - "TargetBusy"
          - "InvalidNumber"
          - "InternationalDisabled"
          - "DestinationBlocked"
          - "NotEnoughFunds"
          - "NoSuchUser"
          - "CallPark"
          - "CallRedirected"
          - "CallReplied"
          - "CallSwitch"
          - "CallFinished"
          - "CallDropped"
        description:
          type: "string"
          description: "Optional message"
      description: "Status data of a call session"
    PeerInfo:
      type: "object"
      properties:
        sessionId:
          type: "string"
        telephonySessionId:
          type: "string"
        partyId:
          type: "string"
      description: "Peer session/party details. Valid in 'Gone' state of a call"
    OriginInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Session origin type"
          enum:
          - "Call"
          - "RingOut"
          - "RingMe"
          - "Conference"
          - "GreetingsRecording"
          - "VerificationCall"
          - "Zoom"
          - "CallOut"
      description: "Session origin details"
    MakeCallOutCallerInfoRequestTo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number in E.164 format"
          example: 16502223366
        extensionNumber:
          type: "string"
          description: "Extension number"
          example: "103"
      description: "Phone number of the called party. This number corresponds to the\
        \ 2nd leg of a CallOut call"
    ParkInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Call park identifier"
      description: "Call park information"
    CallSession:
      type: "object"
      properties:
        session:
          $ref: "#/components/schemas/CallSessionObject"
    AddPartyRequest:
      required:
      - "partyId"
      - "telephonySessionId"
      type: "object"
      properties:
        telephonySessionId:
          type: "string"
          description: "Internal identifier of a call session"
        partyId:
          type: "string"
          description: "Internal identifier of a party that should be added to the\
            \ call session"
    PartyUpdateRequest:
      type: "object"
      properties:
        party:
          $ref: "#/components/schemas/PartyUpdateInfo"
    PartyUpdateInfo:
      type: "object"
      properties:
        muted:
          type: "boolean"
          description: "Specifies if a call participant is muted or not. **Note:**\
            \ If a call is also controlled via Hard phone or RingCentral App (not\
            \ only through the API by calling call control methods) then it cannot\
            \ be fully muted/unmuted via API only, in this case the action should\
            \ be duplicated via Hard phone/RC App interfaces"
        standAlone:
          type: "boolean"
          description: "If 'True' then the party is not connected to a session voice\
            \ conference, 'False' means the party is connected to other parties in\
            \ a session"
      description: "Party update data"
    CallPartyFlip:
      type: "object"
      properties:
        callFlipId:
          type: "string"
          description: "Call flip id"
    ReplyWithPattern:
      type: "object"
      properties:
        pattern:
          type: "string"
          description: "Predefined reply pattern name."
          example: "OnMyWay"
          enum:
          - "WillCallYouBack"
          - "CallMeBack"
          - "OnMyWay"
          - "OnTheOtherLine"
          - "WillCallYouBackLater"
          - "CallMeBackLater"
          - "InAMeeting"
          - "OnTheOtherLineNoCall"
        time:
          type: "integer"
          description: "Number of time units. Applicable only to WillCallYouBack,\
            \ CallMeBack patterns."
          example: 5
        timeUnit:
          type: "string"
          description: "Time unit name."
          example: "Minute"
          enum:
          - "Minute"
          - "Hour"
          - "Day"
    ReplyParty:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a party"
        status:
          $ref: "#/components/schemas/CallStatusInfo"
        muted:
          type: "boolean"
          description: "Specifies if a call participant is muted or not. **Note:**\
            \ If a call is also controlled via Hard phone or RingCentral App (not\
            \ only through the API by calling call control methods) then it cannot\
            \ be fully muted/unmuted via API only, in this case the action should\
            \ be duplicated via Hard phone/RC App interfaces"
        standAlone:
          type: "boolean"
          description: "If 'True' then the party is not connected to a session voice\
            \ conference, 'False' means the party is connected to other parties in\
            \ a session"
        park:
          $ref: "#/components/schemas/ParkInfo"
        from:
          $ref: "#/components/schemas/PartyInfo"
        to:
          $ref: "#/components/schemas/PartyInfo"
        owner:
          $ref: "#/components/schemas/OwnerInfo"
        direction:
          type: "string"
          description: "Direction of a call"
          enum:
          - "Inbound"
          - "Outbound"
    CallPartyReply:
      type: "object"
      properties:
        replyWithText:
          type: "string"
          description: "Text to reply"
        replyWithPattern:
          $ref: "#/components/schemas/ReplyWithPattern"
    BridgeTargetRequest:
      required:
      - "partyId"
      - "telephonySessionId"
      type: "object"
      properties:
        telephonySessionId:
          type: "string"
          description: "Internal identifier of a call session to be connected to (bridged)"
        partyId:
          type: "string"
          description: "Internal identifier of a call party to be connected to (bridged)"
    IgnoreRequestBody:
      required:
      - "deviceId"
      type: "object"
      properties:
        deviceId:
          type: "string"
          description: "Internal device identifier"
          example: "400020454008"
    PartySuperviseResponse:
      type: "object"
      properties:
        from:
          $ref: "#/components/schemas/PartyInfo"
        to:
          $ref: "#/components/schemas/PartyInfo"
        direction:
          type: "string"
          description: "Direction of a call"
          enum:
          - "Outbound"
          - "Inbound"
        id:
          type: "string"
          description: "Internal identifier of a party that monitors a call"
        accountId:
          type: "string"
          description: "Internal identifier of an account that monitors a call"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension that monitors a call"
        muted:
          type: "boolean"
          description: "Specifies if a call party is muted"
        owner:
          $ref: "#/components/schemas/OwnerInfo"
        standAlone:
          type: "boolean"
          description: "Specifies if a device is stand-alone"
        status:
          $ref: "#/components/schemas/CallStatusInfo"
    PartySuperviseRequest:
      required:
      - "agentExtensionId"
      - "mode"
      - "supervisorDeviceId"
      type: "object"
      properties:
        mode:
          type: "string"
          description: "Supervising mode"
          example: "Listen"
          enum:
          - "Listen"
        supervisorDeviceId:
          type: "string"
          description: "Internal identifier of a supervisor's device"
          example: "191888004"
        agentExtensionId:
          type: "string"
          description: "Mailbox ID of a user that will be monitored"
          example: "400378008008"
        autoAnswer:
          type: "boolean"
          description: "Specifies if auto-answer SIP header should be sent. If auto-answer\
            \ is set to 'True', the call is automatically answered by the supervising\
            \ party, if set to 'False' - then the supervising party has to accept\
            \ or decline the monitored call"
          default: true
        mediaSDP:
          type: "string"
          description: "Specifies session description protocol (SDP) setting. The\
            \ possible values are 'sendOnly' (only sending) meaning one-way audio\
            \ streaming; and 'sendRecv' (sending/receiving) meaning two-way audio\
            \ streaming"
          enum:
          - "sendOnly"
          - "sendRecv"
    CallRecordingUpdate:
      type: "object"
      properties:
        active:
          type: "boolean"
          description: "Recording status"
    CallRecording:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a call recording"
        active:
          type: "boolean"
          description: "Call recording status"
    AnswerTarget:
      type: "object"
      properties:
        deviceId:
          type: "string"
          description: "Device identifier that is used to answer the incoming call."
          example: "400018633008"
    TransferTarget:
      type: "object"
      description: "Identifier of a call party the call will be transfered to. Only\
        \ **one of** these parameters: `phoneNumber`, `voicemail`, `extensionNumber`\
        \ or `parkOrbit` must be specified, otherwise an error is returned."
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number"
        voicemail:
          type: "string"
          description: "Voicemail owner extension identifier"
        parkOrbit:
          type: "string"
          description: "Park orbit identifier"
        extensionNumber:
          type: "string"
          description: "Number of extension"
    PickupTarget:
      required:
      - "deviceId"
      type: "object"
      properties:
        deviceId:
          type: "string"
          description: "Device identifier that is used to pick up the parked call."
          example: "400018633008"
    ForwardTarget:
      type: "object"
      description: "Identifier of a call party the call will be forwarded to. Only\
        \ **one of** these parameters: `phoneNumber`, `voicemail` or `extensionNumber`\
        \ must be specified, otherwise an error is returned."
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number"
        voicemail:
          type: "string"
          description: "Voicemail owner extension identifier"
        extensionNumber:
          type: "string"
          description: "Number of an extension"
    SuperviseCallSessionRequest:
      required:
      - "mode"
      - "supervisorDeviceId"
      type: "object"
      properties:
        mode:
          type: "string"
          description: "Supervising mode"
          example: "Listen"
          enum:
          - "Listen"
        supervisorDeviceId:
          type: "string"
          description: "Internal identifier of a supervisor's device which will be\
            \ used for call session monitoring"
          example: "191888004"
        agentExtensionId:
          type: "string"
          description: "Extension identifier of the user that will be monitored"
          example: "400378008008"
        autoAnswer:
          type: "boolean"
          description: "Specifies if auto-answer SIP header should be sent. If auto-answer\
            \ is set to 'True', the call is automatically answered by the supervising\
            \ party, if set to 'False' - then the supervising party has to accept\
            \ or decline the monitored call"
          default: true
        mediaSDP:
          type: "string"
          description: "Specifies session description protocol setting"
          enum:
          - "sendOnly"
          - "sendRecv"
    SupervisePartyTo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number of a party"
        name:
          type: "string"
          description: "Displayed name of a party"
        deviceId:
          type: "string"
          description: "Internal identifier of a device"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
      description: "Information about a call party that is monitored"
    SupervisePartyFrom:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number of a party"
        name:
          type: "string"
          description: "Displayed name of a party"
        deviceId:
          type: "string"
          description: "Internal identifier of a device"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
      description: "Information about a call party that monitors a call"
    SuperviseCallSession:
      type: "object"
      properties:
        from:
          $ref: "#/components/schemas/SupervisePartyFrom"
        to:
          $ref: "#/components/schemas/SupervisePartyTo"
        direction:
          type: "string"
          description: "Direction of a call"
          enum:
          - "Outbound"
          - "Inbound"
        id:
          type: "string"
          description: "Internal identifier of a party that monitors a call"
        accountId:
          type: "string"
          description: "Internal identifier of an account that monitors a call"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension that monitors a call"
        muted:
          type: "boolean"
          description: "Specifies if a call participant is muted or not. **Note:**\
            \ If a call is also controlled via Hard phone or RingCentral App (not\
            \ only through the API by calling call control methods) then it cannot\
            \ be fully muted/unmuted via API only, in this case the action should\
            \ be duplicated via Hard phone/RC App interfaces"
        owner:
          $ref: "#/components/schemas/OwnerInfo"
        standAlone:
          type: "boolean"
          description: "If 'True' then the party is not connected to a session voice\
            \ conference, 'False' means the party is connected to other parties in\
            \ a session"
        status:
          $ref: "#/components/schemas/CallStatusInfo"
    PackageInfo:
      type: "object"
      properties:
        version:
          type: "string"
          description: "Billing package version"
        id:
          type: "string"
          description: "Billing package identifier"
    ServiceFeatureInfo:
      type: "object"
      properties:
        featureName:
          type: "string"
          description: "Feature name"
          enum:
          - "AccountFederation"
          - "Archiver"
          - "AutomaticCallRecordingMute"
          - "AutomaticInboundCallRecording"
          - "AutomaticOutboundCallRecording"
          - "BlockedMessageForwarding"
          - "Calendar"
          - "CallerIdControl"
          - "CallForwarding"
          - "CallPark"
          - "CallParkLocations"
          - "CallSupervision"
          - "CallSwitch"
          - "CallQualitySurvey"
          - "Conferencing"
          - "ConferencingNumber"
          - "ConfigureDelegates"
          - "DeveloperPortal"
          - "DND"
          - "DynamicConference"
          - "EmergencyAddressAutoUpdate"
          - "EmergencyCalling"
          - "EncryptionAtRest"
          - "ExternalDirectoryIntegration"
          - "Fax"
          - "FaxReceiving"
          - "FreeSoftPhoneLines"
          - "HDVoice"
          - "HipaaCompliance"
          - "Intercom"
          - "InternationalCalling"
          - "InternationalSMS"
          - "LinkedSoftphoneLines"
          - "MMS"
          - "MobileVoipEmergencyCalling"
          - "OnDemandCallRecording"
          - "Pager"
          - "PagerReceiving"
          - "Paging"
          - "PasswordAuth"
          - "PromoMessage"
          - "Reports"
          - "Presence"
          - "RCTeams"
          - "RingOut"
          - "SalesForce"
          - "SharedLines"
          - "SingleExtensionUI"
          - "SiteCodes"
          - "SMS"
          - "SMSReceiving"
          - "SoftPhoneUpdate"
          - "TelephonySessions"
          - "UserManagement"
          - "VideoConferencing"
          - "VoipCalling"
          - "VoipCallingOnMobile"
          - "Voicemail"
          - "VoicemailToText"
          - "WebPhone"
        enabled:
          type: "boolean"
          description: "Feature status, shows feature availability for the extension"
    GetServiceInfoResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of the account Service Info resource"
        servicePlanName:
          type: "string"
          description: "Account Service Plan name"
        brand:
          $ref: "#/components/schemas/BrandInfo"
        contractedCountry:
          $ref: "#/components/schemas/ContractedCountryInfo"
        servicePlan:
          $ref: "#/components/schemas/ServicePlanInfo"
        targetServicePlan:
          $ref: "#/components/schemas/TargetServicePlanInfo"
        billingPlan:
          $ref: "#/components/schemas/BillingPlanInfo"
        serviceFeatures:
          type: "array"
          description: "Service features information, see Service Feature List"
          items:
            $ref: "#/components/schemas/ServiceFeatureInfo"
        limits:
          $ref: "#/components/schemas/AccountLimits"
        package:
          $ref: "#/components/schemas/PackageInfo"
    CallLogDelegateInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a Secretary extension"
        name:
          type: "string"
          description: "Custom name of a Secretary extension"
      description: "Information on a delegate extension that actually implemented\
        \ a call action. For Secretary call log the field is returned if the current\
        \ extension implemented a call. For Boss call log the field contains information\
        \ on a Secretary extension which actually implemented a call on behalf of\
        \ the current extension"
    CompanyCallLogRecord:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a cal log record"
        uri:
          type: "string"
          description: "Canonical URI of a call log record"
        sessionId:
          type: "string"
          description: "Internal identifier of a call session"
        extension:
          $ref: "#/components/schemas/ExtensionInfoCallLog"
        telephonySessionId:
          type: "string"
          description: "Telephony identifier of a call session"
        transport:
          type: "string"
          description: "Call transport"
          enum:
          - "PSTN"
          - "VoIP"
        from:
          $ref: "#/components/schemas/CallLogCallerInfo"
        to:
          $ref: "#/components/schemas/CallLogCallerInfo"
        type:
          type: "string"
          description: "Call type"
          enum:
          - "Voice"
          - "Fax"
        direction:
          type: "string"
          description: "Call direction"
          enum:
          - "Inbound"
          - "Outbound"
        message:
          $ref: "#/components/schemas/CallLogRecordMessage"
        delegate:
          $ref: "#/components/schemas/CallLogDelegateInfo"
        deleted:
          type: "boolean"
          description: "Indicates whether the record is deleted. Returned for deleted\
            \ records, for ISync requests"
        action:
          type: "string"
          description: "Action description of the call operation"
          enum:
          - "Unknown"
          - "Phone Login"
          - "Calling Card"
          - "VoIP Call"
          - "Phone Call"
          - "Paging"
          - "Hunting"
          - "Call Park"
          - "Monitoring"
          - "Text Relay"
          - "External Application"
          - "Park Location"
          - "CallOut-CallMe"
          - "Conference Call"
          - "Move"
          - "RC Meetings"
          - "Accept Call"
          - "FindMe"
          - "FollowMe"
          - "RingMe"
          - "Transfer"
          - "Call Return"
          - "Ring Directly"
          - "RingOut Web"
          - "RingOut PC"
          - "RingOut Mobile"
          - "Emergency"
          - "E911 Update"
          - "Support"
          - "Incoming Fax"
          - "Outgoing Fax"
        result:
          type: "string"
          description: "Status description of the call operation"
          enum:
          - "Unknown"
          - "Accepted"
          - "Call connected"
          - "In Progress"
          - "Voicemail"
          - "Reply"
          - "Missed"
          - "Busy"
          - "Rejected"
          - "No Answer"
          - "Hang Up"
          - "Blocked"
          - "Suspended account"
          - "Call Failed"
          - "Call Failure"
          - "Internal Error"
          - "IP Phone Offline"
          - "No Calling Credit"
          - "Restricted Number"
          - "Wrong Number"
          - "Answered Not Accepted"
          - "Stopped"
          - "International Disabled"
          - "International Restricted"
          - "Abandoned"
          - "Declined"
          - "Received"
          - "Fax on Demand"
          - "Partial Receive"
          - "Receive Error"
          - "Fax Receipt Error"
          - "Sent"
          - "Fax Partially Sent"
          - "Send Error"
          - "Fax Not Sent"
          - "Fax Poor Line"
        reason:
          type: "string"
          enum:
          - "Accepted"
          - "Connected"
          - "line Busy"
          - "Not Answered"
          - "No Answer"
          - "Hang Up"
          - "Stopped"
          - "Internal Error"
          - "No Credit"
          - "Restricted Number"
          - "Wrong Number"
          - "International Disabled"
          - "International Restricted"
          - "Bad Number"
          - "Info 411 Restricted"
          - "Customer 611 Restricted"
          - "No Digital Line"
          - "Failed Try Again"
          - "Max Call Limit"
          - "Too Many Calls"
          - "Calls Not Accepted"
          - "Number Not Allowed"
          - "Number Blocked"
          - "Number Disabled"
          - "Resource Error"
          - "Call Loop"
          - "Fax Not Received"
          - "Fax Partially Sent"
          - "Fax Not Sent"
          - "Fax Poor Line"
          - "Fax Prepare Error"
          - "Fax Save Error"
          - "Fax Send Error"
          - "DescNoE911Address"
        reasonDescription:
          type: "string"
        startTime:
          type: "string"
          description: "The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
            \ format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        duration:
          type: "integer"
          description: "Call duration in seconds"
        recording:
          $ref: "#/components/schemas/CallLogRecordingInfo"
        shortRecording:
          type: "boolean"
          description: "Indicates that the recording is too short and therefore wouldn't\
            \ be returned. The flag is not returned if the value is false"
        legs:
          type: "array"
          description: "For 'Detailed' view only. Leg description"
          items:
            $ref: "#/components/schemas/CallLogRecordLegInfo"
        billing:
          $ref: "#/components/schemas/BillingInfo"
        lastModifiedTime:
          type: "string"
          description: "For 'Detailed' view only. The datetime when the call log record\
            \ was modified in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format\
            \ including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        internalType:
          type: "string"
          description: "Internal type of a call"
          enum:
          - "Local"
          - "LongDistance"
          - "International"
          - "Sip"
          - "RingMe"
          - "RingOut"
          - "Usual"
          - "TollFreeNumber"
          - "VerificationNumber"
          - "Vma"
          - "LocalNumber"
          - "ImsOutgoing"
          - "ImsIncoming"
    CallLogRecordMessage:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a message"
        type:
          type: "string"
          description: "Type of a message"
        uri:
          type: "string"
          description: "Link to a message resource"
      description: "Linked message (Fax/Voicemail)"
    CallLogRecordLegInfo:
      type: "object"
      properties:
        action:
          type: "string"
          description: "Action description of the call operation"
          enum:
          - "Unknown"
          - "Phone Call"
          - "Phone Login"
          - "Incoming Fax"
          - "Accept Call"
          - "External Application"
          - "FindMe"
          - "FollowMe"
          - "Outgoing Fax"
          - "CallOut-CallMe"
          - "Call Return"
          - "Calling Card"
          - "Monitoring"
          - "Ring Directly"
          - "RingOut Web"
          - "Text Relay"
          - "VoIP Call"
          - "RingOut PC"
          - "RingMe"
          - "Transfer"
          - "411 Info"
          - "Emergency"
          - "E911 Update"
          - "Support"
          - "RingOut Mobile"
          - "MeetingsCall"
          - "SilentMonitoring"
        direction:
          type: "string"
          description: "Call direction"
          enum:
          - "Inbound"
          - "Outbound"
        billing:
          $ref: "#/components/schemas/BillingInfo"
        delegate:
          $ref: "#/components/schemas/CallLogDelegateInfo"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        duration:
          type: "integer"
          description: "Call duration in seconds"
        extension:
          $ref: "#/components/schemas/ExtensionInfoCallLog"
        legType:
          type: "string"
          description: "Leg type"
          enum:
          - "SipForwarding"
          - "ServiceMinus2"
          - "ServiceMinus3"
          - "PstnToSip"
          - "Accept"
          - "FindMe"
          - "FollowMe"
          - "TestCall"
          - "FaxSent"
          - "CallBack"
          - "CallingCard"
          - "RingDirectly"
          - "RingOutWebToSubscriber"
          - "RingOutWebToCaller"
          - "SipToPstnMetered"
          - "RingOutClientToSubscriber"
          - "RingOutClientToCaller"
          - "RingMe"
          - "TransferCall"
          - "SipToPstnUnmetered"
          - "RingOutDeviceToSubscriber"
          - "RingOutDeviceToCaller"
          - "RingOutOneLegToCaller"
          - "ExtensionToExtension"
          - "CallPark"
          - "PagingServer"
          - "Hunting"
          - "OutgoingFreeSpDl"
          - "ParkLocation"
          - "ConferenceCall"
          - "MobileApp"
          - "Monitoring"
          - "MoveToConference"
          - "Unknown"
        startTime:
          type: "string"
          description: "The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
            \ format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        type:
          type: "string"
          description: "Call type"
          enum:
          - "Voice"
          - "Fax"
        result:
          type: "string"
          description: "Status description of the call operation"
          enum:
          - "Unknown"
          - "Accepted"
          - "Call connected"
          - "In Progress"
          - "Voicemail"
          - "Reply"
          - "Missed"
          - "Busy"
          - "Rejected"
          - "No Answer"
          - "Hang Up"
          - "Blocked"
          - "Suspended account"
          - "Call Failed"
          - "Call Failure"
          - "Internal Error"
          - "IP Phone Offline"
          - "No Calling Credit"
          - "Not Allowed"
          - "Restricted Number"
          - "Wrong Number"
          - "Answered Not Accepted"
          - "Stopped"
          - "International Disabled"
          - "International Restricted"
          - "Abandoned"
          - "Declined"
          - "Received"
          - "Fax on Demand"
          - "Partial Receive"
          - "Receive Error"
          - "Fax Receipt Error"
          - "Sent"
          - "Fax Partially Sent"
          - "Send Error"
          - "Fax Not Sent"
          - "Fax Poor Line"
        reason:
          type: "string"
          description: "Reason of a call result:\n * `Accepted` - The call was connected\
            \ to and accepted by this number\n * `Connected` - The call was answered,\
            \ but there was no response on how to handle the call (for example, a\
            \ voice mail system answered the call and did not push \"1\" to accept)\n\
            \ * `Line Busy` - The phone number you dialed was busy\n * `Not Answered`\
            \ - The phone number you dialed was not answered\n * `No Answer` - You\
            \ did not answer the call\n * `Hang Up` - The caller hung up before the\
            \ call was answered\n * `Stopped` - This attempt was stopped because the\
            \ call was answered by another phone\n * `Internal Error` - An internal\
            \ error occurred when making the call. Please try again\n * `No Credit`\
            \ - There was not enough Calling Credit on your account to make this call\n\
            \ * `Restricted Number` - The number you dialed is restricted by RingCentral\n\
            \ * `Wrong Number` - The number you dialed has either been disconnected\
            \ or is not a valid phone number. Please check the number and try again\n\
            \ * `International Disabled` - International calling is not enabled on\
            \ your account. Contact customer service to activate International Calling\n\
            \ * `International Restricted` - The country and/or area you attempted\
            \ to call has been prohibited by your administrator\n * `Bad Number` -\
            \ An error occurred when making the call. Please check the number before\
            \ trying again\n * `Info 411 Restricted` - Calling to 411 Information\
            \ Services is restricted\n * `Customer 611 Restricted` - 611 customer\
            \ service is not supported. Please contact customer service at <(888)\
            \ 555-1212>\n * `No Digital Line` - This DigitalLine was either not plugged\
            \ in or did not have an internet connection\n * `Failed Try Again` - Call\
            \ failed. Please try again\n * `Max Call Limit` - The number of simultaneous\
            \ calls to your account has reached its limit\n * `Too Many Calls` - The\
            \ number of simultaneous calls for per DigitalLine associated with Other\
            \ Phone has reached its limit. Please contact customer service\n * `Calls\
            \ Not Accepted` - Your account was not accepting calls at this time\n\
            \ * `Number Not Allowed` - The number that was dialed to access your account\
            \ is not allowed\n * `Number Blocked` - This number is in your Blocked\
            \ Numbers list\n * `Number Disabled` - The phone number and/or area you\
            \ attempted to call has been prohibited by your administrator\n * `Resource\
            \ Error` - An error occurred when making the call. Please try again\n\
            \ * `Call Loop` - A call loop occurred due to an incorrect call forwarding\
            \ configuration. Please check that you are not forwarding calls back to\
            \ your own account\n * `Fax Not Received` - An incoming fax could not\
            \ be received because a proper connection with the sender's fax machine\
            \ could not be established\n * `Fax Partially Sent` - The fax was only\
            \ partially sent. Possible explanations include phone line quality to\
            \ poor to maintain the connection or the call was dropped\n * `Fax Not\
            \ Sent` - An attempt to send the fax was made, but could not connect with\
            \ the receiving fax machine\n * `Fax Poor Line` - An attempt to send the\
            \ fax was made, but the phone line quality was too poor to send the fax\n\
            \ * `Fax Prepare Error` - An internal error occurred when preparing the\
            \ fax. Please try again\n * `Fax Save Error` - An internal error occurred\
            \ when saving the fax. Please try again\n * `Fax Send Error` - An error\
            \ occurred when sending the fax. Please try again \n * `DescNoE911Address`\
            \ - The call was rejected due to no E911 address. Please define emergency\
            \ address\n"
          enum:
          - "Accepted"
          - "Connected"
          - "line Busy"
          - "Not Answered"
          - "No Answer"
          - "Hang Up"
          - "Stopped"
          - "Internal Error"
          - "No Credit"
          - "Restricted Number"
          - "Wrong Number"
          - "International Disabled"
          - "International Restricted"
          - "Bad Number"
          - "Info 411 Restricted"
          - "Customer 611 Restricted"
          - "No Digital Line"
          - "Failed Try Again"
          - "Max Call Limit"
          - "Too Many Calls"
          - "Calls Not Accepted"
          - "Number Not Allowed"
          - "Number Blocked"
          - "Number Disabled"
          - "Not Allowed"
          - "Resource Error"
          - "Call Loop"
          - "Fax Not Received"
          - "Fax Partially Sent"
          - "Fax Not Sent"
          - "Fax Poor Line"
          - "Fax Prepare Error"
          - "Fax Save Error"
          - "Fax Send Error"
          - "DescNoE911Address"
        reasonDescription:
          type: "string"
        from:
          $ref: "#/components/schemas/CallLogCallerInfo"
        to:
          $ref: "#/components/schemas/CallLogCallerInfo"
        transport:
          type: "string"
          description: "Call transport"
          enum:
          - "PSTN"
          - "VoIP"
        recording:
          $ref: "#/components/schemas/CallLogRecordingInfo"
        shortRecording:
          type: "boolean"
          description: "Indicates that the recording is too short and therefore wouldn't\
            \ be returned. The flag is not returned if the value is false"
        master:
          type: "boolean"
          description: "Returned for 'Detailed' call log. Specifies if the leg is\
            \ master-leg"
        message:
          $ref: "#/components/schemas/CallLogRecordMessage"
        telephonySessionId:
          type: "string"
          description: "Telephony identifier of a call session"
        internalType:
          type: "string"
          description: "Internal type of a call"
          enum:
          - "Local"
          - "LongDistance"
          - "International"
          - "Sip"
          - "RingMe"
          - "RingOut"
          - "Usual"
          - "TollFreeNumber"
          - "VerificationNumber"
          - "Vma"
          - "LocalNumber"
          - "ImsOutgoing"
          - "ImsIncoming"
    AccountCallLogResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of company call log records"
        records:
          type: "array"
          description: "List of call log records"
          items:
            $ref: "#/components/schemas/CompanyCallLogRecord"
        navigation:
          $ref: "#/components/schemas/CallLogNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallLogPagingInfo"
    CallLogRecordingInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the call recording"
        uri:
          type: "string"
          description: "Link to the call recording metadata resource"
        type:
          type: "string"
          description: "Indicates recording mode used"
          enum:
          - "Automatic"
          - "OnDemand"
        contentUri:
          type: "string"
          description: "Link to the call recording binary content"
      description: "Call recording data. Returned if the call is recorded - `withRecording`\
        \ parameter is set to 'True' in this case"
    CallLogPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Maximum value is 1000. If perPage value in the request is greater than\
            \ 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
      description: "Information on paging"
    CallLogCallerInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number of a party. Usually it is a plain number including\
            \ country and area code like 18661234567. But sometimes it could be returned\
            \ from database with some formatting applied, for example (866)123-4567.\
            \ This property is filled in all cases where parties communicate by means\
            \ of global phone numbers, for example when calling to direct numbers\
            \ or sending/receiving SMS"
        extensionNumber:
          type: "string"
          description: "Extension short number (usually 3 or 4 digits). This property\
            \ is filled when parties communicate by means of short internal numbers,\
            \ for example when calling to other extension or sending/receiving Company\
            \ Pager message"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        location:
          type: "string"
          description: "Contains party location (city, state) if one can be determined\
            \ from phoneNumber. This property is filled only when phoneNumber is not\
            \ empty and server can calculate location information from it (for example,\
            \ this information is unavailable for US toll-free numbers)"
        name:
          type: "string"
          description: "Symbolic name associated with a party. If the phone does not\
            \ belong to the known extension, only the location is returned, the name\
            \ is not determined then"
        device:
          $ref: "#/components/schemas/CallLogRecordDeviceInfo"
      description: "Information on caller ('from') or callee ('to')"
    CallLogRecordDeviceInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a device"
        uri:
          type: "string"
          description: "string to a device"
    ExtensionInfoCallLog:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
      description: "Information on extension"
    CallLogNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/CallLogNavigationInfoURI"
        nextPage:
          $ref: "#/components/schemas/CallLogNavigationInfoURI"
        previousPage:
          $ref: "#/components/schemas/CallLogNavigationInfoURI"
      description: "Information on navigation"
    BillingInfo:
      type: "object"
      properties:
        costIncluded:
          type: "number"
          description: "Cost per minute, paid and already included in your RingCentral\
            \ Plan. For example International Calls"
        costPurchased:
          type: "number"
          description: "Cost per minute, paid and not included in your RingCentral\
            \ Plan"
      description: "Billing information related to the call. Returned for 'Detailed'\
        \ view only"
    CallLogNavigationInfoURI:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    CompanyCallLogSyncInfo:
      type: "object"
      properties:
        syncType:
          type: "string"
          description: "Type of synchronization"
          enum:
          - "FSync"
          - "ISync"
        syncToken:
          type: "string"
          description: "Synchronization token"
        syncTime:
          type: "string"
          description: "Time of last synchronization in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
      description: "Sync information (type, token and time)"
    AccountCallLogSyncResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to account call log sync resource"
        records:
          type: "array"
          description: "List of call log records with synchronization information.\
            \ For 'ISync' the total number of returned records is limited to 250;\
            \ this includes both new records and the old ones, specified by the recordCount\
            \ parameter"
          items:
            $ref: "#/components/schemas/CompanyCallLogRecord"
        syncInfo:
          $ref: "#/components/schemas/CompanyCallLogSyncInfo"
    CompanyActiveCallsResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of company active call records"
        records:
          type: "array"
          description: "List of call log records"
          items:
            $ref: "#/components/schemas/CompanyCallLogRecord"
        navigation:
          $ref: "#/components/schemas/CallLogNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallLogPagingInfo"
    ErrorEntity:
      type: "object"
      properties:
        errorCode:
          type: "string"
          description: "Error code"
        message:
          type: "string"
          description: "Error message"
        parameterName:
          type: "string"
          description: "Name of invalid parameter"
        parameterValue:
          type: "string"
          description: "Value of invalid parameter"
    ExtensionFormattingLocaleInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal Identifier of a formatting language"
    ExtensionBulkUpdateTaskResource:
      required:
      - "creationTime"
      - "id"
      - "lastModifiedTime"
      - "status"
      - "uri"
      type: "object"
      description: "Information on a task for updating multiple extensions"
      properties:
        uri:
          type: "string"
          description: "Link to a task resource"
        id:
          type: "string"
          description: "Internal identifier of a task"
        status:
          type: "string"
          description: "Task status"
          enum:
          - "Accepted"
          - "InProgress"
          - "Completed"
          - "Failed"
        creationTime:
          type: "string"
          description: "Task creation datetime"
        lastModifiedTime:
          type: "string"
          description: "Task latest update datetime"
        result:
          $ref: "#/components/schemas/ExtensionBulkUpdateTaskResult"
    CallQueueInfoRequest:
      type: "object"
      properties:
        slaGoal:
          type: "integer"
          description: "Target percentage of calls that must be answered by agents\
            \ within the service level time threshold"
        slaThresholdSeconds:
          type: "integer"
        includeAbandonedCalls:
          type: "boolean"
        abandonedThresholdSeconds:
          type: "integer"
      description: "For Call Queue extension type only. Please note that legacy 'Department'\
        \ extension type corresponds to 'Call Queue' extensions in modern RingCentral\
        \ product terminology"
    ExtensionStatusInfo:
      type: "object"
      properties:
        comment:
          type: "string"
          description: "A free-form user comment, describing the status change reason"
        reason:
          type: "string"
          description: "Type of suspension"
          enum:
          - "Voluntarily"
          - "Involuntarily"
          - "SuspendedVoluntarily"
      description: "Status information (reason, comment). Returned for 'Disabled'\
        \ status only"
    ReferenceInfo:
      type: "object"
      properties:
        ref:
          type: "string"
          description: "Non-RC identifier of an extension"
        type:
          type: "string"
          description: "Type of external identifier"
          enum:
          - "PartnerId"
          - "CustomerDirectoryId"
    ExtensionGreetingLanguageInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "internal Identifier of a greeting language"
    PronouncedNameInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Voice name type. 'Default' - default extension name; first\
            \ name and last name specified in user profile; 'TextToSpeech' - custom\
            \ text; user name spelled the way it sounds and specified by user; 'Recorded'\
            \ - custom audio, user name recorded in user's own voice (supported only\
            \ for extension retrieval)"
          enum:
          - "Default"
          - "TextToSpeech"
          - "Recorded"
        text:
          type: "string"
          description: "Custom text"
        prompt:
          $ref: "#/components/schemas/PronouncedNamePromptInfo"
    ExtensionCountryInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "internal Identifier of a country"
    ExtensionBulkUpdateInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        status:
          type: "string"
          enum:
          - "Disabled"
          - "Enabled"
          - "NotActivated"
          - "Frozen"
        statusInfo:
          $ref: "#/components/schemas/ExtensionStatusInfo"
        reason:
          type: "string"
          description: "Type of suspension"
        comment:
          type: "string"
          description: "Free form user comment"
        extensionNumber:
          type: "string"
          description: "Extension number available"
        contact:
          $ref: "#/components/schemas/ContactInfoUpdateRequest"
        regionalSettings:
          $ref: "#/components/schemas/ExtensionRegionalSettingRequest"
        setupWizardState:
          type: "string"
          enum:
          - "NotStarted"
          - "Incomplete"
          - "Completed"
        partnerId:
          type: "string"
          description: "Additional extension identifier created by partner application\
            \ and applied on client side"
        ivrPin:
          type: "string"
          description: "IVR PIN"
        password:
          type: "string"
          description: "Password for extension"
        callQueueInfo:
          $ref: "#/components/schemas/CallQueueInfoRequest"
        transition:
          $ref: "#/components/schemas/UserTransitionInfo"
        customFields:
          type: "array"
          items:
            $ref: "#/components/schemas/CustomFieldInfo"
        hidden:
          type: "boolean"
          description: "Hides extension from showing in company directory. Supported\
            \ for extensions of User type only"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "Fax User"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ApplicationExtension"
          - "ParkLocation"
          - "DelegatedLinesGroup"
        references:
          type: "array"
          description: "List of non-RC internal identifiers assigned to an extension"
          items:
            $ref: "#/components/schemas/ReferenceInfo"
    PronouncedNamePromptInfo:
      type: "object"
      properties:
        id:
          type: "string"
        contentUri:
          type: "string"
          description: "Link to a prompt resource"
        contentType:
          type: "string"
          description: "Content media type"
          enum:
          - "audio/mpeg"
          - "audio/wav"
    ContactBusinessAddressInfo:
      type: "object"
      properties:
        country:
          type: "string"
          description: "Country name of an extension user company"
        state:
          type: "string"
          description: "State/province name of an extension user company. Mandatory\
            \ for the USA, UK and Canada"
        city:
          type: "string"
          description: "City name of an extension user company"
        street:
          type: "string"
          description: "Street address of an extension user company"
        zip:
          type: "string"
          description: "Zip code of an extension user company"
      description: "Extension user business address. The default is Company (Auto-Receptionist)\
        \ settings"
    CustomFieldInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a custom field"
        value:
          type: "string"
          description: "Custom field value"
        displayName:
          type: "string"
    ExtensionTimezoneInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "internal Identifier of a timezone"
    ExtensionRegionalSettingRequest:
      type: "object"
      properties:
        homeCountry:
          $ref: "#/components/schemas/ExtensionCountryInfoRequest"
        timezone:
          $ref: "#/components/schemas/ExtensionTimezoneInfoRequest"
        language:
          $ref: "#/components/schemas/ExtensionLanguageInfoRequest"
        greetingLanguage:
          $ref: "#/components/schemas/ExtensionGreetingLanguageInfoRequest"
        formattingLocale:
          $ref: "#/components/schemas/ExtensionFormattingLocaleInfoRequest"
        timeFormat:
          type: "string"
          description: "Time format setting"
          default: "12h"
          enum:
          - "12h"
          - "24h"
    ExtensionLanguageInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "internal Identifier of a language"
    ExtensionBulkUpdateRequest:
      required:
      - "records"
      description: "List of extensions to be updated"
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/ExtensionBulkUpdateInfo"
    AutomaticLocationUpdatesSiteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a site"
        uri:
          type: "string"
          description: "Link to a site resource"
        name:
          type: "string"
          description: "Name of a site"
        code:
          type: "string"
          description: "Site code value. Returned only if specified"
      description: "Site data. If multi-site feature is turned on for the account,\
        \ then ID of a site must be specified. In order to assign a wireless point\
        \ to the main site (company) site ID should be set to `main-site`"
    UserTransitionInfo:
      type: "object"
      properties:
        sendWelcomeEmailsToUsers:
          type: "boolean"
          description: "Specifies if a welcome/activation email is sent to the existing\
            \ users during account confirmation"
        sendWelcomeEmail:
          type: "boolean"
          description: "Specifies if a welcome/activation email is sent to the new\
            \ users (within extension status changing from 'Unassigned' to 'NotActivated/Disabled')"
      description: "For NotActivated extensions only. Welcome email settings"
    ExtensionBulkUpdateTaskResult:
      type: "object"
      description: "Result record on multiple extension update task"
      properties:
        affectedItems:
          type: "array"
          items:
            $ref: "#/components/schemas/ExtensionUpdateShortResult"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorEntity"
    ExtensionUpdateShortResult:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        status:
          type: "string"
          description: "Extension update status"
          enum:
          - "Fail"
          - "Success"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorEntity"
    ContactInfoUpdateRequest:
      type: "object"
      properties:
        firstName:
          type: "string"
          description: "For User extension type only. Extension user first name"
        lastName:
          type: "string"
          description: "For User extension type only. Extension user last name"
        company:
          type: "string"
          description: "Extension user company name"
        jobTitle:
          type: "string"
        email:
          type: "string"
          description: "Email of extension user"
        businessPhone:
          type: "string"
          description: "Extension user contact phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format"
        mobilePhone:
          type: "string"
          description: "Extension user mobile (**non** Toll Free) phone number in\
            \ [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign)\
            \ format"
        businessAddress:
          $ref: "#/components/schemas/ContactBusinessAddressInfo"
        emailAsLoginName:
          type: "boolean"
          description: " If 'True' then contact email is enabled as login name for\
            \ this user. Please note that email should be unique in this case. The\
            \ default value is 'False'"
        pronouncedName:
          $ref: "#/components/schemas/PronouncedNameInfo"
        department:
          type: "string"
          description: "Extension user department, if any"
    UserTemplates:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to user templates resource"
        records:
          type: "array"
          description: "List of user templates"
          items:
            $ref: "#/components/schemas/TemplateInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    ProvisioningNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    ProvisioningPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
      description: "Information on paging"
    TemplateInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a template"
        id:
          type: "string"
          description: "Internal identifier of a template"
        type:
          type: "string"
          enum:
          - "UserSettings"
          - "CallHandling"
        name:
          type: "string"
          description: "Name of a template"
        creationTime:
          type: "string"
          description: "Time of a template creation"
        lastModifiedTime:
          type: "string"
          description: "Time of the last template modification"
    ProvisioningNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/ProvisioningNavigationInfoUri"
        nextPage:
          $ref: "#/components/schemas/ProvisioningNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/ProvisioningNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/ProvisioningNavigationInfoUri"
      description: "Information on navigation"
    MessageStatusesResponse:
      type: "object"
      description: "The statuses of the messages filtered by batch/account/phone numbers."
      properties:
        messageStatuses:
          $ref: "#/components/schemas/MessageStatuses"
    ASGErrorResponse:
      type: "object"
      description: "Error response"
      required:
      - "errorCode"
      - "message"
      properties:
        errorCode:
          type: "string"
          description: "Error code"
          example: "CMN-101"
        message:
          type: "string"
          description: "Human-readable description of the error. Not suitable for\
            \ end users."
          example: "AccountId 1234 is invalid"
    MessageStatusCounts:
      type: "object"
      description: "The count of the status"
      properties:
        count:
          type: "integer"
          description: "The count of the status"
          format: "int64"
          example: 7
        errorCodeCounts:
          type: "object"
          additionalProperties:
            type: "integer"
            description: "The count for the error code"
            format: "int64"
            example: 5
    SmsDirectionEnum:
      type: "string"
      description: "Direction of the SMS message"
      enum:
      - "Inbound"
      - "Outbound"
    MessageStatuses:
      type: "object"
      description: "The messages status object with details of each status"
      properties:
        Queued:
          $ref: "#/components/schemas/MessageStatusCounts"
        Delivered:
          $ref: "#/components/schemas/MessageStatusCounts"
        DeliveryFailed:
          $ref: "#/components/schemas/MessageStatusCounts"
        Sent:
          $ref: "#/components/schemas/MessageStatusCounts"
        SendingFailed:
          $ref: "#/components/schemas/MessageStatusCounts"
    MessageListResponse:
      type: "object"
      properties:
        records:
          type: "array"
          description: "An array containing individual messages"
          items:
            $ref: "#/components/schemas/MessageListMessageResponse"
        paging:
          $ref: "#/components/schemas/PagingResource"
      description: "List of messages retrieved for an account and other filter criteria\
        \ such as `batchId` and `fromPhoneNumber` specified in the request"
    PagingResource:
      type: "object"
      description: "Pagination details"
      properties:
        pageToken:
          type: "string"
          description: "Page token of the current response list"
          example: "pgt1"
        perPage:
          type: "integer"
          format: "int32"
          description: "Number of records per page"
          example: 3
        firstPageToken:
          type: "string"
          description: "First page token of the current filter criteria"
          example: "fpgt1"
        previousPageToken:
          type: "string"
          description: "Previous page token of the current filter criteria"
          example: "lpgt1"
        nextPageToken:
          type: "string"
          description: "Next page token of the current filter criteria"
          example: "npgt1"
    MessageListMessageResponse:
      type: "object"
      description: "The short detail of the message in the get batch response"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "The Id of the message"
          example: 1234
        batchId:
          type: "string"
          description: "Internal identifier of a batch the message was submitted in"
          example: "12345"
        from:
          type: "string"
          description: "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format from which the message is sent"
          example: "+15551234567"
        to:
          type: "array"
          description: "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format to which a message is sent"
          example:
          - "+15551234567"
          items:
            type: "string"
        creationTime:
          type: "string"
          format: "date-time"
          description: "The time at which the message was created"
        lastModifiedTime:
          type: "string"
          format: "date-time"
          description: "The time at which the messages was last updated"
        messageStatus:
          $ref: "#/components/schemas/SmsStatusEnum"
        segmentCount:
          type: "integer"
          description: "Number of segments of a message"
          format: "int32"
          example: 1
        text:
          type: "string"
          description: "Text of a message. Returned if the `view` parameter is set\
            \ to 'Detailed'"
        cost:
          type: "number"
          description: "Cost of a message"
          format: "double"
          example: 0.007
        direction:
          $ref: "#/components/schemas/SmsDirectionEnum"
        errorCode:
          type: "string"
          description: "The RC error code of the message sending failure reason"
          example: "SMS-RC-503"
    SmsStatusEnum:
      type: "string"
      description: "Current status of a message"
      example: "Queued"
      enum:
      - "Queued"
      - "Delivered"
      - "Sent"
      - "SendingFailed"
      - "DeliveryFailed"
    MessageDetailsResponse:
      type: "object"
      description: "Complete details of the message"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a message"
          example: "1234"
        from:
          type: "string"
          description: "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format from which the message was sent"
          example: "+15551234567"
        to:
          type: "array"
          description: "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format to which the message was sent"
          example:
          - "+15551234567"
          items:
            type: "string"
        text:
          type: "string"
          description: "Text of a message, maximum number of characters is 1000"
          example: "Hello, World!"
        creationTime:
          type: "string"
          format: "date-time"
          description: "The time when this is message was created."
        lastModifiedTime:
          type: "string"
          format: "date-time"
          description: "The time when this message was last updated."
        messageStatus:
          $ref: "#/components/schemas/SmsStatusEnum"
        segmentCount:
          type: "integer"
          description: "Number of segments of a message"
          format: "int32"
          example: 1
        cost:
          type: "number"
          description: "Cost of a message"
          format: "double"
          example: 0.007
        batchId:
          type: "string"
          description: "The batch in which the message was submitted"
          example: "batch12345"
        direction:
          $ref: "#/components/schemas/SmsDirectionEnum"
        errorCode:
          type: "string"
          description: "The RC error code of the message sending failure reason"
          example: "SMS-RC-503"
    OptOutListResponse:
      type: "object"
      description: "The list of opt outs"
      properties:
        records:
          type: "array"
          description: "List of individual opt-out number records"
          items:
            $ref: "#/components/schemas/OptOutResponse"
        paging:
          $ref: "#/components/schemas/PagingResource"
    OptOutResponse:
      type: "object"
      description: "Opt-out record"
      properties:
        from:
          type: "string"
          description: "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format from which the recipient has opted out"
          example: "+15551234567"
        to:
          type: "string"
          description: "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format which is opted out"
          example: "+15551234567"
        status:
          type: "string"
          description: "Status of a phone number"
          enum:
          - "OptIn"
          - "OptOut"
        source:
          type: "string"
          enum:
          - "Recipient"
          - "Account"
          - "Upstream"
          - "Carrier"
    OptOutBulkAssignResponse:
      type: "object"
      description: "The results of adding opt-outs and opt-ins"
      properties:
        optIns:
          type: "object"
          description: "Contains successful and failed opt-ins"
          properties:
            successful:
              type: "array"
              description: "Recipients' phone numbers which opt-ins were successfully\
                \ added for."
              items:
                type: "string"
              example:
              - "+15551237799"
            failed:
              type: "array"
              description: "Recipients' phone numbers which opt-ins were failed to\
                \ be added for. Plus, error messages"
              items:
                $ref: "#/components/schemas/OptOutBulkAssignFailedEntry"
              example:
              - to: "+15551237798"
                errorMessage: "Unexpected issue on removing an opt-out from bulk-assign\
                  \ request"
        optOuts:
          type: "object"
          description: "Contains successful and failed opt-outs"
          properties:
            successful:
              type: "array"
              description: "Recipients' phone numbers which opt-outs were successfully\
                \ added for."
              items:
                type: "string"
              example:
              - "+15551237755"
            failed:
              type: "array"
              description: "Recipients' phone numbers which opt-outs were failed to\
                \ be added for. Plus, error messages"
              items:
                $ref: "#/components/schemas/OptOutBulkAssignFailedEntry"
              example:
              - to: "+15551237756"
                errorMessage: "Unexpected issue on creating an opt-out from bulk-assign\
                  \ request"
    OptOutBulkAssignRequest:
      type: "object"
      description: "Consists of `from` field and `optOuts` and `optIns` lists. Both\
        \ `optOuts` and `optIns` can be empty but not simultaneously - at least one\
        \ of the lists must be entered.\""
      required:
      - "from"
      properties:
        from:
          type: "string"
          description: "The phone number of a sender which the recipients should be\
            \ opted out from or opted in to"
          example: "+15551234455"
        optOuts:
          type: "array"
          description: "The list of phone numbers to be opted out"
          items:
            type: "string"
          example:
          - "+15551237755"
          - "+15551237756"
        optIns:
          type: "array"
          description: "The list of phone numbers to be opted in"
          items:
            type: "string"
          example:
          - "+15551237799"
          - "+15551237798"
    OptOutBulkAssignFailedEntry:
      type: "object"
      description: "Represents a failure of adding opt-out / opt-in. A pair of a recipient\
        \ phone number and an error message"
      properties:
        to:
          type: "string"
          description: "A recipient phone number"
          example: "+15551237756"
        errorMessage:
          type: "string"
          description: "An error happened on adding opt-out / opt-in"
          example: "Unexpected issue on creating an opt-out from bulk-assign request"
    MessageBatchCreateRequest:
      required:
      - "from"
      - "messages"
      type: "object"
      description: "Batch of A2P SMS messages. This object provides specification\
        \ to\nsend message(s) to many recipients. It contains top-level attributes,\
        \ such\nas `text` which apply to all `messages`. In addition to that, it is\
        \ possible\nto override this attribute for each message. This way a single\
        \ API call may\nbe used to send individual messages to many recipients.\n"
      properties:
        from:
          type: "string"
          description: "Sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format."
          example: "+15551234567"
        text:
          type: "string"
          description: "Text to send to `messages.to` phone numbers. Can be overridden\
            \ on a per-message basis"
          example: "Hello, World!"
        messages:
          type: "array"
          description: "Individual messages"
          items:
            $ref: "#/components/schemas/MessageCreateRequest"
    RejectedRecipientResponseResource:
      type: "object"
      description: "The rejected recipient details"
      properties:
        index:
          type: "integer"
          description: "The index of the messages list in the send batch request where\
            \ the invalid recipient was found"
          format: "int64"
          example: 1
        to:
          type: "array"
          items:
            type: "string"
          description: "The invalid recipient number as found in the request"
          example:
          - "29395"
        errorCode:
          type: "string"
          description: "The error code"
          example: "CMN-100"
        description:
          type: "string"
          description: "The description of the error"
          example: "The recipient is invalid"
    MessageBatchResponse:
      type: "object"
      description: "Batch of A2P SMS messages. This object provides a specification\n\
        to send message(s) to many recipients. It contains top-level attributes which\
        \ apply to all messages. In addition\nto that, it is possible to override\
        \ this attribute for each message. This\nway a single API call may be used\
        \ to send individual messages to many recipients\n"
      properties:
        id:
          type: "string"
          description: "Unique identifier of the message batch"
          readOnly: true
          example: "12345"
        from:
          type: "string"
          description: "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format from which the messages are going to be sent"
          example: "+15551234567"
        batchSize:
          type: "integer"
          description: "Total number of messages in the accepted batch"
          format: "int32"
          example: 5
        processedCount:
          type: "integer"
          format: "int32"
          description: "Total number of messages currently processed in the batch"
          example: 1
        lastModifiedTime:
          type: "string"
          format: "date-time"
          description: "The last time the batch was processed.\n"
        status:
          type: "string"
          description: "Current status of a message batch"
          example: "Processing"
          enum:
          - "Processing"
          - "Completed"
        creationTime:
          type: "string"
          format: "date-time"
          description: "The time at which the batch was created\n"
        rejected:
          type: "array"
          description: "The list of rejected/invalid recipients"
          items:
            $ref: "#/components/schemas/RejectedRecipientResponseResource"
        cost:
          type: "number"
          format: "double"
          description: "The estimated batch cost for completed batch. Calculated after\
            \ batch processing is completed.\n"
          example: 0.007
    MessageCreateRequest:
      type: "object"
      description: "Single individual SMS resource"
      required:
      - "to"
      properties:
        to:
          type: "array"
          items:
            type: "string"
          description: "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\n\
            format, recipients of this message. Currently only one number is supported\n"
          example:
          - "15551234477"
        text:
          type: "string"
          description: "Text to send, maximum number of characters is 1000"
          example: "Hello, World!"
    BatchListResponse:
      type: "object"
      description: "The list of batches retrieved for an account and other filter\
        \ criteria such as fromPhoneNumber, date specified in the request."
      properties:
        records:
          type: "array"
          description: "An array containing individual batches"
          items:
            $ref: "#/components/schemas/MessageBatchResponse"
        paging:
          $ref: "#/components/schemas/PagingResource"
    ListCompanyAnsweringRuleInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an answering rule"
        uri:
          type: "string"
          description: "Canonical URI of an answering rule"
        enabled:
          type: "boolean"
          description: "Specifies if the rule is active or inactive. The default value\
            \ is 'True'"
          default: true
        type:
          type: "string"
          description: "Type of an answering rule, the default value is 'Custom' =\
            \ ['BusinessHours', 'AfterHours', 'Custom']"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        name:
          type: "string"
          description: "Name of an answering rule specified by user. Max number of\
            \ symbols is 30. The default value is 'My Rule N' where 'N' is the first\
            \ free number"
        calledNumbers:
          type: "array"
          description: "Answering rules are applied when calling to selected number(s)"
          items:
            $ref: "#/components/schemas/CalledNumberInfo"
        extension:
          $ref: "#/components/schemas/CompanyAnsweringRuleExtensionInfo"
    CompanyAnsweringRuleCallersInfoRequest:
      type: "object"
      properties:
        callerId:
          type: "string"
          description: "Phone number of a caller"
        name:
          type: "string"
          description: "Displayed name for a caller ID"
    CompanyAnsweringRuleCalledNumberInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an account phone number"
        phoneNumber:
          type: "string"
          description: "Phone number of a callee"
    CompanyAnsweringRuleExtensionInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
      description: "Extension to which the call is forwarded in 'Bypass' mode"
    CompanyAnsweringRuleWeeklyScheduleInfoRequest:
      type: "object"
      properties:
        monday:
          type: "array"
          description: "Time interval for a particular day"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        tuesday:
          type: "array"
          description: "Time interval for a particular day"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        wednesday:
          type: "array"
          description: "Time interval for a particular day"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        thursday:
          type: "array"
          description: "Time interval for a particular day"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        friday:
          type: "array"
          description: "Time interval for a particular day"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        saturday:
          type: "array"
          description: "Time interval for a particular day"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
        sunday:
          type: "array"
          description: "Time interval for a particular day"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleTimeIntervalRequest"
      description: "Weekly schedule. If specified, ranges cannot be specified"
    CompanyAnsweringRuleList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to an answering rule resource"
        records:
          type: "array"
          description: "List of company answering rules"
          items:
            $ref: "#/components/schemas/ListCompanyAnsweringRuleInfo"
        paging:
          $ref: "#/components/schemas/CallHandlingPagingInfo"
        navigation:
          $ref: "#/components/schemas/CallHandlingNavigationInfo"
    CompanyAnsweringRuleCalledNumberInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an account phone number"
        phoneNumber:
          type: "string"
          description: "Phone number of a callee"
    CompanyAnsweringRuleTimeIntervalRequest:
      type: "object"
      properties:
        from:
          type: "string"
          description: "Time in format hh:mm"
        to:
          type: "string"
          description: "Time in format hh:mm"
    CalledNumberInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Called phone number"
    RangesInfo:
      type: "object"
      properties:
        from:
          type: "string"
          description: "Starting datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601),\
            \ for example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*"
        to:
          type: "string"
          description: "Ending datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601),\
            \ for example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*"
    CustomGreetingInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a custom user greeting"
    CompanyAnsweringRuleRequest:
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of an answering rule specified by user. Max number of\
            \ symbols is 30. The default value is 'My Rule N' where 'N' is the first\
            \ free number"
        enabled:
          type: "boolean"
          description: "Specifies if the rule is active or inactive. The default value\
            \ is 'True'"
          default: true
        type:
          type: "string"
          description: "Type of an answering rule, the default value is 'Custom' =\
            \ ['BusinessHours', 'AfterHours', 'Custom']"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        callers:
          type: "array"
          description: "Answering rule will be applied when calls are received from\
            \ the specified caller(s)"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
        calledNumbers:
          type: "array"
          description: "Answering rule will be applied when calling the specified\
            \ number(s)"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleCalledNumberInfo"
        schedule:
          $ref: "#/components/schemas/CompanyAnsweringRuleScheduleInfoRequest"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded. The default value\
            \ is 'Operator' 'Operator' - play company greeting and forward to operator\
            \ extension 'Disconnect' - play company greeting and disconnect 'Bypass'\
            \ - bypass greeting to go to selected extension = ['Operator', 'Disconnect',\
            \ 'Bypass']"
          enum:
          - "Operator"
          - "Disconnect"
          - "Bypass"
        extension:
          type: "string"
          description: "Extension to which the call is forwarded in 'Bypass' mode"
        greetings:
          type: "array"
          description: "Greetings applied for an answering rule; only predefined greetings\
            \ can be applied, see Dictionary Greeting List"
          items:
            $ref: "#/components/schemas/GreetingInfo"
    PresetInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a greeting resource"
        id:
          type: "string"
          description: "Internal identifier of a greeting"
        name:
          type: "string"
          description: "Name of a greeting"
    CompanyAnsweringRuleExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
    CompanyAnsweringRuleScheduleInfo:
      type: "object"
      properties:
        weeklyRanges:
          $ref: "#/components/schemas/CompanyAnsweringRuleWeeklyScheduleInfoRequest"
        ranges:
          type: "array"
          description: "Specific data ranges. If specified, weeklyRanges cannot be\
            \ specified"
          items:
            $ref: "#/components/schemas/RangesInfo"
        ref:
          type: "string"
          description: "Reference to Business Hours or After Hours schedule = ['BusinessHours',\
            \ 'AfterHours']"
          enum:
          - "BusinessHours"
          - "AfterHours"
      description: "Schedule when an answering rule should be applied"
    GreetingInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type of a greeting, specifying the case when the greeting\
            \ is played."
          enum:
          - "Introductory"
          - "Announcement"
          - "ConnectingMessage"
          - "ConnectingAudio"
          - "Voicemail"
          - "Unavailable"
          - "InterruptPrompt"
          - "HoldMusic"
          - "Custom"
          - "Company"
          - "BlockedCallersSpecific"
          - "BlockedCallersAll"
          - "BlockedNoCallerId"
          - "BlockedPayPhones"
          - "StartRecording"
          - "StopRecording"
          - "AutomaticRecording"
        preset:
          $ref: "#/components/schemas/PresetInfo"
        custom:
          $ref: "#/components/schemas/CustomGreetingInfoRequest"
    CompanyAnsweringRuleScheduleInfoRequest:
      type: "object"
      properties:
        weeklyRanges:
          $ref: "#/components/schemas/CompanyAnsweringRuleWeeklyScheduleInfoRequest"
        ranges:
          type: "array"
          description: "Specific data ranges. If specified, weeklyRanges cannot be\
            \ specified"
          items:
            $ref: "#/components/schemas/RangesInfo"
        ref:
          type: "string"
          description: "Reference to Business Hours or After Hours schedule"
          enum:
          - "BusinessHours"
          - "AfterHours"
      description: "Schedule when an answering rule should be applied"
    CompanyAnsweringRuleInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an answering rule"
        uri:
          type: "string"
          description: "Canonical URI of an answering rule"
        enabled:
          type: "boolean"
          description: "Specifies if the rule is active or inactive"
          default: true
        type:
          type: "string"
          description: "Type of an answering rule"
          default: "Custom"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        name:
          type: "string"
          description: "Name of an answering rule specified by user. Max number of\
            \ symbols is 30. The default value is 'My Rule N' where 'N' is the first\
            \ free number"
        callers:
          type: "array"
          description: "Answering rule will be applied when calls are received from\
            \ the specified caller(s)"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
        calledNumbers:
          type: "array"
          description: "Answering rule will be applied when calling the specified\
            \ number(s)"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleCalledNumberInfoRequest"
        schedule:
          $ref: "#/components/schemas/CompanyAnsweringRuleScheduleInfo"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded. The default value\
            \ is 'Operator' 'Operator' - play company greeting and forward to operator\
            \ extension 'Disconnect' - play company greeting and disconnect 'Bypass'\
            \ - bypass greeting to go to selected extension = ['Operator', 'Disconnect',\
            \ 'Bypass']"
          enum:
          - "Operator"
          - "Disconnect"
          - "Bypass"
        extension:
          $ref: "#/components/schemas/CompanyAnsweringRuleExtensionInfoRequest"
        greetings:
          type: "array"
          description: "Greetings applied for an answering rule; only predefined greetings\
            \ can be applied, see Dictionary Greeting List"
          items:
            $ref: "#/components/schemas/GreetingInfo"
    CompanyAnsweringRuleUpdate:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Specifies if the rule is active or inactive. The default value\
            \ is 'True'"
          default: true
        name:
          type: "string"
          description: "Name of an answering rule specified by user. Max number of\
            \ symbols is 30. The default value is 'My Rule N' where 'N' is the first\
            \ free number"
        callers:
          type: "array"
          description: "Answering rule will be applied when calls are received from\
            \ the specified caller(s)"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleCallersInfoRequest"
        calledNumbers:
          type: "array"
          description: "Answering rule will be applied when calling the specified\
            \ number(s)"
          items:
            $ref: "#/components/schemas/CompanyAnsweringRuleCalledNumberInfo"
        schedule:
          $ref: "#/components/schemas/CompanyAnsweringRuleScheduleInfoRequest"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded. The default value\
            \ is 'Operator' 'Operator' - play company greeting and forward to operator\
            \ extension 'Disconnect' - play company greeting and disconnect 'Bypass'\
            \ - bypass greeting to go to selected extension = ['Operator', 'Disconnect','Bypass']"
          enum:
          - "Operator"
          - "Disconnect"
          - "Bypass"
        type:
          type: "string"
          description: "Type of an answering rule"
          default: "Custom"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        extension:
          type: "string"
          description: "Internal identifier of the extension the call is forwarded\
            \ to. Supported for 'Bypass' mode only (that should be specified in `callHandlingAction`\
            \ field)"
        greetings:
          type: "array"
          description: "Greetings applied for an answering rule; only predefined greetings\
            \ can be applied, see Dictionary Greeting List"
          items:
            $ref: "#/components/schemas/GreetingInfo"
    IVRPrompts:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to prompts library resource"
        records:
          type: "array"
          description: "List of Prompts"
          items:
            $ref: "#/components/schemas/PromptInfo"
        navigation:
          $ref: "#/components/schemas/CallHandlingNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallHandlingPagingInfo"
    PromptInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Internal identifier of a prompt"
        id:
          type: "string"
          description: "Link to a prompt metadata"
        contentType:
          type: "string"
          description: "Type of a prompt media content"
        contentUri:
          type: "string"
          description: "Link to a prompt media content"
        filename:
          type: "string"
          description: "Name of a prompt"
    UpdateIVRPromptRequest:
      type: "object"
      properties:
        filename:
          type: "string"
          description: "Name of a file to be uploaded as a prompt"
    AddressBookBulkUploadTaskResult:
      type: "object"
      description: "Result record on adding multiple contacts to an extension. Returned\
        \ for completed tasks"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        contact:
          $ref: "#/components/schemas/AddressBookBulkContactResource"
        status:
          type: "string"
          description: "Adding contact status"
          enum:
          - "Success"
          - "Fail"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorEntity"
    AddressBookBulkUploadResponse:
      description: "Information on a task for adding multiple contacts to multiple\
        \ extensions"
      required:
      - "id"
      - "uri"
      - "creationTime"
      - "lastModifiedTime"
      - "status"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a task"
        uri:
          type: "string"
          description: "Link for the task status retrieval"
        status:
          type: "string"
          description: "Task status"
          enum:
          - "Accepted"
          - "InProgress"
          - "Completed"
          - "Failed"
        creationTime:
          type: "string"
          description: "Datetime of a task creation"
        lastModifiedTime:
          type: "string"
          description: "Datetime of a task latest update"
        results:
          $ref: "#/components/schemas/AddressBookBulkUploadTaskResult"
    AddressBookBulkUploadResource:
      required:
      - "extensionId"
      - "contacts"
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        contacts:
          type: "array"
          description: "List of contacts to be added to extension address book"
          items:
            $ref: "#/components/schemas/AddressBookBulkContactResource"
    AddressBookBulkUploadRequest:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of extensions which contacts have to be updated"
          items:
            $ref: "#/components/schemas/AddressBookBulkUploadResource"
    AddressBookBulkContactResource:
      type: "object"
      description: "Contact resource"
      properties:
        email:
          type: "string"
          description: "Email of a contact"
          example: "charlie.williams@example.com"
        notes:
          type: "string"
          description: "Notes for a contact"
          example: "#1 Customer"
        company:
          type: "string"
          description: "Company name of a contact"
          example: "Example, Inc."
        firstName:
          type: "string"
          description: "First name of a contact"
          example: "Charlie"
        lastName:
          type: "string"
          description: "Last name of a contact"
          example: "Williams"
        jobTitle:
          type: "string"
          description: "Job title of a contact"
          example: "CEO"
        birthday:
          type: "string"
          description: "Date of birth of a contact"
          format: "date-time"
        webPage:
          type: "string"
          description: "Link to a contact home page"
          example: "http://www.example.com"
        middleName:
          type: "string"
          description: "Middle name of a contact"
          example: "J"
        nickName:
          type: "string"
          description: "Nick name of a contact"
          example: "The Boss"
        email2:
          type: "string"
          description: "Second email of a contact"
          example: "charlie.williams2@example.com"
        email3:
          type: "string"
          description: "Third email of a contact"
          example: "charlie.williams3@example.com"
        homePhone:
          type: "string"
          description: "Home phone number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        homePhone2:
          type: "string"
          description: "2nd home phone number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessPhone:
          type: "string"
          description: "Business phone of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessPhone2:
          type: "string"
          description: "2nd business phone of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        mobilePhone:
          type: "string"
          description: "Mobile phone of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessFax:
          type: "string"
          description: "Business fax number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        companyPhone:
          type: "string"
          description: "Company number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        assistantPhone:
          type: "string"
          description: "Phone number of a contact assistant in e.164 (with \"+\")\
            \ format"
          example: "+15551234567"
        carPhone:
          type: "string"
          description: "Car phone number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        otherPhone:
          type: "string"
          description: "Other phone number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        otherFax:
          type: "string"
          description: "Other fax number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        callbackPhone:
          type: "string"
          description: "Callback phone number of a contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessAddress:
          $ref: "#/components/schemas/AddressBookBulkContactAddressInfo"
        homeAddress:
          $ref: "#/components/schemas/AddressBookBulkContactAddressInfo"
        otherAddress:
          $ref: "#/components/schemas/AddressBookBulkContactAddressInfo"
    AddressBookBulkContactAddressInfo:
      type: "object"
      description: "Contact address information"
      properties:
        country:
          type: "string"
          description: "Country name of extension user company. Not returned for Address\
            \ Book"
        state:
          type: "string"
          description: "State/province name of extension user company"
        city:
          type: "string"
          description: "City name of extension user company"
        street:
          type: "string"
          description: "Street address of extension user company"
        zip:
          type: "string"
          description: "Zip code of extension user company"
    CallQueueInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call queue"
        id:
          type: "string"
          description: "Internal identifier of a call queue"
        extensionNumber:
          type: "string"
          description: "Extension number of a call queue"
        name:
          type: "string"
          description: "Name of a call queue"
    CallQueues:
      required:
      - "navigation"
      - "paging"
      - "records"
      - "uri"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call queues resource"
        records:
          type: "array"
          description: "List of call queues"
          items:
            $ref: "#/components/schemas/CallQueueInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    CallQueueServiceLevelSettings:
      type: "object"
      properties:
        slaGoal:
          type: "integer"
          description: "Target percentage of calls that must be answered by agents\
            \ within the service level time threshold"
        slaThresholdSeconds:
          type: "integer"
          description: "The period of time in seconds that is considered to be an\
            \ acceptable service level"
        includeAbandonedCalls:
          type: "boolean"
          description: "Includes abandoned calls (when callers hang up prior to being\
            \ served by an agent) into service-level calculation"
        abandonedThresholdSeconds:
          type: "integer"
          description: "Abandoned calls that are shorter than the defined period of\
            \ time in seconds will not be included into the calculation of Service\
            \ Level"
      description: "Call queue service level settings"
    CallQueueDetails:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a call queue"
        name:
          type: "string"
          description: "Call queue name"
        extensionNumber:
          type: "string"
          description: "Call queue extension number"
        status:
          type: "string"
          description: "Call queue status"
          enum:
          - "Enabled"
          - "Disabled"
          - "NotActivated"
        serviceLevelSettings:
          $ref: "#/components/schemas/CallQueueServiceLevelSettings"
        editableMemberStatus:
          type: "boolean"
          description: "Allows members to change their queue status"
    CallQueueUpdateDetails:
      type: "object"
      properties:
        serviceLevelSettings:
          $ref: "#/components/schemas/CallQueueServiceLevelSettings"
        editableMemberStatus:
          type: "boolean"
          description: "Allows members to change their queue status"
    CallQueuePresenceEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter name"
        timestamp:
          type: "string"
          format: "date-time"
          description: "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/CallQueuePresenceEventBody"
    SiteResource:
      type: "object"
      description: "Site extension information"
      properties:
        id:
          type: "string"
          description: "Site extension identifier"
        name:
          type: "string"
          description: "Site extension name"
    CallQueuePresenceEventBody:
      type: "object"
      description: "Notification payload body"
      properties:
        extensionId:
          type: "string"
          description: "Agent extension ID"
        callQueueId:
          type: "string"
          description: "Call queue extension ID"
        acceptCalls:
          type: "boolean"
          description: "Call queue agent availability for calls of this queue"
    CallQueueUpdateMemberPresence:
      type: "object"
      properties:
        member:
          $ref: "#/components/schemas/CallQueueMemberId"
        acceptCurrentQueueCalls:
          type: "boolean"
          description: "Call queue member availability for calls of this queue"
    CallQueueMember:
      type: "object"
      description: "Call queue member information"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        name:
          type: "string"
          description: "Extension full name"
        extensionNumber:
          type: "string"
          description: "Extension number"
        site:
          $ref: "#/components/schemas/SiteResource"
    CallQueueMemberId:
      type: "object"
      description: "Call queue member information"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension - queue member"
    CallQueuePresence:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/CallQueueMemberPresence"
    CallQueueMemberPresence:
      type: "object"
      properties:
        member:
          $ref: "#/components/schemas/CallQueueMember"
        acceptQueueCalls:
          type: "boolean"
          description: "Private member telephony availability status applied to calls\
            \ of all queues"
        acceptCurrentQueueCalls:
          type: "boolean"
          description: "Call queue member availability in this particular queue"
    CallQueueUpdatePresence:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/CallQueueUpdateMemberPresence"
    CallQueueBulkAssignResource:
      type: "object"
      properties:
        addedExtensionIds:
          type: "array"
          items:
            type: "string"
        removedExtensionIds:
          type: "array"
          items:
            type: "string"
    CallQueueMemberInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call queue member"
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a call queue member"
        extensionNumber:
          type: "string"
          description: "Extension number of a call queue member"
    CallQueueMembers:
      required:
      - "navigation"
      - "paging"
      - "records"
      - "uri"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call queue members resource"
        records:
          type: "array"
          description: "List of call queue members"
          items:
            $ref: "#/components/schemas/CallQueueMemberInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    EmergencyLocationInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the emergency response location"
        address:
          $ref: "#/components/schemas/EmergencyLocationAddressInfo"
        name:
          type: "string"
          description: "Emergency response location name"
        site:
          $ref: "#/components/schemas/ShortSiteInfo"
        addressStatus:
          type: "string"
          description: "Emergency address status"
          enum:
          - "Valid"
          - "Invalid"
        usageStatus:
          type: "string"
          description: "Status of emergency response location usage."
          enum:
          - "Active"
          - "Inactive"
        visibility:
          type: "string"
          description: "Visibility of an emergency response location. If `Private`\
            \ is set, then location is visible only for restricted number of users,\
            \ specified in `owners` array"
          default: "Public"
          enum:
          - "Public"
    EmergencyLocationList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the emergency location list resource"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/EmergencyLocationInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    EmergencyLocationInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the emergency response location"
        address:
          $ref: "#/components/schemas/EmergencyLocationAddressInfo"
        name:
          type: "string"
          description: "Emergency response location name"
        site:
          $ref: "#/components/schemas/ShortSiteInfo"
        addressStatus:
          type: "string"
          description: "Emergency address status"
          enum:
          - "Valid"
          - "Invalid"
          - "Provisioning"
        usageStatus:
          type: "string"
          description: "Status of emergency response location usage."
          enum:
          - "Active"
          - "Inactive"
        syncStatus:
          type: "string"
          description: "Resulting status of emergency address synchronization. Returned\
            \ if `syncEmergencyAddress` parameter is set to 'True'"
          enum:
          - "Verified"
          - "Updated"
          - "Deleted"
          - "ActivationProcess"
          - "Unsupported"
          - "Failed"
        visibility:
          type: "string"
          description: "Visibility of an emergency response location. If `Private`\
            \ is set, then location is visible only for the restricted number of users,\
            \ specified in `owners` array"
          default: "Public"
          enum:
          - "Private"
          - "Public"
        owners:
          type: "array"
          description: "List of private location owners"
          items:
            $ref: "#/components/schemas/LocationOwnerInfo"
      description: "Company emergency response location details"
    LocationOwnerInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user - private location owner"
    ShortSiteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a site extension"
        name:
          type: "string"
          description: "Extension user first name"
    EmergencyLocationAddressInfo:
      type: "object"
      properties:
        country:
          type: "string"
          description: "Country name"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
        countryIsoCode:
          type: "string"
          description: "ISO code of a country"
        countryName:
          type: "string"
          description: "Full name of a country"
        state:
          type: "string"
          description: "State/Province name. Mandatory for the USA, the UK and Canada"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        stateIsoCode:
          type: "string"
          description: "ISO code of a state"
        stateName:
          type: "string"
          description: "Full name of a state"
        city:
          type: "string"
          description: "City name"
        street:
          type: "string"
          description: "First line address"
        street2:
          type: "string"
          description: "Second line address (apartment, suite, unit, building, floor,\
            \ etc.)"
        zip:
          type: "string"
          description: "Postal (Zip) code"
        customerName:
          type: "string"
          description: "Customer name"
    LocationDeletionInfo:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        deletion:
          type: "string"
          description: "Identifies the possibility and status of emergency location\
            \ deletion"
          enum:
          - "Failed"
          - "Completed"
          - "Forbidden"
          - "Restricted"
          - "Allowed"
        errors:
          $ref: "#/components/schemas/LocationDeletionErrorInfo"
    GetLocationDeletionMultiResponse:
      type: "object"
      properties:
        deletion:
          type: "string"
          enum:
          - "Forbidden"
          - "Restricted"
          - "Allowed"
        reassignment:
          type: "string"
          enum:
          - "Forbidden"
          - "Allowed"
        emergencyLocations:
          type: "array"
          items:
            $ref: "#/components/schemas/LocationDeletionInfo"
    LocationDeletionErrorInfo:
      type: "object"
      properties:
        errorCode:
          type: "string"
          description: "Error code"
        message:
          type: "string"
          description: "Error message"
        additionalInfo:
          type: "string"
          description: "Additional attribute for this error, for example `parameterName`"
    ScheduleUserMeetingInfo:
      type: "object"
      properties:
        enforceLogin:
          type: "boolean"
          description: "If true, then only signed-in users can join this meeting"
        startHostVideo:
          type: "boolean"
          description: "Starting meetings with host video on/off (true/false)"
        startParticipantsVideo:
          type: "boolean"
          description: "Starting meetings with participant video on/off (true/false)"
        audioOptions:
          type: "array"
          description: "Determines how participants can join the audio channel of\
            \ a meeting"
          items:
            type: "string"
            enum:
            - "Phone"
            - "ComputerAudio"
            - "ThirdParty"
        allowJoinBeforeHost:
          type: "boolean"
          description: "Allows participants to join the meeting before the host arrives"
        usePmiForScheduledMeetings:
          type: "boolean"
          description: "Determines whether to use Personal Meeting ID (PMI) when scheduling\
            \ a meeting"
        usePmiForInstantMeetings:
          type: "boolean"
          description: "Determines whether to use Personal Meeting ID (PMI) when starting\
            \ an instant meeting"
        requirePasswordForSchedulingNewMeetings:
          type: "boolean"
          description: "A password will be generated when scheduling a meeting and\
            \ participants will require password to join a meeting. The Personal Meeting\
            \ ID (PMI) meetings are not included"
        requirePasswordForScheduledMeetings:
          type: "boolean"
          description: "Specifies whether to require a password for meetings which\
            \ have already been scheduled"
        defaultPasswordForScheduledMeetings:
          type: "string"
          description: "Password for already scheduled meetings. Users can set it\
            \ individually"
        requirePasswordForInstantMeetings:
          type: "boolean"
          description: "A random password will be generated for an instant meeting,\
            \ if set to 'True'. If you use PMI for your instant meetings, this option\
            \ will be disabled"
        requirePasswordForPmiMeetings:
          type: "string"
          description: "Specifies whether to require a password for meetings using\
            \ Personal Meeting ID (PMI). The supported values are: 'none', 'all' and\
            \ 'jbhOnly' (joined before host only)"
          enum:
          - "all"
          - "none"
          - "jbhOnly"
        pmiPassword:
          type: "string"
          description: "The default password for Personal Meeting ID (PMI) meetings"
        pstnPasswordProtected:
          type: "boolean"
          description: "Specifies whether to generate and require a password for participants\
            \ joining by phone"
      description: "Scheduling meeting settings locked on account level || Settings\
        \ defining how to schedule user meetingsxs"
    UserMeetingRecordingSetting:
      type: "object"
      properties:
        localRecording:
          type: "boolean"
          description: "Allows hosts and participants to record a meeting to a local\
            \ file"
        cloudRecording:
          type: "boolean"
          description: "Allows hosts to record and save a meeting/webinar in the cloud"
        recordSpeakerView:
          type: "boolean"
          description: "Allows to record active speaker with the shared screen"
          default: false
        recordGalleryView:
          type: "boolean"
          description: "Allows to record gallery view with the shared screen"
          default: false
        recordAudioFile:
          type: "boolean"
          description: "Allows to record an audio-only file"
          default: false
        saveChatText:
          type: "boolean"
          description: "Allows to save chat text from a meeting"
          default: false
        showTimestamp:
          type: "boolean"
          description: "Allows to show timestamp on video"
          default: false
        autoRecording:
          type: "string"
          description: "Automatical recording (local/cloud/none) of meetings as they\
            \ start"
          default: "local"
          enum:
          - "local"
          - "cloud"
          - "none"
        autoDeleteCmr:
          type: "string"
          description: "Automatical deletion of cloud recordings"
          default: "false"
        autoDeleteCmrDays:
          type: "integer"
          description: "A specified number of days for automatical deletion of cloud\
            \ recordings, the value range is 1-60"
      description: "Meeting recording settings locked on account level"
    TelephonyLockedSettings:
      type: "object"
      properties:
        thirdPartyAudio:
          type: "boolean"
          description: "ThirdParty audio option"
    AccountLockedSettingResponse:
      type: "object"
      properties:
        scheduleMeeting:
          $ref: "#/components/schemas/ScheduleUserMeetingInfo"
        recording:
          $ref: "#/components/schemas/UserMeetingRecordingSetting"
        telephony:
          $ref: "#/components/schemas/TelephonyLockedSettings"
    DepartmentMemberList:
      type: "object"
      description: "Please note that legacy 'Department' extension type corresponds\
        \ to 'Call Queue' extensions in modern RingCentral product terminology"
      properties:
        uri:
          type: "string"
          description: "Link to the list of department members"
        records:
          type: "array"
          description: "List of department members extensions"
          items:
            $ref: "#/components/schemas/ExtensionInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    ExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        name:
          type: "string"
          description: "Extension name"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        partnerId:
          type: "string"
          description: "For partner applications. Internal identifier of an extension\
            \ created by partner. The RingCentral supports the mapping of accounts\
            \ and stores the corresponding account ID/extension ID for each partner\
            \ ID of a client application. In request URIs partner IDs are accepted\
            \ instead of regular RingCentral native IDs as path parameters using pid\
            \ = XXX clause. Though in response URIs contain the corresponding account\
            \ IDs and extension IDs. In all request and response bodies these values\
            \ are reflected via partnerId attributes of account and extension"
      description: "Information on the extension, to which the phone number is assigned.\
        \ Returned only for the request of Account phone number list"
    BulkAssignItem:
      type: "object"
      properties:
        departmentId:
          type: "string"
        addedExtensionIds:
          type: "array"
          items:
            type: "string"
        removedExtensionIds:
          type: "array"
          items:
            type: "string"
    DepartmentBulkAssignResource:
      type: "object"
      description: "Please note that legacy 'Department' extension type corresponds\
        \ to 'Call Queue' extensions in modern RingCentral product terminology"
      properties:
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/BulkAssignItem"
    PresenceNavigationInfoURI:
      type: "object"
      description: "Canonical URI for the corresponding page of the list"
      properties:
        uri:
          type: "string"
          format: "uri"
    ActiveCallInfo:
      type: "object"
      properties:
        id:
          type: "string"
        direction:
          type: "string"
          enum:
          - "Inbound"
          - "Outbound"
        queueCall:
          type: "boolean"
          description: "Identifies if a call belongs to the call queue"
        from:
          type: "string"
          description: "Phone number or extension number of a caller. For GCM transport\
            \ type '_from' property should be used"
        fromName:
          type: "string"
          description: "Name of a caller"
        to:
          type: "string"
          description: "Phone number or extension number of a callee"
        toName:
          type: "string"
          description: "Name of a callee"
        startTime:
          type: "string"
          description: "Time when the call is actually started"
        telephonyStatus:
          type: "string"
          description: "Telephony presence status"
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        sipData:
          $ref: "#/components/schemas/DetailedCallInfo"
        sessionId:
          type: "string"
        telephonySessionId:
          type: "string"
          description: "Telephony identifier of a call session"
        onBehalfOf:
          type: "string"
          description: "Extension ID of the call owner on whose behalf a call is performed"
        partyId:
          type: "string"
          description: "Internal identifier of a call party"
        terminationType:
          type: "string"
        callInfo:
          $ref: "#/components/schemas/CallInfoCQ"
    PrimaryCQInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Call information to be displayed as 'Line 1' for a call queue\
            \ call session"
          enum:
          - "PhoneNumberLabel"
          - "PhoneNumber"
          - "QueueExtension"
          - "QueueName"
          - "CallerIdName"
          - "CallerIdNumber"
          - "None"
        value:
          type: "string"
          description: "Call information value"
      description: "Primary call session information. Supported for Call Queues only"
    AdditionalCQInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Call information to be displayed as 'Line 2' for a call queue\
            \ call session"
          enum:
          - "PhoneNumberLabel"
          - "PhoneNumber"
          - "QueueExtension"
          - "QueueName"
          - "CallerIdName"
          - "CallerIdNumber"
          - "None"
        value:
          type: "string"
          description: "Call information value"
      description: "Additional call session information. Supported for Call Queues\
        \ only"
    AccountPresenceInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
          description: "Canonical URI of account presence resource"
        records:
          type: "array"
          description: "List of Prompts"
          items:
            $ref: "#/components/schemas/GetPresenceInfo"
        navigation:
          $ref: "#/components/schemas/PresenceNavigationInfo"
        paging:
          $ref: "#/components/schemas/PresencePagingInfo"
    AccountPresenceEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter name"
        timestamp:
          type: "string"
          format: "date-time"
          description: "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/AccountPresenceEventBody"
    PresencePagingInfo:
      type: "object"
      description: "Information on paging"
      properties:
        page:
          type: "integer"
          format: "int32"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          format: "int32"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          format: "int32"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          format: "int32"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          format: "int32"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          format: "int32"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
    DetailedCallInfo:
      type: "object"
      properties:
        callId:
          type: "string"
        toTag:
          type: "string"
        fromTag:
          type: "string"
        remoteUri:
          format: "uri"
          type: "string"
        localUri:
          format: "uri"
          type: "string"
        rcSessionId:
          type: "string"
    GetPresenceInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
          description: "Canonical URI of a presence info resource"
        allowSeeMyPresence:
          type: "boolean"
          description: "If 'True' enables other extensions to see the extension presence\
            \ status"
        dndStatus:
          type: "string"
          description: "Extended DnD (Do not Disturb) status. Cannot be set for Department/Announcement/Voicemail\
            \ (Take Messages Only)/Fax User/Shared Lines Group/Paging Only Group/IVR\
            \ Menu/Application Extension/Park Location extensions. The 'DoNotAcceptDepartmentCalls'\
            \ and 'TakeDepartmentCallsOnly' values are applicable only for extensions\
            \ - members of a Department; if these values are set for department outsiders,\
            \ the 400 Bad Request error code is returned. The 'TakeDepartmentCallsOnly'\
            \ status can be set through the old RingCentral user interface and is\
            \ available for some migrated accounts only."
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptAnyCalls"
          - "DoNotAcceptDepartmentCalls"
          - "TakeDepartmentCallsOnly"
        extension:
          $ref: "#/components/schemas/GetPresenceExtensionInfo"
        message:
          type: "string"
          description: "Custom status message (as previously published by user)"
        pickUpCallsOnHold:
          type: "boolean"
          description: "If 'True' enables the extension user to pick up a monitored\
            \ line on hold"
        presenceStatus:
          type: "string"
          description: "Aggregated presence status, calculated from a number of sources"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        ringOnMonitoredCall:
          type: "boolean"
          description: "If 'True' enables to ring extension phone, if any user monitored\
            \ by this extension is ringing"
        telephonyStatus:
          type: "string"
          description: "Telephony presence status"
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        userStatus:
          type: "string"
          description: "User-defined presence status (as previously published by the\
            \ user)"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        meetingStatus:
          type: "string"
          description: "RingCentral Meetings presence"
          enum:
          - "Connected"
          - "Disconnected"
        activeCalls:
          type: "array"
          description: "Information on active calls"
          items:
            $ref: "#/components/schemas/ActiveCallInfo"
    CallInfoCQ:
      type: "object"
      description: "Primary/additional CQ information"
      properties:
        primary:
          $ref: "#/components/schemas/PrimaryCQInfo"
        additional:
          $ref: "#/components/schemas/AdditionalCQInfo"
    GetPresenceExtensionInfo:
      type: "object"
      description: "Information on extension, for which this presence data is returned"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          format: "uri"
          description: "Canonical URI of an extension"
        extensionNumber:
          type: "string"
          description: "Extension number (usually 3 or 4 digits)"
    AccountPresenceEventBody:
      type: "object"
      description: "Notification payload body"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension. Optional parameter"
          default: "~"
        telephonyStatus:
          type: "string"
          description: "Telephony presence status. Returned if telephony status is\
            \ changed."
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        sequence:
          type: "integer"
          format: "int32"
          description: "Order number of a notification to state the chronology"
        presenceStatus:
          type: "string"
          description: "Aggregated presence status, calculated from a number of sources"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        userStatus:
          type: "string"
          description: "User-defined presence status (as previously published by the\
            \ user)"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        dndStatus:
          type: "string"
          description: "Extended DnD (Do not Disturb) status"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptAnyCalls"
          - "DoNotAcceptDepartmentCalls"
          - "TakeDepartmentCallsOnly"
        allowSeeMyPresence:
          type: "boolean"
          description: "If 'True' enables other extensions to see the extension presence\
            \ status"
        ringOnMonitoredCall:
          type: "boolean"
          description: "If 'True' enables to ring extension phone, if any user monitored\
            \ by this extension is ringing"
        pickUpCallsOnHold:
          type: "boolean"
          description: "If 'True' enables the extension user to pick up a monitored\
            \ line on hold"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
    PresenceNavigationInfo:
      type: "object"
      description: "Information on navigation"
      properties:
        firstPage:
          $ref: "#/components/schemas/PresenceNavigationInfoURI"
        nextPage:
          $ref: "#/components/schemas/PresenceNavigationInfoURI"
        previousPage:
          $ref: "#/components/schemas/PresenceNavigationInfoURI"
        lastPage:
          $ref: "#/components/schemas/PresenceNavigationInfoURI"
    ExtensionWithRolesCollectionResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/ExtensionWithRolesResource"
    AssignedRoleResource:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a role"
        autoAssigned:
          type: "boolean"
          default: false
          description: "Specifies if a role can be auto assigned"
        displayName:
          type: "string"
          description: "Name of a default role"
        siteCompatible:
          type: "boolean"
          description: "Site compatibility flag"
        siteRestricted:
          type: "boolean"
          description: "Site restricted flag"
    ExtensionWithRolesResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        extensionId:
          type: "string"
        roles:
          type: "array"
          items:
            $ref: "#/components/schemas/AssignedRoleResource"
    MeetingRecordingInfo:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Unique identifier of a meeting instance"
        id:
          type: "string"
        contentDownloadUri:
          type: "string"
          description: "Link for downloading the recorded file (mp4, mp3 audio and\
            \ text/plain chat file)"
        contentType:
          type: "string"
          enum:
          - "video/mp4"
          - "audio/m4a"
          - "text/plain"
        size:
          type: "integer"
          format: "int32"
        startTime:
          type: "string"
          description: "Starting time of a recording"
        endTime:
          type: "string"
          description: "Ending time of a recording"
        status:
          type: "string"
          enum:
          - "Completed"
          - "Processing"
    MeetingRecordingsNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    MeetingInfo:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Unique identifier of a meeting instance"
        id:
          type: "string"
        topic:
          type: "string"
        startTime:
          type: "string"
    MeetingRecording:
      type: "object"
      properties:
        meeting:
          $ref: "#/components/schemas/MeetingInfo"
        recording:
          type: "array"
          items:
            $ref: "#/components/schemas/MeetingRecordingInfo"
    ListMeetingRecordingsResponse:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/MeetingRecording"
        paging:
          $ref: "#/components/schemas/MeetingRecordingsPagingInfo"
        navigation:
          $ref: "#/components/schemas/MeetingRecordingsNavigationInfo"
    MeetingRecordingsPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
    MeetingRecordingsNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/MeetingRecordingsNavigationInfoUri"
        nextPage:
          $ref: "#/components/schemas/MeetingRecordingsNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/MeetingRecordingsNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/MeetingRecordingsNavigationInfoUri"
    CallMonitoringGroups:
      required:
      - "navigation"
      - "paging"
      - "records"
      - "uri"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call monitoring groups resource"
        records:
          type: "array"
          description: "List of call monitoring group members"
          items:
            $ref: "#/components/schemas/CallMonitoringGroup"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    CallMonitoringGroup:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call monitoring group resource"
        id:
          type: "string"
          description: "Internal identifier of a group"
        name:
          type: "string"
          description: "Name of a group"
    CreateCallMonitoringGroupRequest:
      required:
      - "name"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of a group"
    CallMonitoringBulkAssign:
      type: "object"
      properties:
        addedExtensions:
          type: "array"
          items:
            $ref: "#/components/schemas/CallMonitoringExtensionInfo"
        updatedExtensions:
          type: "array"
          items:
            $ref: "#/components/schemas/CallMonitoringExtensionInfo"
        removedExtensions:
          type: "array"
          items:
            $ref: "#/components/schemas/CallMonitoringExtensionInfo"
    CallMonitoringExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension. Only the following extension\
            \ types are allowed: User, DigitalUser, VirtualUser, FaxUser, Limited"
        permissions:
          type: "array"
          description: "Set of call monitoring group permissions granted to the specified\
            \ extension. In order to remove the specified extension from a call monitoring\
            \ group use an empty value"
          items:
            type: "string"
            enum:
            - "Monitoring"
            - "Monitored"
    CallMonitoringGroupMemberInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call monitoring group member"
        id:
          type: "string"
          description: "Internal identifier of a call monitoring group member"
        extensionNumber:
          type: "string"
          description: "Extension number of a call monitoring group member"
        permissions:
          type: "array"
          items:
            type: "string"
            description: "Call monitoring permission; multiple values are allowed:\
              \ * `Monitoring` - User can monitor a group * `Monitored` - User can\
              \ be monitored"
            enum:
            - "Monitoring"
            - "Monitored"
    CallMonitoringGroupMemberList:
      required:
      - "navigation"
      - "paging"
      - "records"
      - "uri"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a call monitoring group members resource"
        records:
          type: "array"
          description: "List of a call monitoring group members"
          items:
            $ref: "#/components/schemas/CallMonitoringGroupMemberInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    ModifyAccountBusinessAddressRequest:
      type: "object"
      properties:
        company:
          type: "string"
          description: "Company business name"
        email:
          type: "string"
          description: "Company business email address"
        businessAddress:
          $ref: "#/components/schemas/BusinessAddressInfo"
        mainSiteName:
          type: "string"
          description: "Custom site name"
    BusinessAddressInfo:
      type: "object"
      properties:
        country:
          type: "string"
          description: "Name of a country"
        state:
          type: "string"
          description: "Name of a state/province"
        city:
          type: "string"
          description: "Name of a city"
        street:
          type: "string"
          description: "Street address"
        zip:
          type: "string"
          description: "Zip code"
      description: "Company business address"
    AccountBusinessAddressResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        businessAddress:
          $ref: "#/components/schemas/ContactBusinessAddressInfo"
        company:
          type: "string"
        email:
          type: "string"
        mainSiteName:
          type: "string"
          description: "Custom site name"
    AccountHistorySearchPublicResponse:
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of Records"
          items:
            $ref: "#/components/schemas/AccountHistoryPublicRecord"
    AccountHistoryPublicRecord:
      type: "object"
      description: ""
      properties:
        id:
          type: "string"
          description: "Internal record identifier"
          example: "9835bead-397b-4ba8-b457-73f07ab79997"
        eventTime:
          type: "string"
          description: "Timestamp of an event (provided by a client), RFC3339 date-time\
            \ format, UTC time zone."
          format: "date-time"
        initiator:
          $ref: "#/components/schemas/AccountHistoryRecordPublicInitiator"
        actionId:
          type: "string"
          description: "Action type"
          example: "CHANGE_SECRET_INFO"
        eventType:
          type: "string"
          description: "Operation: \"CREATE\", \"UPDATE\", or \"DELETE\""
          example: "UPDATE"
        accountId:
          type: "string"
          description: "Account which is related with the particular record."
          example: "403858014008"
        accountName:
          type: "string"
          description: "Account (company) name"
          example: "Some Company"
        target:
          $ref: "#/components/schemas/AccountHistoryRecordTarget"
        clientIp:
          type: "string"
          description: "IP-address of a client. If not specified RCClientIp header\
            \ value is used"
          example: "192.168.42.6"
        comment:
          type: "string"
          description: "Custom top-level comment"
        details:
          $ref: "#/components/schemas/AccountHistoryRecordPublicDetails"
    AccountHistoryRecordTarget:
      type: "object"
      description: "Action target object (company/extension)"
      properties:
        objectId:
          type: "string"
          description: "Extension identifier of the affected entity or 0 for Company\
            \ level"
          example: "404611540004"
        objectType:
          type: "string"
          description: "Type of the entity. Possible values include EXTENSION, ACCOUNT,\
            \ COMPANY, and TEMPLATE."
          example: "Extension"
          enum:
          - "Extension"
          - "Account"
          - "Company"
          - "Template"
        name:
          type: "string"
          description: "Target extension name"
          example: "Charlie Williams"
        extensionNumber:
          type: "string"
          description: "Target extension (short) number of the affected entity (if\
            \ the objectType is EXTENSION)."
          example: "103"
        siteId:
          type: "string"
          description: "Target extension site identifier (if any)"
          example: "871836004"
    AccountHistoryRecordPublicDetails:
      type: "object"
      properties:
        parameters:
          type: "array"
          description: "Event details (additional parameters)"
          items:
            $ref: "#/components/schemas/AccountHistoryRecordDetailsParameters"
    AccountHistorySearchPublicRequest:
      type: "object"
      properties:
        eventTimeFrom:
          type: "string"
          format: "date-time"
          description: "UTC formatted datetime (RFC3339)\n\n2019-10-12T07:20:50.52Z\n\
            \nDefault: current time"
        eventTimeTo:
          type: "string"
          format: "date-time"
          description: "UTC formatted datetime (RFC3339)\n\n2019-10-12T07:20:50.52Z\n\
            \nDefault: dateFrom + 24h"
        initiatorIds:
          type: "array"
          description: "List of extension IDs who is the user of changes."
          items:
            type: "string"
        page:
          type: "integer"
          example: 1
          description: "Page number of the page you want to jump to."
        perPage:
          type: "integer"
          example: 25
          description: "Number of records returned per page."
        targetIds:
          type: "array"
          example:
          - "404611540004"
          description: "List of extension IDs (users) affected by this action."
          items:
            type: "string"
        siteId:
          type: "string"
          example: "871836004"
          description: "A filter to apply by site ID"
        actionIds:
          type: "array"
          example:
          - "CHANGE_SECRET_INFO"
          description: "List of action IDs (exact keys) to search for. Or you can\
            \ use the excludeActionIds option."
          items:
            type: "string"
            enum:
            - "CHANGE_SECRET_INFO"
            - "CHANGE_USER_INFO"
        searchString:
          type: "string"
          example: "542617"
          description: "List of fields to apply search on:\n\ninitiator.name\ninitiator.role\n\
            initiator.extensionNumber\ntarget.name\ntarget.extensionNumber\ndetails.parameters.value"
        excludeActionIds:
          type: "array"
          example:
          - "CHANGE_SECRET_INFO"
          description: "List of action IDs (exact keys) to exclude from your search.\
            \ Or you can use the actionIds option."
          items:
            type: "string"
            enum:
            - "CHANGE_SECRET_INFO"
            - "CHANGE_USER_INFO"
    AccountHistoryRecordDetailsParameters:
      required:
      - "key"
      - "value"
      type: "object"
      properties:
        key:
          type: "string"
          example: "settingName"
        value:
          type: "string"
          example: "Password"
    AccountHistoryRecordPublicInitiator:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Current user extension identifier"
          example: "402539300008"
        extensionNumber:
          type: "string"
          description: "Current user extension (short) number"
          example: "101"
        name:
          type: "string"
          description: "Current user full name"
          example: "Alice Smith"
        role:
          type: "string"
          description: "Current user role"
          example: "Super Admin"
      description: "Event initiator info"
    PromptLanguageInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a prompt language"
        id:
          type: "string"
          description: "Internal identifier of a language"
        name:
          type: "string"
          description: "Language name"
        localeCode:
          type: "string"
          description: "Language locale code"
      description: "For 'TextToSpeech' mode only. Prompt language metadata"
    IVRMenuExtensionInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to an extension resource"
        id:
          type: "string"
          description: "Internal identifier of an extension"
        name:
          type: "string"
          description: "Name of an extension"
      description: "For 'Connect' or 'Voicemail' actions only. Extension reference"
    IVRMenuPromptInfo:
      type: "object"
      properties:
        mode:
          type: "string"
          description: "Prompt mode: custom media or text"
          enum:
          - "Audio"
          - "TextToSpeech"
        audio:
          $ref: "#/components/schemas/AudioPromptInfo"
        text:
          type: "string"
          description: "For 'TextToSpeech' mode only. Prompt text"
        language:
          $ref: "#/components/schemas/PromptLanguageInfo"
      description: "Prompt metadata"
    IVRMenuInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an IVR Menu extension"
        uri:
          type: "string"
          description: "Link to an IVR Menu extension resource"
        name:
          type: "string"
          description: "First name of an IVR Menu user"
        extensionNumber:
          type: "string"
          description: "Number of an IVR Menu extension"
        site:
          $ref: "#/components/schemas/IVRMenuSiteInfo"
        prompt:
          $ref: "#/components/schemas/IVRMenuPromptInfo"
        actions:
          type: "array"
          description: "Keys handling settings"
          items:
            $ref: "#/components/schemas/IVRMenuActionsInfo"
    IVRMenuActionsInfo:
      type: "object"
      properties:
        input:
          type: "string"
          description: "Key. The following values are supported: numeric: '1' to '9'\
            \ Star Hash NoInput "
        action:
          type: "string"
          description: "Internal identifier of an answering rule"
          enum:
          - "Connect"
          - "Voicemail"
          - "DialByName"
          - "Transfer"
          - "Repeat"
          - "ReturnToRoot"
          - "ReturnToPrevious"
          - "Disconnect"
          - "ReturnToTopLevelMenu"
          - "DoNothing"
          - "ConnectToOperator"
        extension:
          $ref: "#/components/schemas/IVRMenuExtensionInfo"
        phoneNumber:
          type: "string"
          description: "For 'Transfer' action only. PSTN number in E.164 format"
    AudioPromptInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a prompt audio file"
        id:
          type: "string"
          description: "Internal identifier of a prompt"
      description: "For 'Audio' mode only. Prompt media reference"
    IVRMenuSiteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a site. If the value is not specified\
            \ in request, then the `main-site` default value is used"
        name:
          type: "string"
          description: "Site name"
      description: "Site data"
    MessageTypeEnum:
      type: "string"
      description: "Type of messages to be collected"
      enum:
      - "EMail"
      - "Fax"
      - "SMS"
      - "VoiceMail"
      - "Pager"
      - "Text"
      example: "Fax"
    Error:
      type: "object"
      readOnly: true
      required:
      - "errorCode"
      - "message"
      properties:
        errorCode:
          type: "string"
          description: "Logical error code"
          readOnly: true
          example: "XYZ-123"
        message:
          type: "string"
          description: "User-friendly error message"
          readOnly: true
          example: "Something went wrong"
    CreateMessageStoreReportRequest:
      type: "object"
      properties:
        dateTo:
          type: "string"
          format: "date-time"
          description: "The end of the time range to collect message records in ISO\
            \ 8601 format including timezone.\nDefault is the current time\n"
        dateFrom:
          type: "string"
          format: "date-time"
          description: "The beginning of the time range to collect call log records\
            \ in ISO 8601 format including timezone.\nDefault is the current time\
            \ minus 24 hours\n"
        messageTypes:
          type: "array"
          description: "Types of messages to be collected. If not specified, all messages\
            \ without message type filtering will be returned. Multiple values are\
            \ accepted"
          items:
            $ref: "#/components/schemas/MessageTypeEnum"
          example:
          - "Fax"
          - "VoiceMail"
    ErrorResource:
      type: "object"
      required:
      - "errors"
      properties:
        errors:
          type: "array"
          minItems: 1
          items:
            $ref: "#/components/schemas/Error"
    MessageStoreReport:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a message store report task"
          example: "400142200026-400142200026-bd162f24028442489385eb3f44c18354"
        uri:
          type: "string"
          format: "uri"
          description: "Canonical URI of a task"
        status:
          type: "string"
          description: "Status of a message store report task"
          enum:
          - "Accepted"
          - "Pending"
          - "InProgress"
          - "AttemptFailed"
          - "Failed"
          - "Completed"
          - "Cancelled"
        accountId:
          type: "string"
          description: "Internal identifier of an account"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        dateTo:
          type: "string"
          format: "date-time"
          description: "The end of the time range to collect message records in ISO\
            \ 8601 format including timezone"
        dateFrom:
          type: "string"
          format: "date-time"
          description: "The beginning of the time range to collect call log records\
            \ in ISO 8601 format including timezone"
        startTime:
          type: "string"
          format: "date-time"
          description: "The time when this task was started"
        finishTime:
          type: "string"
          format: "date-time"
          description: "The time when this task was finished"
        messageTypes:
          type: "array"
          description: "Type of messages to be collected."
          items:
            $ref: "#/components/schemas/MessageTypeEnum"
          example:
          - "Fax"
          - "VoiceMail"
    MessageStoreReportArchive:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/ArchiveInfo"
    ArchiveInfo:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
          description: "Archive size in bytes"
          example: 201412
        uri:
          type: "string"
          format: "uri"
          description: "Link for archive download"
    AccountResource:
      type: "object"
      properties:
        companyName:
          type: "string"
        federatedName:
          type: "string"
        id:
          type: "string"
        mainNumber:
          $ref: "#/components/schemas/PhoneNumberResource"
    CompanyContactsPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          format: "int32"
        totalPages:
          type: "integer"
          format: "int32"
        perPage:
          type: "integer"
          format: "int32"
        totalElements:
          type: "integer"
          format: "int32"
        pageStart:
          type: "integer"
          format: "int32"
        pageEnd:
          type: "integer"
          format: "int32"
    ADGError:
      type: "object"
      properties:
        errorCode:
          type: "string"
          description: "Code that characterizes this error. Code uniqly identifies\
            \ the source of the error."
          readOnly: true
          enum:
          - "ErrorCode{code='ADG-000', httpStatus=503, description='Service temporary\
            \ unavailable.'}"
          - "ErrorCode{code='ADG-010', httpStatus=503, description='Federation data\
            \ temporary unavailable.'}"
          - "ErrorCode{code='ADG-001', httpStatus=500, description='Service internal\
            \ error.'}"
          - "ErrorCode{code='ADG-100', httpStatus=403, description='Insufficient permissions.'}"
          - "ErrorCode{code='ADG-101', httpStatus=403, description='Unauthorized access.'}"
          - "ErrorCode{code='ADG-102', httpStatus=405, description='Method not allowed.'}"
          - "ErrorCode{code='ADG-111', httpStatus=400, description='Need Content-Type\
            \ header.'}"
          - "ErrorCode{code='ADG-112', httpStatus=400, description='Request body is\
            \ invalid.'}"
          - "ErrorCode{code='ADG-121', httpStatus=400, description='Parameter [${paramName}]is\
            \ invalid. ${additionalInfo:-}'}"
          - "ErrorCode{code='ADG-115', httpStatus=415, description='Unsupported Media\
            \ Type.'}"
          - "ErrorCode{code='ADG-105', httpStatus=404, description='Current account\
            \ is not linked to any federation.'}"
          - "ErrorCode{code='ADG-107', httpStatus=404, description='Account not found.'}"
          - "ErrorCode{code='ADG-122', httpStatus=404, description='Contact not found.'}"
          - "ErrorCode{code='ADG-200', httpStatus=404, description='Invalid URI'}"
        message:
          type: "string"
          description: "Message that describes the error. This message can be used\
            \ in UI."
          readOnly: true
      description: "Description of an error occurred during request processing. This\
        \ data type can be used only in readonly mode, no writing is allowed"
    BusinessSiteResource:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        code:
          type: "string"
    DirectoryResource:
      type: "object"
      properties:
        paging:
          $ref: "#/components/schemas/CompanyContactsPagingInfo"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/ContactResource"
    PhoneNumberResource:
      type: "object"
      properties:
        formattedPhoneNumber:
          type: "string"
        phoneNumber:
          type: "string"
        type:
          type: "string"
        label:
          type: "string"
          description: "Custom user name of a phone number, if any"
        usageType:
          type: "string"
          description: "Usage type of a phone number"
          enum:
          - "MobileNumber"
          - "ContactNumber"
          - "DirectNumber"
          - "ForwardedNumber"
        hidden:
          type: "boolean"
          description: "Specifies if a phone number should be hidden or not"
        primary:
          type: "boolean"
          description: "Specifies if the number is primary, i.e. displayed as 'main\
            \ number' and called by default"
    UserCustomFieldResource:
      type: "object"
      properties:
        id:
          type: "string"
        value:
          type: "string"
    AccountDirectoryProfileImageResource:
      type: "object"
      properties:
        etag:
          type: "string"
        uri:
          type: "string"
    ADGErrorResponse:
      type: "object"
      properties:
        errors:
          type: "array"
          description: "Collection of all gathered errors"
          readOnly: true
          items:
            $ref: "#/components/schemas/ADGError"
      description: "Format of response in case that any error occurred during request\
        \ processing"
    ContactResource:
      type: "object"
      properties:
        account:
          $ref: "#/components/schemas/AccountResource"
        department:
          type: "string"
        email:
          type: "string"
        extensionNumber:
          type: "string"
        firstName:
          type: "string"
          description: "First name of a contact, for user extensions only"
        lastName:
          type: "string"
          description: "Last name of a contact, for user extensions only"
        name:
          type: "string"
          description: "Name of a contact, for non-user extensions"
        id:
          type: "string"
        jobTitle:
          type: "string"
        phoneNumbers:
          type: "array"
          items:
            $ref: "#/components/schemas/PhoneNumberResource"
        profileImage:
          $ref: "#/components/schemas/AccountDirectoryProfileImageResource"
        site:
          $ref: "#/components/schemas/BusinessSiteResource"
        status:
          type: "string"
        type:
          type: "string"
        customFields:
          type: "array"
          items:
            $ref: "#/components/schemas/UserCustomFieldResource"
    OrderBy:
      type: "object"
      properties:
        index:
          type: "integer"
          description: "Sorting priority index, starting from '1'. Optional if only\
            \ one element in `orderBy` array is specified"
        fieldName:
          type: "string"
          description: "Field name by which to sort the contacts"
          enum:
          - "firstName"
          - "lastName"
          - "extensionNumber"
          - "phoneNumber"
          - "email"
          - "jobTitle"
          - "department"
        direction:
          type: "string"
          description: "Sorting direction"
          enum:
          - "Asc"
          - "Desc"
    SearchDirectoryEntriesRequest:
      type: "object"
      properties:
        searchString:
          type: "string"
          description: "String value to filter the contacts. The value specified is\
            \ searched through the following fields: `firstName`, `lastName`, `extensionNumber`,\
            \ `phoneNumber`, `email`, `jobTitle`, `department`"
        searchFields:
          type: "array"
          items:
            type: "string"
            enum:
            - "firstName"
            - "lastName"
            - "extensionNumber"
            - "phoneNumber"
            - "email"
            - "jobTitle"
            - "department"
        showFederated:
          type: "boolean"
          description: "If 'True' then contacts of all accounts in federation are\
            \ returned. If 'False' then only contacts of the current account are returned,\
            \ and account section is eliminated in this case"
          default: true
        extensionType:
          type: "string"
          description: "Type of extension to filter the contacts. Please note that\
            \ legacy 'Department' extension type corresponds to 'Call Queue' extensions\
            \ in modern RingCentral product terminology"
          enum:
          - "User"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "ParkLocation"
          - "IvrMenu"
          - "Limited"
          - "ApplicationExtension"
          - "Site"
          - "Bot"
          - "ProxyAdmin"
          - "DelegatedLinesGroup"
          - "GroupCallPickup"
          - "Room"
        orderBy:
          type: "array"
          description: "Sorting settings"
          items:
            $ref: "#/components/schemas/OrderBy"
        page:
          type: "integer"
        perPage:
          type: "integer"
    FederationResource:
      type: "object"
      properties:
        accounts:
          type: "array"
          items:
            $ref: "#/components/schemas/FederatedAccountResource"
        creationTime:
          type: "string"
        displayName:
          type: "string"
        id:
          type: "string"
        lastModifiedTime:
          type: "string"
    FederatedAccountResource:
      type: "object"
      properties:
        companyName:
          type: "string"
        conflictCount:
          type: "integer"
          format: "int32"
        federatedName:
          type: "string"
        id:
          type: "string"
        linkCreationTime:
          type: "string"
        mainNumber:
          $ref: "#/components/schemas/PhoneNumberResource"
    PagingGroupExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a paging group user extension"
        uri:
          type: "string"
          description: "Link to a paging group user extension"
        extensionNumber:
          type: "string"
          description: "Extension number of a paging group user"
        name:
          type: "string"
          description: "Name of a paging group user"
    PagingOnlyGroupUsers:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of users allowed to page the Paging Only\
            \ group"
        records:
          type: "array"
          description: "List of users allowed to page the Paging Only group"
          items:
            $ref: "#/components/schemas/PagingGroupExtensionInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    EditPagingGroupRequest:
      type: "object"
      properties:
        addedUserIds:
          type: "array"
          description: "List of users that will be allowed to page a group specified"
          items:
            type: "string"
        removedUserIds:
          type: "array"
          description: "List of users that will be disallowed to page a group specified"
          items:
            type: "string"
        addedDeviceIds:
          type: "array"
          description: "List of account devices that will be assigned to a paging\
            \ group specified"
          items:
            type: "string"
        removedDeviceIds:
          type: "array"
          description: "List of account devices that will be unassigned from a paging\
            \ group specified"
          items:
            type: "string"
    PagingOnlyGroupDevices:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of devices assigned to the paging only group"
        records:
          type: "array"
          description: "List of paging devices assigned to this group"
          items:
            $ref: "#/components/schemas/PagingDeviceInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    PagingDeviceInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a paging device"
        uri:
          type: "string"
          description: "Link to a paging device resource"
        name:
          type: "string"
          description: "Name of a paging device"
    GetCallRecordingResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a call recording"
        contentUri:
          type: "string"
          description: "Link to a call recording binary content"
        contentType:
          type: "string"
          description: "Call recording file format. Supported format is audio/x-wav"
        duration:
          type: "integer"
          description: "Recorded call duration"
    MessageStoreConfiguration:
      type: "object"
      properties:
        retentionPeriod:
          maximum: 90.0
          minimum: 7
          type: "integer"
          description: "Retention policy setting, specifying how long to keep messages;\
            \ the supported value range is 7-90 days"
    CustomCompanyGreetingLanguageInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a greeting language"
        uri:
          type: "string"
          description: "Link to a greeting language"
        name:
          type: "string"
          description: "Name of a greeting language"
        localeCode:
          type: "string"
          description: "Locale code of a greeting language"
      description: "Information on a greeting language. Supported for types 'StopRecording',\
        \ 'StartRecording', 'AutomaticRecording'"
    CustomCompanyGreetingInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to an extension custom greeting"
        id:
          type: "string"
          description: "Internal identifier of an answering rule"
        type:
          type: "string"
          description: "Type of a company greeting"
          enum:
          - "Company"
          - "StartRecording"
          - "StopRecording"
          - "AutomaticRecording"
        contentType:
          type: "string"
          description: "Content media type"
          enum:
          - "audio/mpeg"
          - "audio/wav"
        contentUri:
          type: "string"
          description: "Link to a greeting content (audio file)"
        answeringRule:
          $ref: "#/components/schemas/CustomGreetingAnsweringRuleInfo"
        language:
          $ref: "#/components/schemas/CustomCompanyGreetingLanguageInfo"
    CustomGreetingAnsweringRuleInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of an answering rule"
        id:
          type: "string"
          description: "Internal identifier of an answering rule"
      description: "Information on an answering rule that the greeting is applied\
        \ to"
    RoleResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
        displayName:
          maxLength: 128
          minLength: 0
          pattern: "^((?!(<|>|\\/|\\\")).)*$"
          type: "string"
        description:
          maxLength: 2000
          minLength: 0
          pattern: "^((?!(<|>|\\/|\\\")).)*$"
          type: "string"
        siteCompatible:
          type: "boolean"
          description: "Site compatibility of a user role"
        custom:
          type: "boolean"
          default: false
        scope:
          type: "string"
        hidden:
          type: "boolean"
          default: false
        lastUpdated:
          type: "string"
          format: "date-time"
        permissions:
          type: "array"
          items:
            $ref: "#/components/schemas/PermissionIdResource"
    RNPNavigationInfo:
      type: "object"
      properties:
        nextPage:
          $ref: "#/components/schemas/RNPNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/RNPNavigationInfoUri"
        firstPage:
          $ref: "#/components/schemas/RNPNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/RNPNavigationInfoUri"
    RolesCollectionResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
          xml:
            attribute: true
        records:
          type: "array"
          xml:
            name: "records"
            wrapped: true
          items:
            $ref: "#/components/schemas/RoleResource"
        paging:
          $ref: "#/components/schemas/RNPPagingInfo"
        navigation:
          $ref: "#/components/schemas/RNPNavigationInfo"
      xml:
        name: "collectionResource"
    PermissionIdResource:
      type: "object"
      properties:
        uri:
          type: "string"
        id:
          type: "string"
        siteCompatible:
          type: "string"
          description: "Site compatibility flag set for permission"
          enum:
          - "Compatible"
          - "Incompatible"
          - "Independent"
        readOnly:
          type: "boolean"
          description: "Specifies if the permission is editable on UI (if set to 'True')\
            \ or not (if set to 'False')"
        assignable:
          type: "boolean"
          description: "Specifies if the permission can be assigned by the account\
            \ administrator"
    RNPNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
    RNPPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          format: "int32"
        totalPages:
          type: "integer"
          format: "int32"
        perPage:
          type: "integer"
          format: "int32"
        totalElements:
          type: "integer"
          format: "int32"
        pageStart:
          type: "integer"
          format: "int32"
        pageEnd:
          type: "integer"
          format: "int32"
    DefaultUserRoleRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user role to be set as default"
    BulkRoleAssignResource:
      type: "object"
      properties:
        siteRestricted:
          type: "boolean"
          example: true
        siteCompatible:
          type: "boolean"
        uri:
          type: "string"
          format: "uri"
        addedExtensionIds:
          type: "array"
          items:
            type: "string"
        removedExtensionIds:
          type: "array"
          items:
            type: "string"
    PermissionInfoAdmin:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Specifies if a permission is enabled or not"
      description: "Admin permission"
    ProfileImageInfoURI:
      type: "object"
      properties:
        uri:
          type: "string"
    ExtensionPermissions:
      type: "object"
      properties:
        admin:
          $ref: "#/components/schemas/PermissionInfoAdmin"
        internationalCalling:
          $ref: "#/components/schemas/PermissionInfoInt"
      description: "Extension permissions, corresponding to the Service Web permissions\
        \ 'Admin' and 'InternationalCalling'"
    ContactInfoCreationRequest:
      type: "object"
      properties:
        firstName:
          type: "string"
          description: "For User extension type only. Extension user first name"
        lastName:
          type: "string"
          description: "For User extension type only. Extension user last name"
        company:
          type: "string"
          description: "Extension user company name"
        jobTitle:
          type: "string"
        email:
          type: "string"
          description: "Email of extension user"
        businessPhone:
          type: "string"
          description: "Extension user contact phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format"
        mobilePhone:
          type: "string"
          description: "Extension user mobile (**non** Toll Free) phone number in\
            \ [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign)\
            \ format"
        businessAddress:
          $ref: "#/components/schemas/ContactBusinessAddressInfo"
        emailAsLoginName:
          type: "boolean"
          description: " If 'True' then contact email is enabled as login name for\
            \ this user. Please note that email should be unique in this case. The\
            \ default value is 'False'"
        pronouncedName:
          $ref: "#/components/schemas/PronouncedNameInfo"
        department:
          type: "string"
          description: "Extension user department, if any"
      description: "Contact Information"
    CallQueueExtensionInfo:
      type: "object"
      properties:
        slaGoal:
          type: "integer"
          description: "Target percentage of calls that must be answered by agents\
            \ within the service level time threshold"
        slaThresholdSeconds:
          type: "integer"
          description: "Period of time in seconds that is considered to be an acceptable\
            \ service level"
        includeAbandonedCalls:
          type: "boolean"
          description: "If 'True' abandoned calls (hanged up prior to being served)\
            \ are included into service level calculation"
        abandonedThresholdSeconds:
          type: "integer"
          description: "Period of time in seconds specifying abandoned calls duration\
            \ - calls that are shorter will not be included into the calculation of\
            \ service level.; zero value means that abandoned calls of any duration\
            \ will be included into calculation"
      description: "For Call Queue extension type only. Please note that legacy 'Department'\
        \ extension type corresponds to 'Call Queue' extensions in modern RingCentral\
        \ product terminology"
    ProfileImageInfo:
      required:
      - "uri"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a profile image. If an image is not uploaded for an\
            \ extension, only uri is returned"
        etag:
          type: "string"
          description: "Identifier of an image"
        lastModified:
          type: "string"
          description: "The datetime when an image was last updated in ISO 8601 format,\
            \ for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        contentType:
          type: "string"
          description: "The type of an image"
        scales:
          type: "array"
          description: "List of URIs to profile images in different dimensions"
          items:
            $ref: "#/components/schemas/ProfileImageInfoURI"
      description: "Information on profile image"
    PermissionInfoInt:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Specifies if a permission is enabled or not"
      description: "International Calling permission"
    OperatorInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an operator"
        uri:
          type: "string"
          description: "Link to an operator resource"
        extensionNumber:
          type: "string"
          description: "Extension number (pin)"
        name:
          type: "string"
          description: "Operator extension user full name"
      description: "Site Fax/SMS recipient (operator) reference. Multi-level IVR should\
        \ be enabled"
    ExtensionCreationResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of an extension"
          format: "int64"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        contact:
          $ref: "#/components/schemas/ContactInfo"
        customFields:
          type: "array"
          items:
            $ref: "#/components/schemas/CustomFieldInfo"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        name:
          type: "string"
          description: "Extension name. For user extension types the value is a combination\
            \ of the specified first name and last name"
        partnerId:
          type: "string"
          description: "For Partner Applications Internal identifier of an extension\
            \ created by partner. The RingCentral supports the mapping of accounts\
            \ and stores the corresponding account ID/extension ID for each partner\
            \ ID of a client application. In request URIs partner IDs are accepted\
            \ instead of regular RingCentral native IDs as path parameters using pid\
            \ = XXX clause. Though in response URIs contain the corresponding account\
            \ IDs and extension IDs. In all request and response bodies these values\
            \ are reflected via partnerId attributes of account and extension"
        permissions:
          $ref: "#/components/schemas/ExtensionPermissions"
        profileImage:
          $ref: "#/components/schemas/ProfileImageInfo"
        references:
          type: "array"
          description: "List of non-RC internal identifiers assigned to an extension"
          items:
            $ref: "#/components/schemas/ReferenceInfo"
        regionalSettings:
          $ref: "#/components/schemas/RegionalSettings"
        serviceFeatures:
          type: "array"
          description: "Extension service features returned in response only when\
            \ the logged-in user requests his/her own extension info, see also Extension\
            \ Service Features"
          items:
            $ref: "#/components/schemas/ExtensionServiceFeatureInfo"
        setupWizardState:
          type: "string"
          description: "Specifies extension configuration wizard state (web service\
            \ setup). The default value is 'NotStarted'"
          enum:
          - "NotStarted"
          - "Incomplete"
          - "Completed"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        status:
          type: "string"
          description: "Extension current state. If 'Unassigned' is specified, then\
            \ extensions without ‘extensionNumber’ are returned. If not specified,\
            \ then all extensions are returned"
          enum:
          - "Enabled"
          - "Disabled"
          - "Frozen"
          - "NotActivated"
          - "Unassigned"
        statusInfo:
          $ref: "#/components/schemas/ExtensionStatusInfo"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "ParkLocation"
          - "Limited"
        hidden:
          type: "boolean"
          description: "Hides extension from showing in company directory. Supported\
            \ for extensions of User type only"
    ExtensionServiceFeatureInfo:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Feature status; shows feature availability for an extension"
        featureName:
          type: "string"
          description: "Feature name"
          enum:
          - "AccountFederation"
          - "Archiver"
          - "AutomaticCallRecordingMute"
          - "AutomaticInboundCallRecording"
          - "AutomaticOutboundCallRecording"
          - "BlockedMessageForwarding"
          - "Calendar"
          - "CallerIdControl"
          - "CallForwarding"
          - "CallPark"
          - "CallParkLocations"
          - "CallSupervision"
          - "CallSwitch"
          - "CallQualitySurvey"
          - "Conferencing"
          - "ConferencingNumber"
          - "ConfigureDelegates"
          - "DeveloperPortal"
          - "DND"
          - "DynamicConference"
          - "EmergencyAddressAutoUpdate"
          - "EmergencyCalling"
          - "EncryptionAtRest"
          - "ExternalDirectoryIntegration"
          - "Fax"
          - "FaxReceiving"
          - "FreeSoftPhoneLines"
          - "HDVoice"
          - "HipaaCompliance"
          - "Intercom"
          - "InternationalCalling"
          - "InternationalSMS"
          - "LinkedSoftphoneLines"
          - "MMS"
          - "MobileVoipEmergencyCalling"
          - "OnDemandCallRecording"
          - "Pager"
          - "PagerReceiving"
          - "Paging"
          - "PasswordAuth"
          - "PromoMessage"
          - "Reports"
          - "Presence"
          - "RCTeams"
          - "RingOut"
          - "SalesForce"
          - "SharedLines"
          - "SingleExtensionUI"
          - "SiteCodes"
          - "SMS"
          - "SMSReceiving"
          - "SoftPhoneUpdate"
          - "TelephonySessions"
          - "UserManagement"
          - "VideoConferencing"
          - "VoipCalling"
          - "VoipCallingOnMobile"
          - "Voicemail"
          - "VoicemailToText"
          - "WebPhone"
        reason:
          type: "string"
          description: "Reason for limitation of a particular service feature. Returned\
            \ only if the enabled parameter value is 'False', see Service Feature\
            \ Limitations and Reasons. When retrieving service features for an extension,\
            \ the reasons for the limitations, if any, are returned in response"
    ExtensionCreationRequest:
      type: "object"
      properties:
        contact:
          $ref: "#/components/schemas/ContactInfoCreationRequest"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        customFields:
          type: "array"
          items:
            $ref: "#/components/schemas/CustomFieldInfo"
        password:
          type: "string"
          description: "Password for extension. If not specified, the password is\
            \ auto-generated"
        references:
          type: "array"
          description: "List of non-RC internal identifiers assigned to an extension"
          items:
            $ref: "#/components/schemas/ReferenceInfo"
        regionalSettings:
          $ref: "#/components/schemas/RegionalSettings"
        partnerId:
          type: "string"
          description: "Additional extension identifier, created by partner application\
            \ and applied on client side"
        ivrPin:
          type: "string"
          description: "IVR PIN"
        setupWizardState:
          type: "string"
          description: "Specifies extension configuration wizard state (web service\
            \ setup)."
          default: "NotStarted"
          enum:
          - "NotStarted"
          - "Incomplete"
          - "Completed"
        site:
          $ref: "#/components/schemas/SiteInfo"
        status:
          type: "string"
          description: "Extension current state"
          enum:
          - "Enabled"
          - "Disabled"
          - "NotActivated"
          - "Unassigned"
          - "Frozen"
        statusInfo:
          $ref: "#/components/schemas/ExtensionStatusInfo"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "ParkLocation"
          - "Limited"
        hidden:
          type: "boolean"
          description: "Hides extension from showing in company directory. Supported\
            \ for extensions of User type only. For unassigned extensions the value\
            \ is set to 'True' by default. For assigned extensions the value is set\
            \ to 'False' by default"
    GetExtensionListResponse:
      required:
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the extension list resource"
        records:
          type: "array"
          description: "List of extensions with extension information"
          items:
            $ref: "#/components/schemas/GetExtensionListInfoResponse"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    ExtensionListEventBody:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        eventType:
          type: "string"
          description: "Type of extension info change"
          enum:
          - "Create"
          - "Update"
          - "Delete"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
      description: "Notification payload body"
    RegionalSettings:
      type: "object"
      properties:
        homeCountry:
          $ref: "#/components/schemas/CountryInfo"
        timezone:
          $ref: "#/components/schemas/TimezoneInfo"
        language:
          $ref: "#/components/schemas/RegionalLanguageInfo"
        greetingLanguage:
          $ref: "#/components/schemas/GreetingLanguageInfo"
        formattingLocale:
          $ref: "#/components/schemas/FormattingLocaleInfo"
        timeFormat:
          type: "string"
          description: "Time format setting. The default value is '12h' = ['12h',\
            \ '24h']"
          enum:
          - "12h"
          - "24h"
      description: "Regional data (timezone, home country, language) of an extension/account.\
        \ The default is Company (Auto-Receptionist) settings"
    SiteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a site extension"
        uri:
          type: "string"
          description: "Link to a site resource"
        name:
          type: "string"
          description: "Extension user first name"
        extensionNumber:
          type: "string"
          description: "Extension number"
        callerIdName:
          type: "string"
          description: "Custom name of a caller. Max number of characters is 15 (only\
            \ alphabetical symbols, numbers and commas are supported)"
        email:
          type: "string"
          description: "Extension user email"
        businessAddress:
          $ref: "#/components/schemas/ContactBusinessAddressInfo"
        regionalSettings:
          $ref: "#/components/schemas/RegionalSettings"
        operator:
          $ref: "#/components/schemas/OperatorInfo"
        code:
          type: "string"
          description: "Site code value. Returned only if specified"
    ExtensionListEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter URI"
        timestamp:
          type: "string"
          description: "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/ExtensionListEventBody"
    ContactInfo:
      type: "object"
      properties:
        firstName:
          type: "string"
          description: "For User extension type only. Extension user first name"
        lastName:
          type: "string"
          description: "For User extension type only. Extension user last name"
        name:
          type: "string"
          description: "Extension user name (first name and last name)"
        company:
          type: "string"
          description: "Extension user company name"
        jobTitle:
          type: "string"
        email:
          type: "string"
          description: "Email of extension user"
        businessPhone:
          type: "string"
          description: "Extension user contact phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ (with '+' sign) format"
        mobilePhone:
          type: "string"
          description: "Extension user mobile (**non** Toll Free) phone number in\
            \ [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign)\
            \ format"
        businessAddress:
          $ref: "#/components/schemas/ContactBusinessAddressInfo"
        emailAsLoginName:
          type: "boolean"
          description: "If 'True' then contact email is enabled as login name for\
            \ this user. Please note that email should be unique in this case."
          default: false
        pronouncedName:
          $ref: "#/components/schemas/PronouncedNameInfo"
        department:
          type: "string"
          description: "Extension user department, if any"
      description: "Contact detailed information"
    GetExtensionListInfoResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of an extension"
          format: "int64"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        contact:
          $ref: "#/components/schemas/ContactInfo"
        extensionNumber:
          type: "string"
          description: "Number of an extension"
        name:
          type: "string"
          description: "Extension name. For user extension types the value is a combination\
            \ of the specified first name and last name"
        permissions:
          $ref: "#/components/schemas/ExtensionPermissions"
        profileImage:
          $ref: "#/components/schemas/ProfileImageInfo"
        status:
          type: "string"
          description: "Extension current state. If 'Unassigned' is specified, then\
            \ extensions without ‘extensionNumber’ are returned. If not specified,\
            \ then all extensions are returned"
          enum:
          - "Enabled"
          - "Disabled"
          - "Frozen"
          - "NotActivated"
          - "Unassigned"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "FaxUser"
          - "FlexibleUser"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ApplicationExtension"
          - "ParkLocation"
          - "Bot"
          - "Room"
          - "Limited"
          - "Site"
          - "ProxyAdmin"
          - "DelegatedLinesGroup"
          - "GroupCallPickup"
        subType:
          type: "string"
          description: "Extension sub-type, if applicable. For any unsupported sub-types\
            \ the 'Unknown' value will be returned"
          enum:
          - "VideoPro"
          - "VideoProPlus"
          - "DigitalSignage"
          - "Unknown"
        callQueueInfo:
          $ref: "#/components/schemas/CallQueueExtensionInfo"
        hidden:
          type: "boolean"
          description: "Hides extension from showing in company directory. Supported\
            \ for extensions of User type only"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
    ExtensionInfoEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter URI"
        timestamp:
          type: "string"
          description: "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/ExtensionInfoEventBody"
    GetExtensionAccountInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an account"
        uri:
          type: "string"
          description: "Canonical URI of an account"
      description: "Account information"
    AutomaticLocationUpdatesSiteInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a site"
    DepartmentInfo:
      type: "object"
      description: "Please note that legacy 'Department' extension type corresponds\
        \ to 'Call Queue' extensions in modern RingCentral product terminology"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a department extension"
        uri:
          type: "string"
          description: "Canonical URI of a department extension"
        extensionNumber:
          type: "string"
          description: "Number of a department extension"
    ExtensionInfoEventBody:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        eventType:
          type: "string"
          description: "Type of extension info change"
          enum:
          - "Update"
          - "Delete"
        hints:
          type: "array"
          description: "Returned for 'Update' event type only"
          items:
            type: "string"
            enum:
            - "AccountSettings"
            - "AccountStatus"
            - "AnsweringRules"
            - "CompanyNumbers"
            - "DialingPlan"
            - "ExtensionInfo"
            - "Features"
            - "Limits"
            - "Permissions"
            - "ProfileImage"
            - "VideoConfiguration"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
      description: "Notification payload body"
    ExtensionUpdateRequest:
      type: "object"
      properties:
        status:
          type: "string"
          enum:
          - "Disabled"
          - "Enabled"
          - "NotActivated"
          - "Frozen"
        statusInfo:
          $ref: "#/components/schemas/ExtensionStatusInfo"
        reason:
          type: "string"
          description: "Type of suspension"
        comment:
          type: "string"
          description: "Free Form user comment"
        extensionNumber:
          type: "string"
          description: "Extension number available"
        contact:
          $ref: "#/components/schemas/ContactInfoUpdateRequest"
        regionalSettings:
          $ref: "#/components/schemas/ExtensionRegionalSettingRequest"
        setupWizardState:
          type: "string"
          enum:
          - "NotStarted"
          - "Incomplete"
          - "Completed"
        partnerId:
          type: "string"
          description: "Additional extension identifier, created by partner application\
            \ and applied on client side"
        ivrPin:
          type: "string"
          description: "IVR PIN"
        password:
          type: "string"
          description: "Password for extension"
        callQueueInfo:
          $ref: "#/components/schemas/CallQueueInfoRequest"
        transition:
          $ref: "#/components/schemas/UserTransitionInfo"
        customFields:
          type: "array"
          items:
            $ref: "#/components/schemas/CustomFieldInfo"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfoRequest"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "Fax User"
          - "FlexibleUser"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ApplicationExtension"
          - "ParkLocation"
          - "DelegatedLinesGroup"
          - "GroupCallPickup"
        subType:
          type: "string"
          description: "Extension sub-type, if applicable. For any unsupported sub-types\
            \ the 'Unknown' value will be returned"
          enum:
          - "VideoPro"
          - "VideoProPlus"
          - "DigitalSignage"
          - "Unknown"
        references:
          type: "array"
          description: "List of non-RC internal identifiers assigned to an extension"
          items:
            $ref: "#/components/schemas/ReferenceInfo"
    GetExtensionInfoResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of an extension"
          format: "int64"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        account:
          $ref: "#/components/schemas/GetExtensionAccountInfo"
        contact:
          $ref: "#/components/schemas/ContactInfo"
        customFields:
          type: "array"
          items:
            $ref: "#/components/schemas/CustomFieldInfo"
        departments:
          type: "array"
          description: "Information on department extension(s), to which the requested\
            \ extension belongs. Returned only for user extensions, members of department,\
            \ requested by single extensionId. Please note that legacy 'Department'\
            \ extension type corresponds to 'Call Queue' extensions in modern RingCentral\
            \ product terminology"
          items:
            $ref: "#/components/schemas/DepartmentInfo"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        extensionNumbers:
          type: "array"
          items:
            type: "string"
        name:
          type: "string"
          description: "Extension name. For user extension types the value is a combination\
            \ of the specified first name and last name"
        partnerId:
          type: "string"
          description: "For Partner Applications Internal identifier of an extension\
            \ created by partner. The RingCentral supports the mapping of accounts\
            \ and stores the corresponding account ID/extension ID for each partner\
            \ ID of a client application. In request URIs partner IDs are accepted\
            \ instead of regular RingCentral native IDs as path parameters using pid\
            \ = XXX clause. Though in response URIs contain the corresponding account\
            \ IDs and extension IDs. In all request and response bodies these values\
            \ are reflected via partnerId attributes of account and extension"
        permissions:
          $ref: "#/components/schemas/ExtensionPermissions"
        profileImage:
          $ref: "#/components/schemas/ProfileImageInfo"
        references:
          type: "array"
          description: "List of non-RC internal identifiers assigned to an extension"
          items:
            $ref: "#/components/schemas/ReferenceInfo"
        roles:
          type: "array"
          items:
            $ref: "#/components/schemas/Roles"
        regionalSettings:
          $ref: "#/components/schemas/RegionalSettings"
        serviceFeatures:
          type: "array"
          description: "Extension service features returned in response only when\
            \ the logged-in user requests his/her own extension info, see also Extension\
            \ Service Features"
          items:
            $ref: "#/components/schemas/ExtensionServiceFeatureInfo"
        setupWizardState:
          type: "string"
          description: "Specifies extension configuration wizard state (web service\
            \ setup)."
          default: "NotStarted"
          enum:
          - "NotStarted"
          - "Incomplete"
          - "Completed"
        status:
          type: "string"
          description: "Extension current state. If 'Unassigned' is specified, then\
            \ extensions without ‘extensionNumber’ are returned. If not specified,\
            \ then all extensions are returned"
          enum:
          - "Enabled"
          - "Disabled"
          - "Frozen"
          - "NotActivated"
          - "Unassigned"
        statusInfo:
          $ref: "#/components/schemas/ExtensionStatusInfo"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "FaxUser"
          - "FlexibleUser"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ApplicationExtension"
          - "ParkLocation"
          - "Bot"
          - "Room"
          - "Limited"
          - "Site"
          - "ProxyAdmin"
          - "DelegatedLinesGroup"
          - "GroupCallPickup"
        subType:
          type: "string"
          description: "Extension sub-type, if applicable. For any unsupported sub-types\
            \ the 'Unknown' value will be returned"
          enum:
          - "VideoPro"
          - "VideoProPlus"
          - "DigitalSignage"
          - "Unknown"
        callQueueInfo:
          $ref: "#/components/schemas/CallQueueExtensionInfo"
        hidden:
          type: "boolean"
          description: "Hides extension from showing in company directory. Supported\
            \ for extensions of User type only"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
    Roles:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
          description: "Link to a role"
        id:
          type: "string"
          description: "Internal identifier of a role"
        autoAssigned:
          type: "boolean"
          default: false
        displayName:
          type: "string"
        siteCompatible:
          type: "boolean"
        siteRestricted:
          type: "boolean"
    GetUserBusinessHoursResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a business-hours resource"
        schedule:
          $ref: "#/components/schemas/ScheduleInfoUserBusinessHours"
      example:
        uri: "https.../restapi/v1.0/account/401800045008/extension/401800045008/business-hours"
        schedule:
          weeklyRanges:
            wednesday:
            - from: "09:00"
              to: 1080
            friday:
            - from: "09:00"
              to: 1080
            tuesday:
            - from: "09:00"
              to: 1080
            monday:
            - from: "09:00"
              to: 1080
            thursday:
            - from: "09:00"
              to: 1080
    UserBusinessHoursScheduleInfo:
      type: "object"
      properties:
        weeklyRanges:
          $ref: "#/components/schemas/WeeklyScheduleInfo"
      description: "Schedule when an answering rule is applied"
    ScheduleInfoUserBusinessHours:
      type: "object"
      properties:
        weeklyRanges:
          $ref: "#/components/schemas/WeeklyScheduleInfo"
      description: "Schedule when an answering rule is applied"
    UserBusinessHoursUpdateResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a business-hours resource"
        schedule:
          $ref: "#/components/schemas/UserBusinessHoursScheduleInfo"
    UserBusinessHoursUpdateRequest:
      type: "object"
      properties:
        schedule:
          $ref: "#/components/schemas/UserBusinessHoursScheduleInfo"
    UserVideoConfiguration:
      type: "object"
      properties:
        provider:
          type: "string"
          description: "Video provider of the user"
          enum:
          - "RCMeetings"
          - "RCVideo"
          - "None"
        userLicenseType:
          type: "string"
          description: "Specifies if the user is 'paid' (has meeting license) or 'free'\
            \ (w/o meeting license)"
          enum:
          - "Paid"
          - "Free"
    FavoriteCollection:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/FavoriteContactResource"
    ExtensionFavoritesEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter URI"
        timestamp:
          type: "string"
          description: "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/ExtensionFavoritesEventBody"
    ExtensionFavoritesEventBody:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
      description: "Notification payload body"
    FavoriteContactList:
      type: "object"
      properties:
        uri:
          type: "string"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/FavoriteContactResource"
    FavoriteContactResource:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        extensionId:
          type: "string"
        accountId:
          type: "string"
        contactId:
          type: "string"
    DeviceProvisioningNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/DeviceProvisioningNavigationInfoUri"
        nextPage:
          $ref: "#/components/schemas/DeviceProvisioningNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/DeviceProvisioningNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/DeviceProvisioningNavigationInfoUri"
      description: "Information on navigation"
    GetExtensionDevicesResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of extension devices"
        records:
          type: "array"
          description: "List of extension devices"
          items:
            $ref: "#/components/schemas/ExtensionDeviceResponse"
        navigation:
          $ref: "#/components/schemas/DeviceProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/DeviceProvisioningPagingInfo"
    ExtensionDeviceResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a device"
        uri:
          type: "string"
          description: "Canonical URI of a device"
        sku:
          type: "string"
          description: "Device identification number (stock keeping unit) in the format\
            \ TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for\
            \ all other devices including softphone); ID - device model ID; AT -addon\
            \ type ID; AC - addon count (if any). For example 'HP-56-2-2'"
        type:
          type: "string"
          description: "Device type"
          default: "HardPhone"
          enum:
          - "Room"
          - "SoftPhone"
          - "OtherPhone"
          - "HardPhone"
          - "Paging"
          - "WebRTC"
        name:
          type: "string"
          description: "Device name. Mandatory if ordering  SoftPhone  or  OtherPhone.\
            \ Optional for  HardPhone. If not specified for HardPhone, then device\
            \ model name is used as device name"
        status:
          type: "string"
          description: "Device status"
          enum:
          - "Offline"
          - "Online"
        serial:
          type: "string"
          description: "Serial number for HardPhone (is returned only when the phone\
            \ is shipped and provisioned); endpoint_id for softphone and mobile applications"
        computerName:
          type: "string"
          description: "PC name for softphone"
        model:
          $ref: "#/components/schemas/ModelInfo"
        extension:
          $ref: "#/components/schemas/ExtensionInfoIntId"
        emergencyServiceAddress:
          $ref: "#/components/schemas/EmergencyServiceAddressResource"
        emergency:
          $ref: "#/components/schemas/DeviceEmergencyInfo"
        phoneLines:
          type: "array"
          description: "Phone lines information"
          items:
            $ref: "#/components/schemas/PhoneLinesInfo"
        shipping:
          $ref: "#/components/schemas/ShippingInfo"
        boxBillingId:
          type: "integer"
          format: "int64"
          description: "Box billing identifier of a device. Applicable only for HardPhones.\
            \ It is an alternative way to identify the device to be ordered. Either\
            \ model  structure, or  boxBillingId  must be specified for HardPhone"
        useAsCommonPhone:
          type: "boolean"
          description: "Supported only for devices assigned to Limited extensions.\
            \ If true, enables users to log in to this phone as a common phone."
        linePooling:
          type: "string"
          description: "Pooling type of a deviceHost - device with standalone paid\
            \ phone line which can be linked to Glip/Softphone instanceGuest - device\
            \ with a linked phone lineNone - device without a phone line or with specific\
            \ line (free, BLA, etc.) = ['Host', 'Guest', 'None']"
          enum:
          - "Host"
          - "Guest"
          - "None"
        inCompanyNet:
          type: "boolean"
          description: "Network location status. 'True' if the device is located in\
            \ the configured corporate network (On-Net); 'False' for Off-Net location.\
            \ Parameter is not returned if `EmergencyAddressAutoUpdate` feature is\
            \ not enabled for the account/user, or if device network location is not\
            \ determined"
        site:
          $ref: "#/components/schemas/DeviceSiteInfo"
        lastLocationReportTime:
          type: "string"
          description: "Datetime of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z"
    DeviceProvisioningPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
      description: "Information on paging"
    DeviceProvisioningNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    ExtensionGrantListEventBody:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
      description: "Notification payload body"
    ExtensionInfoGrants:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        extensionNumber:
          type: "string"
          description: "Extension short number (usually 3 or 4 digits)"
        name:
          type: "string"
          description: "Name of extension"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "Fax User"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ApplicationExtension"
          - "ParkLocation"
      description: "Extension information"
    ExtensionGrantListEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter URI"
        timestamp:
          type: "string"
          description: "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/ExtensionGrantListEventBody"
    GrantInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a grant"
        extension:
          $ref: "#/components/schemas/ExtensionInfoGrants"
        callPickup:
          type: "boolean"
          description: "Specifies if picking up of other extensions' calls is allowed\
            \ for the extension. If 'Presence' feature is disabled for the given extension,\
            \ the flag is not returned"
        callMonitoring:
          type: "boolean"
          description: "Specifies if monitoring of other extensions' calls is allowed\
            \ for the extension. If 'CallMonitoring' feature is disabled for the given\
            \ extension, the flag is not returned"
        callOnBehalfOf:
          type: "boolean"
          description: "Specifies whether the current extension is able to make or\
            \ receive calls on behalf of the user referenced in extension object"
        callDelegation:
          type: "boolean"
          description: "Specifies whether the current extension can delegate a call\
            \ to the user referenced in extension object"
        groupPaging:
          type: "boolean"
          description: "Specifies whether the current extension is allowed to call\
            \ Paging Only group referenced to in extension object"
        callQueueSetup:
          type: "boolean"
          description: "Specifies whether the current extension is assigned as a Full-Access\
            \ manager in the call queue referenced in extension object"
        callQueueMembersSetup:
          type: "boolean"
          description: "Specifies whether the current extension is assigned as a Members-Only\
            \ manager in the call queue referenced in extension object"
        callQueueMessages:
          type: "boolean"
          description: "Specifies whether the current extension is assigned as a Messages\
            \ Manager in the queue referenced in extension object"
    GetExtensionGrantListResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of extension grants"
        records:
          type: "array"
          description: "List of extension grants with details"
          items:
            $ref: "#/components/schemas/GrantInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    ConferencePhoneNumberInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Dial-in phone number to connect to a conference"
        default:
          type: "boolean"
          description: "'True' if the number is default for the conference. Default\
            \ conference number is a domestic number that can be set by user (otherwise\
            \ it is set by the system). Only one default number per country is allowed"
    PhoneNumberInfoConferencing:
      type: "object"
      properties:
        country:
          $ref: "#/components/schemas/GetCountryInfoConferencing"
        default:
          type: "boolean"
          description: "'True' if the number is default for the conference. Default\
            \ conference number is a domestic number that can be set by user (otherwise\
            \ it is set by the system). Only one default number per country is allowed"
        hasGreeting:
          type: "boolean"
          description: "'True' if the greeting message is played on this number"
        location:
          type: "string"
          description: "Location (city, region, state) of a conference phone number"
        phoneNumber:
          type: "string"
          description: "Dial-in phone number to connect to a conference"
        premium:
          type: "boolean"
          description: "Indicates if the number is 'premium' (account phone number\
            \ with the `ConferencingNumber` usageType)"
    GetConferencingInfoResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a conferencing"
        allowJoinBeforeHost:
          type: "boolean"
          description: "Determines if host user allows conference participants to\
            \ join before the host"
        hostCode:
          type: "string"
          description: "Access code for a host user"
        mode:
          type: "string"
          description: "Internal parameter specifying conferencing engine"
        participantCode:
          type: "string"
          description: "Access code for any participant"
        phoneNumber:
          type: "string"
          description: "Primary conference phone number for user's home country returned\
            \ in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format"
        tapToJoinUri:
          type: "string"
          description: "Short URL leading to the service web page Tap to Join for\
            \ audio conference bridge"
        phoneNumbers:
          type: "array"
          description: "List of multiple dial-in phone numbers to connect to audio\
            \ conference service, relevant for user's brand. Each number is given\
            \ with the country and location information, in order to let the user\
            \ choose the less expensive way to connect to a conference. The first\
            \ number in the list is the primary conference number, that is default\
            \ and domestic"
          items:
            $ref: "#/components/schemas/PhoneNumberInfoConferencing"
    UpdateConferencingInfoRequest:
      type: "object"
      properties:
        phoneNumbers:
          type: "array"
          description: "Multiple dial-in phone numbers to connect to audio conference\
            \ service, relevant for user's brand. Each number is given with the country\
            \ and location information, in order to let the user choose the less expensive\
            \ way to connect to a conference. The first number in the list is the\
            \ primary conference number, that is default and domestic"
          items:
            $ref: "#/components/schemas/ConferencePhoneNumberInfo"
        allowJoinBeforeHost:
          type: "boolean"
          description: "Determines if host user allows conference participants to\
            \ join before the host"
    GetCountryInfoConferencing:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a country"
        uri:
          type: "string"
          description: "Canonical URI of a country"
        callingCode:
          type: "string"
          description: "Country calling code defined by ITU-T recommendations [E.123](https://www.itu.int/rec/T-REC-E.123-200102-I/en)\
            \ and [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)"
        emergencyCalling:
          type: "boolean"
          description: "Emergency calling feature availability/emergency address requirement\
            \ indicator"
        isoCode:
          type: "string"
          description: "Country code according to the ISO standard, see [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)"
        name:
          type: "string"
          description: "Official name of a country"
      description: "Information on a home country of a conference phone number"
    ExtensionCallQueuePresenceList:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/ExtensionCallQueuePresence"
    CallQueueId:
      type: "object"
      description: "Call queue information"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a call queue"
    PresenceCallQueueInfo:
      type: "object"
      description: "Call queue information"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a call queue"
        name:
          type: "string"
          description: "Name of a call queue"
        extensionNumber:
          type: "string"
          description: "Extension number of a call queue"
        editableMemberStatus:
          type: "boolean"
          description: "Flag allow members to change their queue status"
    ExtensionCallQueueUpdatePresenceList:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/ExtensionCallQueueUpdatePresence"
    ExtensionCallQueuePresence:
      type: "object"
      properties:
        callQueue:
          $ref: "#/components/schemas/PresenceCallQueueInfo"
        acceptCalls:
          type: "boolean"
          description: "Call queue agent availability for calls of this queue"
    ExtensionCallQueueUpdatePresence:
      type: "object"
      properties:
        callQueue:
          $ref: "#/components/schemas/CallQueueId"
        acceptCalls:
          type: "boolean"
          description: "Call queue agent availability for calls of this queue"
    MessageAttachmentInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a message attachment"
        uri:
          type: "string"
          description: "Canonical URI of a message attachment"
        type:
          type: "string"
          description: "Type of message attachment"
          enum:
          - "AudioRecording"
          - "AudioTranscription"
          - "Text"
          - "SourceDocument"
          - "RenderedDocument"
          - "MmsAttachment"
        contentType:
          type: "string"
          description: "MIME type for a given attachment, for instance 'audio/wav'"
        vmDuration:
          type: "integer"
          description: "Supported for `Voicemail` only. Duration of a voicemail in\
            \ seconds"
        fileName:
          type: "string"
          description: "Name of a file attached"
        size:
          type: "integer"
          description: "Size of attachment in bytes"
        height:
          type: "integer"
          description: "Attachment height in pixels if available"
        width:
          type: "integer"
          description: "Attachment width in pixels if available"
    SyncInfoMessages:
      type: "object"
      properties:
        syncType:
          type: "string"
          description: "Type of synchronization"
          enum:
          - "FSync"
          - "ISync"
        syncToken:
          type: "string"
          description: "Synchronization token"
        syncTime:
          type: "string"
          description: "Last synchronization datetime in ISO 8601 format including\
            \ timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        olderRecordsExist:
          type: "boolean"
          default: false
      description: "Sync type, token and time"
    ConversationInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a conversation"
        uri:
          type: "string"
          description: "Deprecated. Link to a conversation resource"
      description: "SMS and Pager only. Information about a conversation the message\
        \ belongs to"
    MessageStoreCallerInfoResponseFrom:
      type: "object"
      properties:
        extensionNumber:
          type: "string"
          description: "Extension short number (usually 3 or 4 digits). This property\
            \ is filled when parties communicate by means of short internal numbers,\
            \ for example when calling to other extension or sending/receiving Company\
            \ Pager message"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        location:
          type: "string"
          description: "Contains party location (city, state) if one can be determined\
            \ from phoneNumber. This property is filled only when phoneNumber is not\
            \ empty and server can calculate location information from it (for example,\
            \ this information is unavailable for US toll-free numbers)"
        name:
          type: "string"
          description: "Symbolic name associated with a party. If the phone does not\
            \ belong to the known extension, only the location is returned, the name\
            \ is not determined then"
        phoneNumber:
          type: "string"
          description: "Phone number of a party. Usually it is a plain number including\
            \ country and area code like 18661234567. But sometimes it could be returned\
            \ from database with some formatting applied, for example (866)123-4567.\
            \ This property is filled in all cases where parties communicate by means\
            \ of global phone numbers, for example when calling to direct numbers\
            \ or sending/receiving SMS"
      description: "Sender information"
    MessageStoreCallerInfoResponseTo:
      type: "object"
      properties:
        extensionNumber:
          type: "string"
          description: "Extension short number (usually 3 or 4 digits). This property\
            \ is filled when parties communicate by means of short internal numbers,\
            \ for example when calling to other extension or sending/receiving Company\
            \ Pager message"
        extensionId:
          type: "string"
        location:
          type: "string"
          description: "Contains party location (city, state) if one can be determined\
            \ from phoneNumber. This property is filled only when phoneNumber is not\
            \ empty and server can calculate location information from it (for example,\
            \ this information is unavailable for US toll-free numbers)"
        target:
          type: "boolean"
          description: "'True' specifies that message is sent exactly to this recipient.\
            \ Returned in to field for group MMS. Useful if one extension has several\
            \ phone numbers"
        messageStatus:
          type: "string"
          description: "Status of a message. Returned for outbound fax messages only"
          enum:
          - "Queued"
          - "Sent"
          - "Delivered"
          - "DeliveryFailed"
          - "SendingFailed"
          - "Received"
        faxErrorCode:
          type: "string"
          description: "Error code returned in case of fax sending failure. Returned\
            \ if messageStatus value is 'SendingFailed'. Supported for fax messages\
            \ only"
          enum:
          - "AllLinesInUse"
          - "Undefined"
          - "NoFaxSendPermission"
          - "NoInternationalPermission"
          - "NoFaxMachine"
          - "NoAnswer"
          - "LineBusy"
          - "CallerHungUp"
          - "NotEnoughCredits"
          - "SentPartially"
          - "InternationalCallingDisabled"
          - "DestinationCountryDisabled"
          - "UnknownCountryCode"
          - "NotAccepted"
          - "InvalidNumber"
          - "CallDeclined"
          - "TooManyCallsPerLine"
          - "CallFailed"
          - "RenderingFailed"
          - "TooManyPages"
          - "ReturnToDBQueue"
          - "NoCallTime"
          - "WrongNumber"
          - "ProhibitedNumber"
          - "InternalError"
          - "FaxSendingProhibited"
          - "ThePhoneIsBlacklisted"
          - "UserNotFound"
          - "ConvertError"
          - "DBGeneralError"
          - "SkypeBillingFailed"
          - "AccountSuspended"
          - "ProhibitedDestination"
          - "InternationalDisabled"
        name:
          type: "string"
          description: "Symbolic name associated with a party. If the phone does not\
            \ belong to the known extension, only the location is returned, the name\
            \ is not determined then"
        phoneNumber:
          type: "string"
          description: "Phone number of a party. Usually it is a plain number including\
            \ country and area code like 18661234567. But sometimes it could be returned\
            \ from database with some formatting applied, for example (866)123-4567.\
            \ This property is filled in all cases where parties communicate by means\
            \ of global phone numbers, for example when calling to direct numbers\
            \ or sending/receiving SMS"
    GetMessageInfoResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a message"
        uri:
          type: "string"
          description: "Canonical URI of a message"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        attachments:
          type: "array"
          description: "The list of message attachments"
          items:
            $ref: "#/components/schemas/MessageAttachmentInfo"
        availability:
          type: "string"
          description: "Message availability status. Message in 'Deleted' state is\
            \ still preserved with all its attachments and can be restored. 'Purged'\
            \ means that all attachments are already deleted and the message itself\
            \ is about to be physically deleted shortly"
          enum:
          - "Alive"
          - "Deleted"
          - "Purged"
        conversationId:
          type: "integer"
          format: "int64"
          description: "SMS and Pager only. Identifier of a conversation the message\
            \ belongs to"
        conversation:
          $ref: "#/components/schemas/ConversationInfo"
        creationTime:
          type: "string"
          description: "Message creation datetime in ISO 8601 format including timezone,\
            \ for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        deliveryErrorCode:
          type: "string"
          description: "SMS only. Delivery error code returned by gateway"
        direction:
          type: "string"
          description: "Message direction. Note that for some message types not all\
            \ directions are allowed. For example voicemail messages can be only inbound"
          enum:
          - "Inbound"
          - "Outbound"
        faxPageCount:
          type: "integer"
          description: "Fax only. Page count in a fax message"
        faxResolution:
          type: "string"
          description: "Fax only. Resolution of a fax message. 'High' for black and\
            \ white image scanned at 200 dpi, 'Low' for black and white image scanned\
            \ at 100 dpi"
          enum:
          - "High"
          - "Low"
        from:
          $ref: "#/components/schemas/MessageStoreCallerInfoResponseFrom"
        lastModifiedTime:
          type: "string"
          description: "The datetime when the message was modified on server in ISO\
            \ 8601 format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        messageStatus:
          type: "string"
          description: "Message status. Different message types may have different\
            \ allowed status values. For outbound faxes the aggregated message status\
            \ is returned: If status for at least one recipient is 'Queued', then\
            \ 'Queued' value is returned If status for at least one recipient is 'SendingFailed',\
            \ then 'SendingFailed' value is returned In other cases Sent status is\
            \ returned"
          enum:
          - "Queued"
          - "Sent"
          - "Delivered"
          - "DeliveryFailed"
          - "SendingFailed"
          - "Received"
        pgToDepartment:
          type: "boolean"
          description: "'Pager' only. 'True' if at least one of the message recipients\
            \ is 'Department' extension"
        priority:
          type: "string"
          description: "Message priority"
          enum:
          - "Normal"
          - "High"
        readStatus:
          type: "string"
          description: "Message read status"
          enum:
          - "Read"
          - "Unread"
        smsDeliveryTime:
          type: "string"
          description: "SMS only. The datetime when outbound SMS was delivered to\
            \ recipient's handset in ISO 8601 format including timezone, for example\
            \ 2016-03-10T18:07:52.534Z. It is filled only if the carrier sends a delivery\
            \ receipt to RingCentral"
          format: "date-time"
        smsSendingAttemptsCount:
          type: "integer"
          description: "SMS only. Number of attempts made to send an outbound SMS\
            \ to the gateway (if gateway is temporary unavailable)"
        subject:
          type: "string"
          description: "Message subject. For SMS and Pager messages it replicates\
            \ message text which is also returned as an attachment"
        to:
          type: "array"
          description: "Recipient information"
          items:
            $ref: "#/components/schemas/MessageStoreCallerInfoResponseTo"
        type:
          type: "string"
          description: "Message type"
          enum:
          - "Fax"
          - "SMS"
          - "VoiceMail"
          - "Pager"
          - "Text"
        vmTranscriptionStatus:
          type: "string"
          description: "Voicemail only. Status of voicemail to text transcription.\
            \ If VoicemailToText feature is not activated for account, the 'NotAvailable'\
            \ value is returned"
          enum:
          - "NotAvailable"
          - "InProgress"
          - "TimedOut"
          - "Completed"
          - "CompletedPartially"
          - "Failed"
          - "Unknown"
        coverIndex:
          type: "integer"
          description: "Cover page identifier. If coverIndex is set to '0' (zero)\
            \ cover page is not attached. For the list of available cover page identifiers\
            \ (1-13) please call the Fax Cover Pages method. If not specified, the\
            \ default cover page is attached (which is configured in 'Outbound Fax\
            \ Settings')"
        coverPageText:
          type: "string"
          description: "Cover page text, entered by the fax sender and printed on\
            \ the cover page. Maximum length is limited to 1024 symbols"
    GetMessageSyncResponse:
      required:
      - "records"
      - "syncInfo"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the message sync resource"
        records:
          type: "array"
          description: "List of message records with synchronization information"
          items:
            $ref: "#/components/schemas/GetMessageInfoResponse"
        syncInfo:
          $ref: "#/components/schemas/SyncInfoMessages"
    UserCallLogRecord:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a cal log record"
        uri:
          type: "string"
          description: "Canonical URI of a call log record"
        sessionId:
          type: "string"
          description: "Internal identifier of a call session"
        telephonySessionId:
          type: "string"
          description: "Telephony identifier of a call session"
        from:
          $ref: "#/components/schemas/CallLogCallerInfo"
        to:
          $ref: "#/components/schemas/CallLogCallerInfo"
        extension:
          $ref: "#/components/schemas/ExtensionInfoCallLog"
        type:
          type: "string"
          description: "Call type"
          enum:
          - "Voice"
          - "Fax"
        transport:
          type: "string"
          description: "For 'Detailed' view only. Call transport"
          enum:
          - "PSTN"
          - "VoIP"
        legs:
          type: "array"
          description: "For 'Detailed' view only. Leg description"
          items:
            $ref: "#/components/schemas/CallLogRecordLegInfo"
        billing:
          $ref: "#/components/schemas/BillingInfo"
        direction:
          type: "string"
          description: "Call direction"
          enum:
          - "Inbound"
          - "Outbound"
        message:
          $ref: "#/components/schemas/CallLogRecordMessage"
        startTime:
          type: "string"
          description: "The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
            \ format including timezone, for example 2016-03-10T18:07:52.534Z"
        delegate:
          $ref: "#/components/schemas/CallLogDelegateInfo"
        deleted:
          type: "boolean"
          description: "Indicates whether the record is deleted. Returned for deleted\
            \ records, for ISync requests"
        duration:
          type: "integer"
          description: "Call duration in seconds"
        lastModifiedTime:
          type: "string"
          description: "For 'Detailed' view only. The datetime when the call log record\
            \ was modified in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format\
            \ including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        recording:
          $ref: "#/components/schemas/CallLogRecordingInfo"
        shortRecording:
          type: "boolean"
          description: "Indicates that the recording is too short and therefore wouldn't\
            \ be returned. The flag is not returned if the value is false"
        action:
          type: "string"
          description: "Action description of the call operation"
          enum:
          - "Unknown"
          - "Phone Login"
          - "Calling Card"
          - "VoIP Call"
          - "Phone Call"
          - "Paging"
          - "Hunting"
          - "Call Park"
          - "Monitoring"
          - "Text Relay"
          - "External Application"
          - "Park Location"
          - "CallOut-CallMe"
          - "Conference Call"
          - "Move"
          - "RC Meetings"
          - "Accept Call"
          - "FindMe"
          - "FollowMe"
          - "RingMe"
          - "Transfer"
          - "Call Return"
          - "Ring Directly"
          - "RingOut Web"
          - "RingOut PC"
          - "RingOut Mobile"
          - "Emergency"
          - "E911 Update"
          - "Support"
          - "Incoming Fax"
          - "Outgoing Fax"
        result:
          type: "string"
          description: "Status description of the call operation"
          enum:
          - "Unknown"
          - "Accepted"
          - "Call connected"
          - "In Progress"
          - "Voicemail"
          - "Reply"
          - "Missed"
          - "Busy"
          - "Rejected"
          - "No Answer"
          - "Hang Up"
          - "Blocked"
          - "Suspended account"
          - "Call Failed"
          - "Call Failure"
          - "Internal Error"
          - "IP Phone Offline"
          - "No Calling Credit"
          - "Not Allowed"
          - "Restricted Number"
          - "Wrong Number"
          - "Answered Not Accepted"
          - "Stopped"
          - "International Disabled"
          - "International Restricted"
          - "Abandoned"
          - "Declined"
          - "Received"
          - "Fax on Demand"
          - "Partial Receive"
          - "Receive Error"
          - "Fax Receipt Error"
          - "Sent"
          - "Fax Partially Sent"
          - "Send Error"
          - "Fax Not Sent"
          - "Fax Poor Line"
        reason:
          type: "string"
          description: "Reason of a call result:\n * `Accepted` - The call was connected\
            \ to and accepted by this number\n * `Connected` - The call was answered,\
            \ but there was no response on how to handle the call (for example, a\
            \ voice mail system answered the call and did not push \"1\" to accept)\n\
            \ * `Line Busy` - The phone number you dialed was busy\n * `Not Answered`\
            \ - The phone number you dialed was not answered\n * `No Answer` - You\
            \ did not answer the call\n * `Hang Up` - The caller hung up before the\
            \ call was answered\n * `Stopped` - This attempt was stopped because the\
            \ call was answered by another phone\n * `Internal Error` - An internal\
            \ error occurred when making the call. Please try again\n * `No Credit`\
            \ - There was not enough Calling Credit on your account to make this call\n\
            \ * `Restricted Number` - The number you dialed is restricted by RingCentral\n\
            \ * `Wrong Number` - The number you dialed has either been disconnected\
            \ or is not a valid phone number. Please check the number and try again\n\
            \ * `International Disabled` - International calling is not enabled on\
            \ your account. Contact customer service to activate International Calling\n\
            \ * `International Restricted` - The country and/or area you attempted\
            \ to call has been prohibited by your administrator\n * `Bad Number` -\
            \ An error occurred when making the call. Please check the number before\
            \ trying again\n * `Info 411 Restricted` - Calling to 411 Information\
            \ Services is restricted\n * `Customer 611 Restricted` - 611 customer\
            \ service is not supported. Please contact customer service at <(888)\
            \ 555-1212>\n * `No Digital Line` - This DigitalLine was either not plugged\
            \ in or did not have an internet connection\n * `Failed Try Again` - Call\
            \ failed. Please try again\n * `Max Call Limit` - The number of simultaneous\
            \ calls to your account has reached its limit\n * `Too Many Calls` - The\
            \ number of simultaneous calls for per DigitalLine associated with Other\
            \ Phone has reached its limit. Please contact customer service\n * `Calls\
            \ Not Accepted` - Your account was not accepting calls at this time\n\
            \ * `Number Not Allowed` - The number that was dialed to access your account\
            \ is not allowed\n * `Number Blocked` - This number is in your Blocked\
            \ Numbers list\n * `Number Disabled` - The phone number and/or area you\
            \ attempted to call has been prohibited by your administrator\n * `Resource\
            \ Error` - An error occurred when making the call. Please try again\n\
            \ * `Call Loop` - A call loop occurred due to an incorrect call forwarding\
            \ configuration. Please check that you are not forwarding calls back to\
            \ your own account\n * `Fax Not Received` - An incoming fax could not\
            \ be received because a proper connection with the sender's fax machine\
            \ could not be established\n * `Fax Partially Sent` - The fax was only\
            \ partially sent. Possible explanations include phone line quality to\
            \ poor to maintain the connection or the call was dropped\n * `Fax Not\
            \ Sent` - An attempt to send the fax was made, but could not connect with\
            \ the receiving fax machine\n * `Fax Poor Line` - An attempt to send the\
            \ fax was made, but the phone line quality was too poor to send the fax\n\
            \ * `Fax Prepare Error` - An internal error occurred when preparing the\
            \ fax. Please try again\n * `Fax Save Error` - An internal error occurred\
            \ when saving the fax. Please try again\n * `Fax Send Error` - An error\
            \ occurred when sending the fax. Please try again\n * `DescNoE911Address`\
            \ - The call was rejected due to no E911 address\n"
          enum:
          - "Accepted"
          - "Connected"
          - "line Busy"
          - "Not Answered"
          - "No Answer"
          - "Hang Up"
          - "Stopped"
          - "Internal Error"
          - "No Credit"
          - "Restricted Number"
          - "Wrong Number"
          - "International Disabled"
          - "International Restricted"
          - "Bad Number"
          - "Info 411 Restricted"
          - "Customer 611 Restricted"
          - "No Digital Line"
          - "Failed Try Again"
          - "Max Call Limit"
          - "Too Many Calls"
          - "Calls Not Accepted"
          - "Number Not Allowed"
          - "Number Blocked"
          - "Number Disabled"
          - "Resource Error"
          - "Call Loop"
          - "Fax Not Received"
          - "Fax Partially Sent"
          - "Fax Not Sent"
          - "Fax Poor Line"
          - "Fax Prepare Error"
          - "Fax Save Error"
          - "Fax Send Error"
          - "DescNoE911Address"
        reasonDescription:
          type: "string"
        internalType:
          type: "string"
          description: "Internal type of a call"
          enum:
          - "Local"
          - "LongDistance"
          - "International"
          - "Sip"
          - "RingMe"
          - "RingOut"
          - "Usual"
          - "TollFreeNumber"
          - "VerificationNumber"
          - "Vma"
          - "LocalNumber"
          - "ImsOutgoing"
          - "ImsIncoming"
    UserCallLogResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of call log records"
          items:
            $ref: "#/components/schemas/UserCallLogRecord"
        navigation:
          $ref: "#/components/schemas/CallLogNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallLogPagingInfo"
    RingOutStatusInfo:
      type: "object"
      properties:
        callStatus:
          type: "string"
          description: "Status of a call"
          enum:
          - "Invalid"
          - "Success"
          - "InProgress"
          - "Busy"
          - "NoAnswer"
          - "Rejected"
          - "GenericError"
          - "Finished"
          - "InternationalDisabled"
          - "DestinationBlocked"
          - "NotEnoughFunds"
          - "NoSuchUser"
        callerStatus:
          type: "string"
          description: "Status of a calling party"
          enum:
          - "Invalid"
          - "Success"
          - "InProgress"
          - "Busy"
          - "NoAnswer"
          - "Rejected"
          - "GenericError"
          - "Finished"
          - "InternationalDisabled"
          - "DestinationBlocked"
          - "NotEnoughFunds"
          - "NoSuchUser"
        calleeStatus:
          type: "string"
          description: "Status of a called party"
          enum:
          - "Invalid"
          - "Success"
          - "InProgress"
          - "Busy"
          - "NoAnswer"
          - "Rejected"
          - "GenericError"
          - "Finished"
          - "InternationalDisabled"
          - "DestinationBlocked"
          - "NotEnoughFunds"
          - "NoSuchUser"
      description: "RingOut status information"
    MakeRingOutCoutryInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Dialing plan country identifier"
      description: "Optional. Dialing plan country data. If not specified, then extension\
        \ home country is applied by default"
    MakeRingOutCallerInfoRequestTo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number in E.164 format"
      description: "Phone number of the called party. This number corresponds to the\
        \ 2nd leg of the RingOut call"
    MakeRingOutRequest:
      required:
      - "from"
      - "to"
      type: "object"
      properties:
        from:
          $ref: "#/components/schemas/MakeRingOutCallerInfoRequestFrom"
        to:
          $ref: "#/components/schemas/MakeRingOutCallerInfoRequestTo"
        callerId:
          $ref: "#/components/schemas/MakeRingOutCallerIdInfo"
        playPrompt:
          type: "boolean"
          description: "The audio prompt that the calling party hears when the call\
            \ is connected"
        country:
          $ref: "#/components/schemas/MakeRingOutCoutryInfo"
    MakeRingOutCallerInfoRequestFrom:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number in E.164 format"
        forwardingNumberId:
          type: "string"
          description: "Internal identifier of a forwarding number; returned in response\
            \ as an 'id' field value. Can be specified instead of the phoneNumber\
            \ attribute"
      description: "Phone number of the caller. This number corresponds to the 1st\
        \ leg of the RingOut call. This number can be one of the user's configured\
        \ forwarding numbers or an arbitrary number"
    GetRingOutStatusResponseIntId:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of a RingOut call"
          format: "int64"
        uri:
          type: "string"
        status:
          $ref: "#/components/schemas/RingOutStatusInfo"
    MakeRingOutCallerIdInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number in E.164 format"
      description: "The number which will be displayed to the called party"
    GetRingOutStatusResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a RingOut call"
        uri:
          type: "string"
        status:
          $ref: "#/components/schemas/RingOutStatusInfo"
    CallLogSync:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of call log records with sync information"
        records:
          type: "array"
          description: "List of call log records with synchronization information.\
            \ For ISync the total number of returned records is limited to 250; this\
            \ includes both new records and the old ones, specified by the recordCount\
            \ parameter"
          items:
            $ref: "#/components/schemas/UserCallLogRecord"
        syncInfo:
          $ref: "#/components/schemas/SyncInfoCallLog"
    SyncInfoCallLog:
      type: "object"
      properties:
        syncType:
          type: "string"
          description: "Type of synchronization"
          enum:
          - "FSync"
          - "ISync"
        syncToken:
          type: "string"
          description: "Synchronization token"
        syncTime:
          type: "string"
          description: "The last synchronization datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]\
            \ format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
      description: "Sync information (type, token and time)"
    UserActiveCallsResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of user active call records"
        records:
          type: "array"
          description: "List of call log records"
          items:
            $ref: "#/components/schemas/UserCallLogRecord"
        navigation:
          $ref: "#/components/schemas/CallLogNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallLogPagingInfo"
    CallerIdByFeatureInfoRequest:
      type: "object"
      properties:
        type:
          type: "string"
          description: "If 'PhoneNumber' value is specified, then a certain phone\
            \ number is shown as a caller ID when using this telephony feature. If\
            \ 'Blocked' value is specified, then a caller ID is hidden. The value\
            \ 'CurrentLocation' can be specified for 'RingOut' feature only. The default\
            \ is 'PhoneNumber' = ['PhoneNumber', 'Blocked', 'CurrentLocation']"
        phoneInfo:
          $ref: "#/components/schemas/CallerIdPhoneInfoRequest"
    ExtensionCallerIdInfoRequest:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URL of a caller ID resource"
        byDevice:
          type: "array"
          items:
            $ref: "#/components/schemas/CallerIdByDeviceRequest"
        byFeature:
          type: "array"
          items:
            $ref: "#/components/schemas/CallerIdByFeatureRequest"
        extensionNameForOutboundCalls:
          type: "boolean"
          description: "If 'True', then user first name and last name will be used\
            \ as caller ID when making outbound calls from extension"
        extensionNumberForInternalCalls:
          type: "boolean"
          description: "If 'True', then extension number will be used as caller ID\
            \ when making internal calls"
    CallerIdByFeature:
      type: "object"
      properties:
        feature:
          type: "string"
          enum:
          - "RingOut"
          - "RingMe"
          - "CallFlip"
          - "FaxNumber"
          - "AdditionalSoftphone"
          - "Alternate"
          - "CommonPhone"
          - "MobileApp"
          - "Delegated"
        callerId:
          $ref: "#/components/schemas/CallerIdByFeatureInfo"
      description: "Caller ID settings by feature"
    CallerIdByFeatureInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "If 'PhoneNumber' value is specified, then a certain phone\
            \ number is shown as a caller ID when using this telephony feature. If\
            \ 'Blocked' value is specified, then a caller ID is hidden. The value\
            \ 'CurrentLocation' can be specified for 'RingOut' feature only. The default\
            \ is 'PhoneNumber' = ['PhoneNumber', 'Blocked', 'CurrentLocation']"
        phoneInfo:
          $ref: "#/components/schemas/CallerIdPhoneInfo"
    CallerIdPhoneInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a phone number"
    CallerIdByDeviceRequest:
      type: "object"
      properties:
        device:
          $ref: "#/components/schemas/CallerIdDeviceInfoRequest"
        callerId:
          $ref: "#/components/schemas/CallerIdByDeviceInfoRequest"
      description: "Caller ID settings by device"
    CallerIdByFeatureRequest:
      type: "object"
      properties:
        feature:
          type: "string"
          enum:
          - "RingOut"
          - "RingMe"
          - "CallFlip"
          - "FaxNumber"
          - "AdditionalSoftphone"
          - "Alternate"
          - "CommonPhone"
          - "MobileApp"
          - "Delegated"
        callerId:
          $ref: "#/components/schemas/CallerIdByFeatureInfoRequest"
      description: "Caller ID settings by feature"
    CallerIdByDeviceInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "If 'PhoneNumber' value is specified, then a certain phone\
            \ number is shown as a caller ID when using this telephony feature. If\
            \ 'Blocked' value is specified, then a caller ID is hidden. The value\
            \ 'CurrentLocation' can be specified for 'RingOut' feature only. The default\
            \ is 'PhoneNumber' = ['PhoneNumber', 'Blocked', 'CurrentLocation']"
        phoneInfo:
          $ref: "#/components/schemas/CallerIdPhoneInfo"
    CallerIdPhoneInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a phone number"
        uri:
          type: "string"
          description: "Link to a phone number resource"
        phoneNumber:
          type: "string"
          description: "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ (with '+' sign) format"
    CallerIdDeviceInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a device"
        uri:
          type: "string"
          description: "Link to a device resource"
        name:
          type: "string"
          description: "Name of a device"
    CallerIdByDeviceInfoRequest:
      type: "object"
      properties:
        type:
          type: "string"
          description: "If 'PhoneNumber' value is specified, then a certain phone\
            \ number is shown as a caller ID when using this telephony feature. If\
            \ 'Blocked' value is specified, then a caller ID is hidden. The value\
            \ 'CurrentLocation' can be specified for 'RingOut' feature only. The default\
            \ is 'PhoneNumber' = ['PhoneNumber', 'Blocked', 'CurrentLocation']"
        phoneInfo:
          $ref: "#/components/schemas/CallerIdPhoneInfoRequest"
    ExtensionCallerIdInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URL of a caller ID resource"
        byDevice:
          type: "array"
          items:
            $ref: "#/components/schemas/CallerIdByDevice"
        byFeature:
          type: "array"
          items:
            $ref: "#/components/schemas/CallerIdByFeature"
        extensionNameForOutboundCalls:
          type: "boolean"
          description: "If 'True', then user first name and last name will be used\
            \ as caller ID when making outbound calls from extension"
        extensionNumberForInternalCalls:
          type: "boolean"
          description: "If 'True', then extension number will be used as caller ID\
            \ when making internal calls"
    CallerIdByDevice:
      type: "object"
      properties:
        device:
          $ref: "#/components/schemas/CallerIdDeviceInfo"
        callerId:
          $ref: "#/components/schemas/CallerIdByDeviceInfo"
      description: "Caller ID settings by device"
    CallerIdDeviceInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a device"
    RecipientInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a recipient extension resource"
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a recipient extension"
      description: "Recipient data"
    TransferInfo:
      type: "object"
      properties:
        extension:
          $ref: "#/components/schemas/TransferExtensionInfo"
        action:
          type: "string"
          description: "Event that initiates transferring to the specified extension"
          enum:
          - "HoldTimeExpiration"
          - "MaxCallers"
          - "NoAnswer"
    UnconditionalForwardingInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number to which the call is forwarded. In addition to\
            \ common e.164 format, the following number patterns are supported: 11xxxxxxxxxxx,\
            \ 444xxxxxxxxxxx, 616xxxxxxxxxxx, 1700yyyy; where xxxxxxxxxxx is a phone\
            \ number in e.164 format (without '+' sign) and yyyy is an external short\
            \ extension number. Max number of digits is 15"
        action:
          type: "string"
          description: "Event that initiates forwarding to the specified phone number"
          enum:
          - "HoldTimeExpiration"
          - "MaxCallers"
          - "NoAnswer"
      description: "Unconditional forwarding parameters. Returned if 'UnconditionalForwarding'\
        \ value is specified for the `callHandlingAction` parameter"
    TransferredExtensionInfo:
      type: "object"
      properties:
        extension:
          $ref: "#/components/schemas/CallHandlingExtensionInfo"
      description: "Transfer settings applied for department (call queue) extension\
        \ type, returned if CallHandlingAction is set to `TransferToExtension`"
    QueueInfo:
      type: "object"
      properties:
        transferMode:
          type: "string"
          description: "Specifies how calls are transferred to group members"
          enum:
          - "Rotating"
          - "Simultaneous"
          - "FixedOrder"
        transfer:
          type: "array"
          description: "Call transfer information"
          items:
            $ref: "#/components/schemas/TransferInfo"
        noAnswerAction:
          type: "string"
          description: "Specifies the type of action to be taken if: members are available\
            \ but no one answers, or all members are busy/unavailable. This option\
            \ is available for Business hours only. For simultaneous transfer mode\
            \ only 'WaitPrimaryMembers' and 'WaitPrimaryAndOverflowMembers' are supported"
          enum:
          - "WaitPrimaryMembers"
          - "WaitPrimaryAndOverflowMembers"
          - "Voicemail"
          - "TransferToExtension"
          - "UnconditionalForwarding"
        fixedOrderAgents:
          type: "array"
          description: "Information on a call forwarding rule"
          items:
            $ref: "#/components/schemas/FixedOrderAgents"
        holdAudioInterruptionMode:
          type: "string"
          description: "Connecting audio interruption mode"
          enum:
          - "Never"
          - "WhenMusicEnds"
          - "Periodically"
        holdAudioInterruptionPeriod:
          type: "integer"
          description: "Connecting audio interruption message period in seconds"
        holdTimeExpirationAction:
          type: "string"
          description: "Specifies the type of action to be taken after the hold time\
            \ (waiting for an available call queue member) expires. If 'TransferToExtension'\
            \ option is selected, the extension specified in `transfer` field is used.\
            \ The default value is `Voicemail`"
          default: "Voicemail"
          enum:
          - "TransferToExtension"
          - "UnconditionalForwarding"
          - "Voicemail"
        agentTimeout:
          type: "integer"
          description: "Maximum time in seconds to wait for a call queue member before\
            \ trying the next member"
        wrapUpTime:
          type: "integer"
          description: "Minimum post-call wrap up time in seconds before agent status\
            \ is automatically set; the value range is from 180 to 300"
        holdTime:
          type: "integer"
          description: "Maximum hold time in seconds to wait for an available call\
            \ queue member"
        maxCallers:
          type: "integer"
          description: "Maximum count of callers on hold; the limitation is 25 callers"
        maxCallersAction:
          type: "string"
          description: "Specifies the type of action to be taken if count of callers\
            \ on hold exceeds the supported maximum"
          enum:
          - "Voicemail"
          - "Announcement"
          - "TransferToExtension"
          - "UnconditionalForwarding"
        unconditionalForwarding:
          type: "array"
          items:
            $ref: "#/components/schemas/UnconditionalForwardingInfo"
      description: "Queue settings applied for department (call queue) extension type,\
        \ with the 'AgentQueue' value specified as a call handling action"
    CallersInfo:
      type: "object"
      properties:
        callerId:
          type: "string"
          description: "Phone number of a caller"
        name:
          type: "string"
          description: "Contact name of a caller"
    TransferExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension the call is transferred\
            \ to"
        name:
          type: "string"
          description: "Extension name"
        extensionNumber:
          type: "string"
          description: "Extension number"
    CreateAnsweringRuleForwardingNumberInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a forwarding number"
        uri:
          type: "string"
          description: "Canonical URI of a forwarding/call flip phone number"
        phoneNumber:
          type: "string"
          description: "Forwarding/Call flip phone number"
        label:
          type: "string"
          description: "Forwarding/Call flip number title"
        type:
          type: "string"
          description: "Type of a forwarding number"
          enum:
          - "Home"
          - "Mobile"
          - "Work"
          - "PhoneLine"
          - "Outage"
          - "Other"
          - "BusinessMobilePhone"
          - "ExternalCarrier"
    MissedCallExtensionInfo:
      type: "object"
      description: "Specifies an extension (a calling group) which should be used\
        \ for the missed call transfer. Returned only if the `actionType` is set to\
        \ 'ConnectToExtension'"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension which should be used for\
            \ the missed call transfer"
        externalNumber:
          type: "object"
          $ref: "#/components/schemas/MissedCallExtensionInfoExternalNumber"
    SharedLinesInfo:
      type: "object"
      properties:
        timeout:
          type: "integer"
          description: "Number of seconds to wait before forwarding unanswered calls.\
            \ The value range is 10 - 80"
      description: "SharedLines call handling action settings"
    CallersInfoRequest:
      type: "object"
      properties:
        callerId:
          type: "string"
          description: "Phone number of a caller"
        name:
          type: "string"
          description: "Contact name of a caller"
    FixedOrderAgents:
      type: "object"
      properties:
        extension:
          $ref: "#/components/schemas/FixedOrderAgentsExtensionInfo"
        index:
          type: "integer"
          description: "Ordinal of an agent (call queue member)"
    UserAnsweringRuleListPaging:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
          example: 1
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset."
          example: 1
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
          example: 100
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset."
          example: 1
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
          example: 0
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
          example: 0
    ScheduleInfo:
      type: "object"
      properties:
        weeklyRanges:
          $ref: "#/components/schemas/WeeklyScheduleInfo"
        ranges:
          type: "array"
          description: "Specific data ranges"
          items:
            $ref: "#/components/schemas/RangesInfo"
        ref:
          type: "string"
          description: "The user's schedule specified for business hours or after\
            \ hours; it can also be set/retrieved calling the corresponding method"
          enum:
          - "BusinessHours"
          - "AfterHours"
      description: "Schedule when an answering rule should be applied"
    UserAnsweringRuleListNavigation:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/UserAnsweringRuleListNavigationPage"
        nextPage:
          $ref: "#/components/schemas/UserAnsweringRuleListNavigationPage"
        previousPage:
          $ref: "#/components/schemas/UserAnsweringRuleListNavigationPage"
        lastPage:
          $ref: "#/components/schemas/UserAnsweringRuleListNavigationPage"
    MissedCallExtensionInfoExternalNumber:
      type: "object"
      description: "Specifies an external PSTN number which should be used for the\
        \ missed call transfer. Returned only if the actionType is set to `ConnectToExternalNumber`"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number to which the call is forwarded. In addition to\
            \ common [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format,\
            \ the following number patterns are supported: 11xxxxxxxxxxx, 444xxxxxxxxxxx,\
            \ 616xxxxxxxxxxx, 1700yyyy; where `xxxxxxxxxxx` is a phone number in e.164\
            \ format (without '+' sign) and `yyyy` is an external short extension\
            \ number. Maximum number of digits is 15"
    CallHandlingExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        partnerId:
          type: "string"
          description: "For Partner Applications Internal identifier of an extension\
            \ created by partner. The RingCentral supports the mapping of accounts\
            \ and stores the corresponding account ID/extension ID for each partner\
            \ ID of a client application. In request URIs partner IDs are accepted\
            \ instead of regular RingCentral native IDs as path parameters using pid\
            \ = XXX clause. Though in response URIs contain the corresponding account\
            \ IDs and extension IDs. In all request and response bodies these values\
            \ are reflected via partnerId attributes of account and extension"
    CustomAnsweringRuleInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI to an answering rule resource"
        id:
          type: "string"
          description: "Internal identifier of an answering rule"
        type:
          type: "string"
          description: "Type of an answering rule"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        name:
          type: "string"
          description: "Name of an answering rule specified by user"
        enabled:
          type: "boolean"
          description: "Specifies if an answering rule is active or inactive"
        schedule:
          $ref: "#/components/schemas/ScheduleInfo"
        calledNumbers:
          type: "array"
          description: "Answering rules are applied when calling to selected number(s)"
          items:
            $ref: "#/components/schemas/CalledNumberInfo"
        callers:
          type: "array"
          description: "Answering rules are applied when calls are received from specified\
            \ caller(s)"
          items:
            $ref: "#/components/schemas/CallersInfo"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded"
          enum:
          - "ForwardCalls"
          - "UnconditionalForwarding"
          - "AgentQueue"
          - "TransferToExtension"
          - "TakeMessagesOnly"
          - "PlayAnnouncementOnly"
          - "SharedLines"
        forwarding:
          $ref: "#/components/schemas/ForwardingInfo"
        unconditionalForwarding:
          $ref: "#/components/schemas/UnconditionalForwardingInfo"
        queue:
          $ref: "#/components/schemas/QueueInfo"
        transfer:
          $ref: "#/components/schemas/TransferredExtensionInfo"
        voicemail:
          $ref: "#/components/schemas/VoicemailInfo"
        greetings:
          type: "array"
          description: "Greetings applied for an answering rule; only predefined greetings\
            \ can be applied, see Dictionary Greeting List"
          items:
            $ref: "#/components/schemas/GreetingInfo"
        screening:
          type: "string"
          description: "Call screening status. 'Off' - no call screening; 'NoCallerId'\
            \ - if caller ID is missing, then callers are asked to say their name\
            \ before connecting; 'UnknownCallerId' - if caller ID is not in contact\
            \ list, then callers are asked to say their name before connecting; 'Always'\
            \ - the callers are always asked to say their name before connecting.\
            \ The default value is 'Off'"
          enum:
          - "Off"
          - "NoCallerId"
          - "UnknownCallerId"
          - "Always"
        sharedLines:
          $ref: "#/components/schemas/SharedLinesInfo"
    CreateAnsweringRuleRequest:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Specifies if the rule is active or inactive. The default value\
            \ is 'True'"
        type:
          type: "string"
          description: "Type of an answering rule. The 'Custom' value should be specified"
        name:
          type: "string"
          description: "Name of an answering rule specified by user"
        callers:
          type: "array"
          description: "Answering rule will be applied when calls are received from\
            \ the specified caller(s)"
          items:
            $ref: "#/components/schemas/CallersInfoRequest"
        calledNumbers:
          type: "array"
          description: "Answering rules are applied when calling to selected number(s)"
          items:
            $ref: "#/components/schemas/CalledNumberInfo"
        schedule:
          $ref: "#/components/schemas/ScheduleInfo"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded"
          enum:
          - "ForwardCalls"
          - "UnconditionalForwarding"
          - "AgentQueue"
          - "TransferToExtension"
          - "TakeMessagesOnly"
          - "PlayAnnouncementOnly"
          - "SharedLines"
        forwarding:
          $ref: "#/components/schemas/ForwardingInfo"
        unconditionalForwarding:
          $ref: "#/components/schemas/UnconditionalForwardingInfo"
        queue:
          $ref: "#/components/schemas/QueueInfo"
        transfer:
          $ref: "#/components/schemas/TransferredExtensionInfo"
        voicemail:
          $ref: "#/components/schemas/VoicemailInfo"
        missedCall:
          $ref: "#/components/schemas/MissedCallInfo"
        greetings:
          type: "array"
          description: "Greetings applied for an answering rule; only predefined greetings\
            \ can be applied, see Dictionary Greeting List"
          items:
            $ref: "#/components/schemas/GreetingInfo"
        screening:
          type: "string"
          description: "Call screening status. 'Off' - no call screening; 'NoCallerId'\
            \ - if caller ID is missing, then callers are asked to say their name\
            \ before connecting; 'UnknownCallerId' - if caller ID is not in contact\
            \ list, then callers are asked to say their name before connecting; 'Always'\
            \ - the callers are always asked to say their name before connecting.\
            \ The default value is 'Off'"
          enum:
          - "Off"
          - "NoCallerId"
          - "UnknownCallerId"
          - "Always"
    UserAnsweringRuleList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of an answering rule list resource"
          example: "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule?page=1&perPage=100"
        records:
          type: "array"
          description: "List of answering rules"
          items:
            $ref: "#/components/schemas/UserAnsweringRuleListRecord"
        paging:
          $ref: "#/components/schemas/UserAnsweringRuleListPaging"
        navigation:
          $ref: "#/components/schemas/UserAnsweringRuleListNavigation"
    ForwardingInfo:
      type: "object"
      properties:
        notifyMySoftPhones:
          type: "boolean"
          description: "Specifies if the user's softphone(s) are notified before forwarding\
            \ the incoming call to desk phones and forwarding numbers"
        notifyAdminSoftPhones:
          type: "boolean"
          description: "Deprecated parameter. Specifies if the administrator's softphone\
            \ is notified before forwarding the incoming call to desk phones and forwarding\
            \ numbers. The default value is 'False'"
          deprecated: true
        softPhonesRingCount:
          type: "integer"
          description: "Number of rings before forwarding starts"
        softPhonesAlwaysRing:
          type: "boolean"
          description: "Specifies that desktop and mobile applications of the user\
            \ will ring till the end of their forwarding list. If set to 'True' then\
            \ `softPhonesRingCount` is ignored"
          default: true
        ringingMode:
          type: "string"
          description: "Specifies the order in which the forwarding numbers ring.\
            \ 'Sequentially' means that forwarding numbers are ringing one at a time,\
            \ in order of priority. 'Simultaneously' means that forwarding numbers\
            \ are ring all at the same time"
          enum:
          - "Sequentially"
          - "Simultaneously"
        rules:
          type: "array"
          description: "Information on a call forwarding rule"
          items:
            $ref: "#/components/schemas/RuleInfo"
        softPhonesPositionTop:
          type: "boolean"
          description: "Specifies if desktop and mobile applications of the user are\
            \ notified before (true) or after (false) forwarding the incoming call\
            \ to desk phones and forwarding numbers. Applicable only if `notifyMySoftPhones`\
            \ parameter is set to `true`"
        mobileTimeout:
          type: "boolean"
          description: "Deprecated parameter. Specifies if mobile timeout is activated\
            \ for the rule"
          deprecated: true
      description: "Forwarding parameters. Returned if 'ForwardCalls' is specified\
        \ in 'callHandlingAction'. These settings determine the forwarding numbers\
        \ to which the call will be forwarded"
    VoicemailInfo:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "If 'True' then voicemails are allowed to be received"
        recipient:
          $ref: "#/components/schemas/RecipientInfo"
      description: "Specifies whether to take a voicemail and who should do it"
    FixedOrderAgentsExtensionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        name:
          type: "string"
          description: "Name of agent extension"
    RuleInfo:
      type: "object"
      properties:
        index:
          type: "integer"
          description: "Forwarding number (or group) ordinal"
        ringCount:
          type: "integer"
          description: "Number of rings for a forwarding number (or group)"
        enabled:
          type: "boolean"
          description: "Forwarding number status. Returned only if `showInactiveNumbers`\
            \ is set to `true`"
        forwardingNumbers:
          type: "array"
          description: "Forwarding number (or group) data"
          items:
            $ref: "#/components/schemas/CreateAnsweringRuleForwardingNumberInfo"
    MissedCallInfo:
      type: "object"
      description: "Specifies behavior for the missed call scenario. Returned only\
        \ if `enabled` parameter of a voicemail is set to 'false'"
      properties:
        actionType:
          type: "string"
          description: "Specifies the action that should be executed on a missed call.\
            \ It can either be playing greeting message and disconnection, or sending\
            \ call to a calling group. If 'ConnectToExtension' is set, then calling\
            \ group extension should be specified"
          enum:
          - "PlayGreetingAndDisconnect"
          - "ConnectToExtension"
          - "ConnectToExternalNumber"
        extension:
          type: "object"
          $ref: "#/components/schemas/MissedCallExtensionInfo"
    UserAnsweringRuleListNavigationPage:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule?page=1&perPage=100"
    UserAnsweringRuleListRecord:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI to an answering rule resource"
          example: "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule/business-hours-rule"
        id:
          type: "string"
          description: "Internal identifier of an answering rule"
          example: "business-hours-rule"
        type:
          type: "string"
          description: "Type of an answering rule"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        name:
          type: "string"
          description: "Name of an answering rule specified by user"
        enabled:
          type: "boolean"
          description: "Specifies if an answering rule is active or inactive"
        sharedLines:
          $ref: "#/components/schemas/SharedLinesInfo"
    UpdateAnsweringRuleRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Identifier of an answering rule"
        forwarding:
          $ref: "#/components/schemas/ForwardingInfoCreateRuleRequest"
        enabled:
          type: "boolean"
          description: "Specifies if the rule is active or inactive. The default value\
            \ is 'True'"
        name:
          type: "string"
          description: "Name of an answering rule specified by user"
        callers:
          type: "array"
          description: "Answering rule will be applied when calls are received from\
            \ the specified caller(s)"
          items:
            $ref: "#/components/schemas/CallersInfoRequest"
        calledNumbers:
          type: "array"
          description: "Answering rules are applied when calling to selected number(s)"
          items:
            $ref: "#/components/schemas/CalledNumberInfo"
        schedule:
          $ref: "#/components/schemas/ScheduleInfo"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded"
          enum:
          - "ForwardCalls"
          - "UnconditionalForwarding"
          - "AgentQueue"
          - "TransferToExtension"
          - "TakeMessagesOnly"
          - "PlayAnnouncementOnly"
          - "SharedLines"
        type:
          type: "string"
          description: "Type of an answering rule"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        unconditionalForwarding:
          $ref: "#/components/schemas/UnconditionalForwardingInfo"
        queue:
          $ref: "#/components/schemas/QueueInfo"
        voicemail:
          $ref: "#/components/schemas/VoicemailInfo"
        missedCall:
          $ref: "#/components/schemas/MissedCallInfo"
        greetings:
          type: "array"
          description: "Greetings applied for an answering rule; only predefined greetings\
            \ can be applied, see Dictionary Greeting List"
          items:
            $ref: "#/components/schemas/GreetingInfo"
        screening:
          type: "string"
          description: "Call screening status. 'Off' - no call screening; 'NoCallerId'\
            \ - if caller ID is missing, then callers are asked to say their name\
            \ before connecting; 'UnknownCallerId' - if caller ID is not in contact\
            \ list, then callers are asked to say their name before connecting; 'Always'\
            \ - the callers are always asked to say their name before connecting.\
            \ The default value is 'Off'"
          enum:
          - "Off"
          - "NoCallerId"
          - "UnknownCallerId"
          - "Always"
        showInactiveNumbers:
          type: "boolean"
          description: "Indicates whether inactive numbers should be returned or not"
        transfer:
          $ref: "#/components/schemas/TransferredExtensionInfo"
    ForwardingInfoCreateRuleRequest:
      type: "object"
      properties:
        notifyMySoftPhones:
          type: "boolean"
          description: "Specifies if the first ring on desktop/mobile apps is enabled.\
            \ The default value is 'True'"
        notifyAdminSoftPhones:
          type: "boolean"
          description: "Deprecated parameter. Specifies if the administrator's softphone\
            \ (desktop application) is notified before forwarding the incoming call\
            \ to desk phones and forwarding numbers. The default value is 'True'."
          deprecated: true
        softPhonesRingCount:
          type: "integer"
          description: "Specifies delay between ring on apps and starting of a call\
            \ forwarding. To activate this parameter use the value > 0, and turn off\
            \ the `softPhonesAlwaysRing` setting. If the value is 1 or 0, the `softPhonesAlwaysRing`\
            \ setting cannot be turned off"
        softPhonesAlwaysRing:
          type: "boolean"
          description: "Specifies that desktop and mobile applications of the user\
            \ will ring till the end of their forwarding list. If set to 'True' then\
            \ `softPhonesRingCount` is ignored"
          default: true
        ringingMode:
          type: "string"
          description: "Specifies the order in which forwarding numbers ring. 'Sequentially'\
            \ means that forwarding numbers are ringing one at a time, in order of\
            \ priority. 'Simultaneously' means that forwarding numbers are ringing\
            \ all at the same time. The default value is 'Sequentially'"
          enum:
          - "Sequentially"
          - "Simultaneously"
        rules:
          type: "array"
          description: "Information on a call forwarding rule"
          items:
            $ref: "#/components/schemas/RuleInfoCreateRuleRequest"
        mobileTimeout:
          type: "boolean"
          description: "Deprecated parameter. Specifies if mobile timeout is activated\
            \ for the rule"
      description: "Forwarding parameters. Returned if 'ForwardCalls' is specified\
        \ in 'callHandlingAction'. These settings determine the forwarding numbers\
        \ to which the call will be forwarded"
    RuleInfoCreateRuleRequest:
      type: "object"
      properties:
        index:
          type: "integer"
          description: "Forwarding number (or group) ordinal. Not returned for inactive\
            \ numbers"
        ringCount:
          type: "integer"
          description: "Number of rings for a forwarding number (or group). For inactive\
            \ numbers the default value ('4') is returned"
        enabled:
          type: "boolean"
          description: "Phone number status"
        forwardingNumbers:
          type: "array"
          description: "Forwarding number (or group) data"
          items:
            $ref: "#/components/schemas/ForwardingNumberInfoRulesCreateRuleRequest"
    ForwardingNumberInfoRulesCreateRuleRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a forwarding number"
        type:
          type: "string"
          description: "Forwarding phone number type"
          enum:
          - "Home"
          - "Mobile"
          - "Work"
          - "PhoneLine"
          - "Outage"
          - "Other"
          - "BusinessMobilePhone"
          - "ExternalCarrier"
        uri:
          type: "string"
          description: "Canonical URI of a forwarding/call flip phone number"
        phoneNumber:
          type: "string"
          description: "Forwarding/Call flip phone number"
        label:
          type: "string"
          description: "Forwarding/Call flip number title"
    AnsweringRuleInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI to an answering rule resource"
        id:
          type: "string"
          description: "Internal identifier of an answering rule"
        type:
          type: "string"
          description: "Type of an answering rule"
          enum:
          - "BusinessHours"
          - "AfterHours"
          - "Custom"
        name:
          type: "string"
          description: "Name of an answering rule specified by user"
        enabled:
          type: "boolean"
          description: "Specifies if an answering rule is active or inactive"
        schedule:
          $ref: "#/components/schemas/ScheduleInfo"
        calledNumbers:
          type: "array"
          description: "Answering rules are applied when calling to selected number(s)"
          items:
            $ref: "#/components/schemas/CalledNumberInfo"
        callers:
          type: "array"
          description: "Answering rules are applied when calls are received from specified\
            \ caller(s)"
          items:
            $ref: "#/components/schemas/CallersInfo"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded"
          enum:
          - "ForwardCalls"
          - "UnconditionalForwarding"
          - "AgentQueue"
          - "TransferToExtension"
          - "TakeMessagesOnly"
          - "PlayAnnouncementOnly"
          - "SharedLines"
        forwarding:
          $ref: "#/components/schemas/ForwardingInfo"
        unconditionalForwarding:
          $ref: "#/components/schemas/UnconditionalForwardingInfo"
        queue:
          $ref: "#/components/schemas/QueueInfo"
        transfer:
          $ref: "#/components/schemas/TransferredExtensionInfo"
        voicemail:
          $ref: "#/components/schemas/VoicemailInfo"
        greetings:
          type: "array"
          description: "Greetings applied for an answering rule; only predefined greetings\
            \ can be applied, see Dictionary Greeting List"
          items:
            $ref: "#/components/schemas/GreetingInfo"
        screening:
          type: "string"
          description: "Call screening status. 'Off' - no call screening; 'NoCallerId'\
            \ - if caller ID is missing, then callers are asked to say their name\
            \ before connecting; 'UnknownCallerId' - if caller ID is not in contact\
            \ list, then callers are asked to say their name before connecting; 'Always'\
            \ - the callers are always asked to say their name before connecting.\
            \ The default value is 'Off'"
          enum:
          - "Off"
          - "NoCallerId"
          - "UnknownCallerId"
          - "Always"
        sharedLines:
          $ref: "#/components/schemas/SharedLinesInfo"
        missedCall:
          $ref: "#/components/schemas/MissedCallInfo"
    CreateInternalTextMessageRequest:
      required:
      - "text"
      type: "object"
      properties:
        from:
          $ref: "#/components/schemas/PagerCallerInfoRequest"
        replyOn:
          type: "integer"
          description: "Internal identifier of a message this message replies to"
        text:
          type: "string"
          description: "Text of a pager message. Max length is 1024 symbols (2-byte\
            \ UTF-16 encoded). If a character is encoded in 4 bytes in UTF-16 it is\
            \ treated as 2 characters, thus restricting the maximum message length\
            \ to 512 symbols"
          example: "hello world"
        to:
          type: "array"
          description: "Optional if replyOn parameter is specified. Receiver of a\
            \ pager message."
          items:
            $ref: "#/components/schemas/PagerCallerInfoRequest"
    GetInternalTextMessageInfoResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a message"
        uri:
          type: "string"
          description: "Canonical URI of a message"
        attachments:
          type: "array"
          description: "The list of message attachments"
          items:
            $ref: "#/components/schemas/MessageAttachmentInfo"
        availability:
          type: "string"
          description: "Message availability status. Message in 'Deleted' state is\
            \ still preserved with all its attachments and can be restored. 'Purged'\
            \ means that all attachments are already deleted and the message itself\
            \ is about to be physically deleted shortly"
          enum:
          - "Alive"
          - "Deleted"
          - "Purged"
        conversationId:
          type: "integer"
          format: "int64"
          description: "SMS and Pager only. Identifier of a conversation that the\
            \ message belongs to"
        conversation:
          $ref: "#/components/schemas/ConversationInfo"
        creationTime:
          type: "string"
          description: "Message creation datetime in ISO 8601 format including timezone,\
            \ for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        direction:
          type: "string"
          description: "Message direction. Note that for some message types not all\
            \ directions are allowed. For example voicemail messages can be only inbound"
          enum:
          - "Inbound"
          - "Outbound"
        from:
          $ref: "#/components/schemas/MessageStoreCallerInfoResponseFrom"
        lastModifiedTime:
          type: "string"
          description: "The datetime when the message was modified on server in ISO\
            \ 8601 format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        messageStatus:
          type: "string"
          description: "Message status. Different message types may have different\
            \ allowed status values. For outbound faxes the aggregated message status\
            \ is returned: If status for at least one recipient is 'Queued', then\
            \ 'Queued' value is returned If status for at least one recipient is 'SendingFailed',\
            \ then 'SendingFailed' value is returned In other cases Sent status is\
            \ returned"
          enum:
          - "Queued"
          - "Sent"
          - "Delivered"
          - "DeliveryFailed"
          - "SendingFailed"
          - "Received"
        pgToDepartment:
          type: "boolean"
          description: "'Pager' only. 'True' if at least one of the message recipients\
            \ is 'Department' extension"
        priority:
          type: "string"
          description: "Message priority"
          enum:
          - "Normal"
          - "High"
        readStatus:
          type: "string"
          description: "Message read status"
          enum:
          - "Read"
          - "Unread"
        subject:
          type: "string"
          description: "Message subject. For SMS and Pager messages it replicates\
            \ message text which is also returned as an attachment"
        to:
          type: "array"
          description: "Recipient information"
          items:
            $ref: "#/components/schemas/MessageStoreCallerInfoResponseTo"
        type:
          type: "string"
          description: "Message type"
          enum:
          - "Fax"
          - "SMS"
          - "VoiceMail"
          - "Pager"
          - "Text"
    PagerCallerInfoRequest:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Extension identifier"
          example: "123456789"
        extensionNumber:
          type: "string"
          description: "Extension number"
          example: "105"
      description: "Sender of a pager message."
    RoleIdResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
    AuthProfileResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        permissions:
          type: "array"
          items:
            $ref: "#/components/schemas/ActivePermissionResource"
    ActivePermissionResource:
      type: "object"
      properties:
        permission:
          $ref: "#/components/schemas/PermissionIdResource"
        effectiveRole:
          $ref: "#/components/schemas/RoleIdResource"
        scopes:
          type: "array"
          items:
            type: "string"
            enum:
            - "Account"
            - "AllExtensions"
            - "Federation"
            - "NonUserExtensions"
            - "RoleBased"
            - "Self"
            - "UserExtensions"
    AuthProfileCheckResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        successful:
          type: "boolean"
          default: false
        details:
          $ref: "#/components/schemas/ActivePermissionResource"
    UserCallQueues:
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of the queues where the extension is an agent"
          items:
            $ref: "#/components/schemas/QueueShortInfoResource"
    QueueShortInfoResource:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Call queue extension identifier"
        name:
          type: "string"
          description: "Call queue name (read-only)"
    CreateUserEmergencyLocationRequest:
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of a new personal emergency response location"
        address:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
    EmergencyLocationsResource:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/EmergencyLocationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    LocationUpdatesEmergencyAddressInfoRequest:
      type: "object"
      properties:
        country:
          type: "string"
          description: "Country name"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
        countryIsoCode:
          type: "string"
          description: "ISO code of a country"
        countryName:
          type: "string"
          description: "Full name of a country"
        customerName:
          type: "string"
          description: "Customer name"
        state:
          type: "string"
          description: "State/Province name. Mandatory for the USA, the UK and Canada"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        stateIsoCode:
          type: "string"
          description: "ISO code of a state"
        stateName:
          type: "string"
          description: "Full name of a state"
        city:
          type: "string"
          description: "City name"
        street:
          type: "string"
          description: "First line address"
        street2:
          type: "string"
          description: "Second line address (apartment, suite, unit, building, floor,\
            \ etc.)"
        zip:
          type: "string"
          description: "Postal (Zip) code"
      description: "Emergency address assigned to the switch. Only one of a pair `emergencyAddress`\
        \ or `emergencyLocationId` should be specified, otherwise the error is returned"
    GetExtensionForwardingNumberListResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the forwarding number list resource"
        records:
          type: "array"
          description: "List of forwarding phone numbers"
          items:
            $ref: "#/components/schemas/ForwardingNumberInfo"
        navigation:
          $ref: "#/components/schemas/CallHandlingNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallHandlingPagingInfo"
    ForwardingNumberInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a forwarding/call flip phone number"
        uri:
          type: "string"
          description: "Canonical URI of a forwarding/call flip phone number"
        phoneNumber:
          type: "string"
          description: "Forwarding/Call flip phone number"
        label:
          type: "string"
          description: "Forwarding/Call flip number title"
        features:
          type: "array"
          description: "Type of option this phone number is used for. Multiple values\
            \ are accepted"
          items:
            type: "string"
            enum:
            - "CallFlip"
            - "CallForwarding"
        flipNumber:
          type: "string"
          description: "Number assigned to the call flip phone number, corresponds\
            \ to the shortcut dial number"
        device:
          $ref: "#/components/schemas/CreateForwardingNumberDeviceInfo"
        type:
          type: "string"
          description: "Forwarding phone number type"
          enum:
          - "Home"
          - "Mobile"
          - "Work"
          - "PhoneLine"
          - "Outage"
          - "Other"
          - "BusinessMobilePhone"
          - "ExternalCarrier"
    ForwardingNumberShortInfo:
      type: "object"
      properties:
        forwardingNumberId:
          type: "string"
          description: "Forwarding number internal identifier"
    CreateForwardingNumberDeviceInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the other extension device"
      description: "Forwarding device information. Applicable for 'PhoneLine' type\
        \ only. Cannot be specified together with 'phoneNumber' parameter"
    CreateForwardingNumberRequest:
      type: "object"
      properties:
        flipNumber:
          type: "integer"
          description: "Number assigned to the call flip phone number, corresponds\
            \ to the shortcut dial number"
        phoneNumber:
          type: "string"
          description: "Forwarding/Call flip phone number"
        label:
          type: "string"
          description: "Forwarding/Call flip number title"
        type:
          type: "string"
          description: "Forwarding/Call flip phone type. If specified, 'label' attribute\
            \ value is ignored. The default value is 'Other'"
          enum:
          - "PhoneLine"
          - "Home"
          - "Mobile"
          - "Work"
          - "Other"
        device:
          $ref: "#/components/schemas/CreateForwardingNumberDeviceInfo"
    DeleteForwardingNumbersRequest:
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of forwarding number identifiers"
          items:
            $ref: "#/components/schemas/ForwardingNumberShortInfo"
    UpdateForwardingNumberRequest:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Forwarding/Call flip phone number"
        label:
          type: "string"
          description: "Forwarding/Call flip number title"
        flipNumber:
          type: "string"
          description: "Number assigned to the call flip phone number, corresponds\
            \ to the shortcut dial number"
        type:
          type: "string"
          description: "Forwarding phone number type"
          enum:
          - "Home"
          - "Mobile"
          - "Work"
          - "PhoneLine"
          - "Outage"
          - "Other"
          - "BusinessMobilePhone"
          - "ExternalCarrier"
    MeetingsResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/MeetingResponseResource"
        paging:
          $ref: "#/components/schemas/MeetingsPagingInfo"
        navigation:
          $ref: "#/components/schemas/MeetingsNavigationInfo"
    MeetingLinks:
      type: "object"
      properties:
        startUri:
          type: "string"
        joinUri:
          type: "string"
      description: "Meeting links"
    MeetingsTimezoneResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
    RecurrenceInfo:
      type: "object"
      properties:
        frequency:
          type: "string"
          description: "Recurrence time frame"
          enum:
          - "Daily"
          - "Weekly"
          - "Monthly"
        interval:
          type: "integer"
          description: "Reccurence interval. The supported ranges are: 1-90 for `Daily`;\
            \ 1-12 for `Weekly`; 1-3 for `Monthly`"
        monthlyByWeek:
          type: "string"
          description: "Supported together with `weeklyByDay`"
          enum:
          - "Last"
          - "First"
          - "Second"
          - "Third"
          - "Fourth"
        weeklyByDay:
          type: "string"
          description: "This field is used only if you're scheduling a recurring meeting\
            \ of type `3` to state which day in a month the meeting should recur.\
            \ The value range is 1 - 31. For instance, if the meeting should recur\
            \ each month on 23rd, provide `23` as the value of this field and `1`\
            \ as the value of the recurrence `interval` field. And if the meeting\
            \ should recur every three months, on 23rd of the month, change the value\
            \ of the recurrence `interval` field to `3`."
          enum:
          - "Sunday"
          - "Monday"
          - "Tuesday"
          - "Wednesday"
          - "Thursday"
          - "Friday"
          - "Saturday"
        weeklyByDays:
          type: "string"
          description: "This field is used only if you're scheduling a recurring meeting\
            \ of type `2` to state which day(s) of the week the meeting should recur.\
            \ The values are: 1 - Sunday; 2 - Monday; 3- Tuesday; 4 - Wednesday; 5\
            \ - Thursday; 6 - Friday; 7 - Saturday. Multiple values are supported,\
            \ should be specified separated by comma"
          enum:
          - "Sunday"
          - "Monday"
          - "Tuesday"
          - "Wednesday"
          - "Thursday"
          - "Friday"
          - "Saturday"
        monthlyByDay:
          type: "integer"
          description: "The supported range is 1-31"
        monthlyByWeekDay:
          type: "integer"
          description: "This field is used only if you're scheduling a recurring meeting\
            \ of type `3` to state a specific day in a week when the monthly meeting\
            \ should recur; it works together with `MonthlyByWeek` field. The values\
            \ are: 1 - Sunday; 2 - Monday; 3 - Tuesday; 4 - Wednesday; 5 - Thursday;\
            \ 6 - Friday; 7- Saturday"
        count:
          type: "integer"
          description: "Number of meeting occurrences"
        until:
          type: "string"
          description: "Meeting expiration datetime"
      description: "Meeting recurrence information"
    HostInfoRequest:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the meeting host resource"
        id:
          type: "string"
          description: "Internal identifier of an extension which is assigned to be\
            \ a meeting host. The default value is currently logged-in extension identifier"
      description: "Meeting host information"
    MeetingsPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          format: "int32"
        totalPages:
          type: "integer"
          format: "int32"
        perPage:
          type: "integer"
          format: "int32"
        totalElements:
          type: "integer"
          format: "int32"
        pageStart:
          type: "integer"
          format: "int32"
        pageEnd:
          type: "integer"
          format: "int32"
    MeetingRequestResource:
      type: "object"
      properties:
        topic:
          type: "string"
          description: "Custom topic of a meeting"
        meetingType:
          type: "string"
          enum:
          - "Instant"
          - "Scheduled"
          - "ScheduledRecurring"
          - "Recurring"
        schedule:
          $ref: "#/components/schemas/MeetingScheduleResource"
        password:
          type: "string"
          description: "Meeting password"
        host:
          $ref: "#/components/schemas/HostInfoRequest"
        allowJoinBeforeHost:
          type: "boolean"
          default: false
        startHostVideo:
          type: "boolean"
          default: false
        startParticipantsVideo:
          type: "boolean"
          description: "Starting meetings with participant video on/off (true/false)"
          default: false
        usePersonalMeetingId:
          type: "boolean"
          description: "If true, then personal user's meeting ID is applied for creation\
            \ of this meeting"
        audioOptions:
          type: "array"
          items:
            type: "string"
            enum:
            - "Phone"
            - "ComputerAudio"
        recurrence:
          $ref: "#/components/schemas/RecurrenceInfo"
        autoRecordType:
          type: "string"
          description: "Automatic record type"
          default: "none"
          enum:
          - "local"
          - "cloud"
          - "none"
        enforceLogin:
          type: "boolean"
          description: "If true, then only signed-in users can join this meeting"
        muteParticipantsOnEntry:
          type: "boolean"
          description: "If true, then participants are muted on entry"
        enableWaitingRoom:
          type: "boolean"
          description: "If true, then the waiting room for participants is enabled"
        globalDialInCountries:
          type: "array"
          description: "List of global dial-in countries (eg. US, UK, AU, etc.)"
          items:
            type: "string"
    MeetingScheduleResource:
      type: "object"
      properties:
        startTime:
          type: "string"
        durationInMinutes:
          type: "integer"
          format: "int32"
        timeZone:
          $ref: "#/components/schemas/MeetingsTimezoneResource"
      description: "Timing of a meeting"
    MeetingResponseResource:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a meeting resource"
          format: "uri"
        uuid:
          type: "string"
          description: "Universally unique identifier of a meeting\""
        id:
          type: "string"
          description: "Internal identifier of a meeting"
        topic:
          type: "string"
          description: "Custom topic of a meeting"
        meetingType:
          type: "string"
          enum:
          - "Instant"
          - "Scheduled"
          - "ScheduledRecurring"
          - "Recurring"
        password:
          type: "string"
          description: "Meeting password"
        h323Password:
          type: "string"
        status:
          type: "string"
          description: "Status of a meeting"
        links:
          $ref: "#/components/schemas/MeetingLinks"
        schedule:
          $ref: "#/components/schemas/MeetingScheduleResource"
        host:
          $ref: "#/components/schemas/HostInfoRequest"
        allowJoinBeforeHost:
          type: "boolean"
          description: "If true, then participants can join the meeting before host\
            \ arrives"
          default: false
        startHostVideo:
          type: "boolean"
          description: "Starting meetings with host video on/off (true/false)"
          default: false
        startParticipantsVideo:
          type: "boolean"
          description: "Starting meetings with participant video on/off (true/false)"
          default: false
        audioOptions:
          type: "array"
          items:
            type: "string"
            enum:
            - "Phone"
            - "ComputerAudio"
        reccurence:
          $ref: "#/components/schemas/RecurrenceInfo"
        autoRecordType:
          type: "string"
          description: "Automatic record type"
          default: "none"
          enum:
          - "local"
          - "cloud"
          - "none"
        enforceLogin:
          type: "boolean"
          description: "If true, then only signed-in users can join this meeting"
        muteParticipantsOnEntry:
          type: "boolean"
          description: "If true, then participants are muted on entry"
        enableWaitingRoom:
          type: "boolean"
          description: "If true, then the waiting room for participants is enabled"
        globalDialInCountries:
          type: "array"
          description: "List of global dial-in countries (eg. US, UK, AU, etc.)"
          items:
            type: "string"
    MeetingsNavigationInfo:
      type: "object"
      properties:
        nextPage:
          $ref: "#/components/schemas/MeetingsNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/MeetingsNavigationInfoUri"
        firstPage:
          $ref: "#/components/schemas/MeetingsNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/MeetingsNavigationInfoUri"
    MeetingsNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
    MeetingUserSettingsResponse:
      type: "object"
      properties:
        recording:
          $ref: "#/components/schemas/UserMeetingRecordingSetting"
        scheduleMeeting:
          $ref: "#/components/schemas/ScheduleUserMeetingInfo"
        telephony:
          $ref: "#/components/schemas/TelephonyUserMeetingSettings"
    TelephonyUserMeetingSettings:
      type: "object"
      properties:
        thirdPartyAudio:
          type: "boolean"
          description: "ThirdParty audio option"
        audioConferenceInfo:
          type: "boolean"
          description: "Users can join the meeting using the existing 3rd party audio\
            \ configuration"
    PublicMeetingInvitationResponse:
      type: "object"
      properties:
        invitation:
          type: "string"
          description: "Meeting invitation"
    MeetingsCountryResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
        name:
          type: "string"
        isoCode:
          type: "string"
        callingCode:
          type: "string"
        emergencyCalling:
          type: "boolean"
          default: false
        numberSelling:
          type: "boolean"
          default: false
        loginAllowed:
          type: "boolean"
          default: false
    MeetingExternalUserInfoResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        userId:
          type: "string"
        accountId:
          type: "string"
        userType:
          type: "integer"
          format: "int64"
        userToken:
          type: "string"
        hostKey:
          type: "string"
        personalMeetingId:
          type: "string"
        personalLink:
          type: "string"
          description: "Link to the user's personal meeting room, used as an alias\
            \ for personal meeting URL (with personal meeting ID)"
          example: "https://meetings.ringcentral.com/my/jsmith"
        usePmiForInstantMeetings:
          type: "boolean"
          description: "Enables using personal meeting ID for instant meetings"
          default: false
    DialInNumberResource:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
        formattedNumber:
          type: "string"
        location:
          type: "string"
        country:
          $ref: "#/components/schemas/MeetingsCountryResource"
    MeetingServiceInfoResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        supportUri:
          type: "string"
        intlDialInNumbersUri:
          type: "string"
        externalUserInfo:
          $ref: "#/components/schemas/MeetingExternalUserInfoResource"
        dialInNumbers:
          type: "array"
          items:
            $ref: "#/components/schemas/DialInNumberResource"
    MeetingServiceInfoRequest:
      type: "object"
      properties:
        externalUserInfo:
          $ref: "#/components/schemas/MeetingExternalUserInfoResource"
    DetailedExtensionPresenceWithSIPEventBody:
      type: "object"
      description: "Notification payload body"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
          default: "~"
        telephonyStatus:
          type: "string"
          description: "Telephony presence status. Returned if telephony status is\
            \ changed."
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        activeCalls:
          type: "array"
          description: "List of the latest 7 active calls on extension"
          items:
            $ref: "#/components/schemas/ActiveCallInfo"
        sequence:
          type: "integer"
          format: "int32"
          description: "Order number of a notification to state the chronology"
        presenceStatus:
          type: "string"
          description: "Aggregated presence status, calculated from a number of sources"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        userStatus:
          type: "string"
          description: "User-defined presence status (as previously published by the\
            \ user)"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        meetingStatus:
          type: "string"
          description: "Meetings presence status"
          enum:
          - "Connected"
          - "Disconnected"
        dndStatus:
          type: "string"
          description: "Extended DnD (Do not Disturb) status"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptAnyCalls"
          - "DoNotAcceptDepartmentCalls"
          - "TakeDepartmentCallsOnly"
        allowSeeMyPresence:
          type: "boolean"
          description: "If 'True' enables other extensions to see the extension presence\
            \ status"
        ringOnMonitoredCall:
          type: "boolean"
          description: "If 'True' enables to ring extension phone, if any user monitored\
            \ by this extension is ringing"
        pickUpCallsOnHold:
          type: "boolean"
          description: "If 'True' enables the extension user to pick up a monitored\
            \ line on hold"
        totalActiveCalls:
          type: "integer"
          format: "int32"
          description: "Total number of active calls on extension at the present moment"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
    IncomingCallEvent:
      type: "object"
      properties:
        aps:
          $ref: "#/components/schemas/APSInfo"
        event:
          type: "string"
          description: "Event filter name"
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        timestamp:
          type: "string"
          format: "date-time"
          description: "The timestamp of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example 2016-03-10T18:07:52.534Z"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
          default: "~"
        action:
          type: "string"
          description: "Calling action, for example 'StartRing'"
        sessionId:
          type: "string"
          description: "Identifier of a call session"
        serverId:
          type: "string"
          description: "Identifier of a server"
        from:
          type: "string"
          description: "Phone number of a caller. For GCM transport type '_from' property\
            \ should be used"
        fromName:
          type: "string"
          description: "Caller name"
        to:
          type: "string"
          description: "Phone number of a callee"
        toName:
          type: "string"
          description: "Callee name"
        sid:
          type: "string"
          description: "Unique identifier of a session"
        toUrl:
          type: "string"
          description: "SIP proxy registration name"
        srvLvl:
          type: "string"
          description: "User data"
        srvLvlExt:
          type: "string"
          description: "User data"
        recUrl:
          type: "string"
          description: "File containing recorded caller name"
        pn_ttl:
          type: "integer"
          format: "int32"
          description: "Notification lifetime value in seconds, the default value\
            \ is 30 seconds"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
    ExtensionPresenceEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter name"
        timestamp:
          type: "string"
          format: "date-time"
          description: "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/ExtensionPresenceEventBody"
    DetailedExtensionPresenceWithSIPEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter name"
        timestamp:
          type: "string"
          format: "date-time"
          description: "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/DetailedExtensionPresenceWithSIPEventBody"
    APSInfo:
      type: "object"
      description: "APS (Apple Push Service) information/ priority data"
      properties:
        content-available:
          type: "integer"
          format: "int32"
          description: "If the value is '1' then notification is turned on even if\
            \ the application is in background"
    APNSInfo:
      type: "object"
      description: "APNS (Apple Push Notification Service) information"
      properties:
        aps:
          $ref: "#/components/schemas/APSInfo"
    DetailedExtensionPresenceEventBody:
      type: "object"
      description: "Notification payload body"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
          default: "~"
        telephonyStatus:
          type: "string"
          description: "Telephony presence status. Returned if telephony status is\
            \ changed."
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        activeCalls:
          type: "array"
          description: "List of the latest 7 active calls on extension"
          items:
            $ref: "#/components/schemas/ActiveCallInfoWithoutSIP"
        sequence:
          type: "integer"
          format: "int32"
          description: "Order number of a notification to state the chronology"
        presenceStatus:
          type: "string"
          description: "Aggregated presence status, calculated from a number of sources"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        userStatus:
          type: "string"
          description: "User-defined presence status (as previously published by the\
            \ user)"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        meetingStatus:
          type: "string"
          description: "Meetings presence status"
          enum:
          - "Connected"
          - "Disconnected"
        dndStatus:
          type: "string"
          description: "Extended DnD (Do not Disturb) status"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptAnyCalls"
          - "DoNotAcceptDepartmentCalls"
          - "TakeDepartmentCallsOnly"
        allowSeeMyPresence:
          type: "boolean"
          description: "If 'True' enables other extensions to see the extension presence\
            \ status"
        ringOnMonitoredCall:
          type: "boolean"
          description: "If 'True' enables to ring extension phone, if any user monitored\
            \ by this extension is ringing"
        pickUpCallsOnHold:
          type: "boolean"
          description: "If 'True' enables the extension user to pick up a monitored\
            \ line on hold"
        totalActiveCalls:
          type: "integer"
          format: "int32"
          description: "Total number of active calls on extension at the present moment"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
    PresenceInfoRequest:
      type: "object"
      properties:
        userStatus:
          type: "string"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        dndStatus:
          type: "string"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptDepartmentCalls"
          - "TakeDepartmentCallsOnly"
          - "DoNotAcceptAnyCalls"
          - "Unknown"
        message:
          maxLength: 75
          minLength: 0
          type: "string"
        allowSeeMyPresence:
          type: "boolean"
          default: false
        ringOnMonitoredCall:
          type: "boolean"
          default: false
        pickUpCallsOnHold:
          type: "boolean"
          default: false
    ActiveCallInfoWithoutSIP:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a call"
        direction:
          type: "string"
          description: "Call direction"
          enum:
          - "Inbound"
          - "Outbound"
        queueCall:
          type: "boolean"
          description: "Identifies if a call belongs to the call queue"
        from:
          type: "string"
          description: "Phone number or extension number of a caller. For GCM transport\
            \ type '_from' property should be used"
        fromName:
          type: "string"
          description: "Name of a caller"
        to:
          type: "string"
          description: "Phone number or extension number of a callee"
        toName:
          type: "string"
          description: "Name of a callee"
        partyId:
          type: "string"
          description: "Internal identifier of a call party"
        startTime:
          type: "string"
          description: "Time when the call is actually started"
        sessionId:
          type: "string"
          description: "Internal identifier of a call session"
        telephonySessionId:
          type: "string"
          description: "Telephony identifier of a call session"
        telephonyStatus:
          type: "string"
          description: "Telephony call status"
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        terminationType:
          type: "string"
          description: "Type of call termination. Supported for calls in 'NoCall'\
            \ status. If the returned termination type is 'intermediate' it means\
            \ the call is not actually ended, the connection is established on one\
            \ of the devices"
          enum:
          - "final"
          - "intermediate"
        callInfo:
          $ref: "#/components/schemas/CallInfoCQ"
    ExtensionPresenceEventBody:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension. Optional parameter"
          default: "~"
        telephonyStatus:
          type: "string"
          description: "Telephony presence status. Returned if telephony status is\
            \ changed."
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        sequence:
          type: "integer"
          format: "int32"
          description: "Order number of a notification to state the chronology"
        presenceStatus:
          type: "string"
          description: "Aggregated presence status, calculated from a number of sources"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        userStatus:
          type: "string"
          description: "User-defined presence status (as previously published by the\
            \ user)"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        dndStatus:
          type: "string"
          description: "Extended DnD (Do not Disturb) status"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptAnyCalls"
          - "DoNotAcceptDepartmentCalls"
          - "TakeDepartmentCallsOnly"
        allowSeeMyPresence:
          type: "boolean"
          description: "If 'True' enables other extensions to see the extension presence\
            \ status"
        ringOnMonitoredCall:
          type: "boolean"
          description: "If 'True' enables to ring extension phone, if any user monitored\
            \ by this extension is ringing"
        pickUpCallsOnHold:
          type: "boolean"
          description: "If 'True' enables the extension user to pick up a monitored\
            \ line on hold"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
    PresenceInfoResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
          description: "Link to the presence resource"
        userStatus:
          type: "string"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
        dndStatus:
          type: "string"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptDepartmentCalls"
          - "TakeDepartmentCallsOnly"
          - "DoNotAcceptAnyCalls"
          - "Unknown"
        message:
          maxLength: 75
          minLength: 0
          type: "string"
        allowSeeMyPresence:
          type: "boolean"
          default: false
        ringOnMonitoredCall:
          type: "boolean"
          default: false
        pickUpCallsOnHold:
          type: "boolean"
          default: false
        activeCalls:
          type: "array"
          items:
            $ref: "#/components/schemas/ActiveCallInfo"
        extension:
          $ref: "#/components/schemas/GetPresenceExtensionInfo"
        meetingStatus:
          type: "string"
          description: "Meetings presence status"
          enum:
          - "Connected"
          - "Disconnected"
        telephonyStatus:
          type: "string"
          description: "Telephony presence status. Returned if telephony status is\
            \ changed"
          enum:
          - "NoCall"
          - "CallConnected"
          - "Ringing"
          - "OnHold"
          - "ParkedCall"
        presenceStatus:
          type: "string"
          description: "Aggregated presence status, calculated from a number of sources"
          enum:
          - "Offline"
          - "Busy"
          - "Available"
    DetailedExtensionPresenceEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter name"
        timestamp:
          type: "string"
          format: "date-time"
          description: "Timestamp when this notification was sent in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/DetailedExtensionPresenceEventBody"
    MissedCallEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        pn_apns:
          $ref: "#/components/schemas/APNSInfo"
        event:
          type: "string"
          description: "Event filter name"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        timestamp:
          type: "string"
          format: "date-time"
          description: "The timestamp of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example 2016-03-10T18:07:52.534Z"
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
          default: "~"
        action:
          type: "string"
          description: "Calling action, for example 'StartRing'"
        sessionId:
          type: "string"
          description: "Identifier of a call session"
        serverId:
          type: "string"
          description: "Identifier of a server"
        from:
          type: "string"
          description: "Phone number of a caller. For GCM transport type '_from' property\
            \ should be used"
        fromName:
          type: "string"
          description: "Caller name"
        to:
          type: "string"
          description: "Phone number of a callee"
        toName:
          type: "string"
          description: "Callee name"
        sid:
          type: "string"
          description: "Unique identifier of a session"
        toUrl:
          type: "string"
          description: "SIP proxy registration name"
        srvLvl:
          type: "string"
          description: "User data"
        srvLvlExt:
          type: "string"
          description: "User data"
        recUrl:
          type: "string"
          description: "File containing recorded caller name"
        pn_ttl:
          type: "integer"
          format: "int32"
          description: "Notification lifetime value in seconds, the default value\
            \ is 30 seconds"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
    MessageAttachmentInfoIntId:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of a message attachment"
          format: "int64"
        uri:
          type: "string"
          description: "Canonical URI of a message attachment"
        type:
          type: "string"
          description: "Type of message attachment"
          enum:
          - "AudioRecording"
          - "AudioTranscription"
          - "Text"
          - "SourceDocument"
          - "RenderedDocument"
          - "MmsAttachment"
        contentType:
          type: "string"
          description: "MIME type for a given attachment, for instance 'audio/wav'"
        vmDuration:
          type: "integer"
          description: "Voicemail only Duration of the voicemail in seconds"
        filename:
          type: "string"
          description: "Name of a file attached"
        size:
          type: "integer"
          description: "Size of attachment in bytes"
    CallerInfoTo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
        name:
          type: "string"
        location:
          type: "string"
        messageStatus:
          type: "string"
          enum:
          - "Sent"
          - "SendingFailed"
          - "Queued"
        faxErrorCode:
          type: "string"
          enum:
          - "AllLinesInUse"
          - "Undefined"
          - "NoFaxSendPermission"
          - "NoInternationalPermission"
          - "NoFaxMachine"
          - "NoAnswer"
          - "LineBusy"
          - "CallerHungUp"
          - "NotEnoughCredits"
          - "SentPartially"
          - "InternationalCallingDisabled"
          - "DestinationCountryDisabled"
          - "UnknownCountryCode"
          - "NotAccepted"
          - "InvalidNumber"
          - "CallDeclined"
          - "TooManyCallsPerLine"
          - "CallFailed"
          - "RenderingFailed"
          - "TooManyPages"
          - "ReturnToDBQueue"
          - "NoCallTime"
          - "WrongNumber"
          - "ProhibitedNumber"
          - "InternalError"
          - "FaxSendingProhibited"
          - "ThePhoneIsBlacklisted"
          - "UserNotFound"
          - "ConvertError"
          - "DBGeneralError"
          - "SkypeBillingFailed"
          - "AccountSuspended"
          - "ProhibitedDestination"
          - "InternationalDisabled"
    FaxResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Internal identifier of a message"
          format: "int64"
        uri:
          type: "string"
          description: "Canonical URI of a message"
        type:
          type: "string"
          description: "Message type - 'Fax'"
        from:
          $ref: "#/components/schemas/CallerInfoFrom"
        to:
          type: "array"
          description: "Recipient information"
          items:
            $ref: "#/components/schemas/CallerInfoTo"
        creationTime:
          type: "string"
          description: "Message creation datetime in ISO 8601 format including timezone,\
            \ for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        readStatus:
          type: "string"
          description: "Message read status"
          enum:
          - "Read"
          - "Unread"
        priority:
          type: "string"
          description: "Message priority"
          enum:
          - "Normal"
          - "High"
        attachments:
          type: "array"
          description: "The list of message attachments"
          items:
            $ref: "#/components/schemas/MessageAttachmentInfoIntId"
        direction:
          type: "string"
          description: "Message direction"
          enum:
          - "Inbound"
          - "Outbound"
        availability:
          type: "string"
          description: "Message availability status. Message in 'Deleted' state is\
            \ still preserved with all its attachments and can be restored. 'Purged'\
            \ means that all attachments are already deleted and the message itself\
            \ is about to be physically deleted shortly"
          enum:
          - "Alive"
          - "Deleted"
          - "Purged"
        messageStatus:
          type: "string"
          description: "Message status. 'Queued' - the message is queued for sending;\
            \ 'Sent' - a message is successfully sent; 'SendingFailed' - a message\
            \ sending attempt has failed; 'Received' - a message is received (inbound\
            \ messages have this status by default)"
          enum:
          - "Queued"
          - "Sent"
          - "SendingFailed"
          - "Received"
        faxResolution:
          type: "string"
          description: "Resolution of a fax message. ('High' for black and white image\
            \ scanned at 200 dpi, 'Low' for black and white image scanned at 100 dpi)"
          enum:
          - "High"
          - "Low"
        faxPageCount:
          type: "integer"
          description: "Page count in a fax message"
        lastModifiedTime:
          type: "string"
          description: "Datetime when the message was modified on server in ISO 8601\
            \ format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        coverIndex:
          type: "integer"
          description: "Cover page identifier. If coverIndex is set to '0' (zero)\
            \ cover page is not attached. For the list of available cover page identifiers\
            \ (1-13) please call the Fax Cover Pages method. If not specified, the\
            \ default cover page is attached (which is configured in 'Outbound Fax\
            \ Settings')"
        coverPageText:
          type: "string"
          description: "Cover page text, entered by the fax sender and printed on\
            \ the cover page. Maximum length is limited to 1024 symbols"
    CallerInfoFrom:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
        name:
          type: "string"
        location:
          type: "string"
      description: "Sender information"
    BusinessSiteCollectionResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/RolesBusinessSiteResource"
    RolesCountryResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
        name:
          type: "string"
        isoCode:
          type: "string"
        callingCode:
          type: "string"
        emergencyCalling:
          type: "boolean"
        numberSelling:
          type: "boolean"
        loginAllowed:
          type: "boolean"
        freeSoftphoneLine:
          type: "boolean"
        signupAllowed:
          type: "boolean"
    CurrencyResource:
      type: "object"
      properties:
        id:
          type: "string"
        code:
          type: "string"
        name:
          type: "string"
        symbol:
          type: "string"
        minorSymbol:
          type: "string"
    BusinessSiteCollectionRequest:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/RolesBusinessSiteResource"
    RolesBusinessSiteResource:
      type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
        email:
          type: "string"
        code:
          type: "string"
        name:
          type: "string"
        extensionNumber:
          type: "string"
        callerIdName:
          type: "string"
        operator:
          $ref: "#/components/schemas/BasicExtensionInfoResource"
        regionalSettings:
          $ref: "#/components/schemas/RolesRegionalSettingsResource"
        businessAddress:
          $ref: "#/components/schemas/ContactAddressInfoResource"
    BasicExtensionInfoResource:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        extensionNumber:
          type: "string"
    ContactAddressInfoResource:
      type: "object"
      properties:
        street:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        zip:
          type: "string"
        country:
          type: "string"
    RolesTimezoneResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        bias:
          type: "string"
    RolesLanguageResource:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        localeCode:
          type: "string"
    RolesRegionalSettingsResource:
      type: "object"
      properties:
        timezone:
          $ref: "#/components/schemas/RolesTimezoneResource"
        homeCountry:
          $ref: "#/components/schemas/RolesCountryResource"
        language:
          $ref: "#/components/schemas/RolesLanguageResource"
        greetingLanguage:
          $ref: "#/components/schemas/RolesLanguageResource"
        formattingLocale:
          $ref: "#/components/schemas/RolesLanguageResource"
        timeFormat:
          type: "string"
          enum:
          - "12h"
          - "24h"
        currency:
          $ref: "#/components/schemas/CurrencyResource"
    PersonalContactResource:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of the contact"
          example: "https://platform.ringcentral.com/restapi/v1.0/account/230919004/extension/230919004/address-book/contact/623045004"
        availability:
          type: "string"
          description: "This property has a special meaning only on Address Book Sync\
            \ (e.g. a contact can be `Deleted`). For simple contact list reading it\
            \ has always the default value - `Alive`"
          enum:
          - "Alive"
          - "Deleted"
          - "Purged"
        email:
          type: "string"
          description: "Email of the contact"
          example: "charlie.williams@example.com"
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of the contact"
          example: 623045004
        notes:
          type: "string"
          description: "Notes for the contact"
          example: "#1 Customer"
        company:
          type: "string"
          description: "Company name of the contact"
          example: "Example, Inc."
        firstName:
          type: "string"
          description: "First name of the contact"
          example: "Charlie"
        lastName:
          type: "string"
          description: "Last name of the contact"
          example: "Williams"
        jobTitle:
          type: "string"
          description: "Job title of the contact"
          example: "CEO"
        birthday:
          type: "string"
          description: "Date of birth of the contact"
          format: "date-time"
        webPage:
          type: "string"
          description: "The contact home page URL"
          example: "http://www.example.com"
        middleName:
          type: "string"
          description: "Middle name of the contact"
          example: "J"
        nickName:
          type: "string"
          description: "Nick name of the contact"
          example: "The Boss"
        email2:
          type: "string"
          description: "2nd email of the contact"
          example: "charlie-example@gmail.com"
        email3:
          type: "string"
          description: "3rd email of the contact"
          example: "theboss-example@hotmail.com"
        homePhone:
          type: "string"
          description: "Home phone number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        homePhone2:
          type: "string"
          description: "2nd home phone number of the contact in e.164 (with \"+\"\
            ) format"
          example: "+15551234567"
        businessPhone:
          type: "string"
          description: "Business phone of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessPhone2:
          type: "string"
          description: "2nd business phone of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        mobilePhone:
          type: "string"
          description: "Mobile phone of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessFax:
          type: "string"
          description: "Business fax number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        companyPhone:
          type: "string"
          description: "Company number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        assistantPhone:
          type: "string"
          description: "Phone number of the contact assistant in e.164 (with \"+\"\
            ) format"
          example: "+15551234567"
        carPhone:
          type: "string"
          description: "Car phone number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        otherPhone:
          type: "string"
          description: "Other phone number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        otherFax:
          type: "string"
          description: "Other fax number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        callbackPhone:
          type: "string"
          description: "Callback phone number of the contact in e.164 (with \"+\"\
            ) format"
          example: "+15551234567"
        businessAddress:
          $ref: "#/components/schemas/ContactAddressInfo"
        homeAddress:
          $ref: "#/components/schemas/ContactAddressInfo"
        otherAddress:
          $ref: "#/components/schemas/ContactAddressInfo"
        ringtoneIndex:
          type: "string"
          description: "Contact ringtone. Max number of symbols is 64"
    UserContactsGroupsInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of address book groups"
      description: "Information on address book groups"
    UserContactsNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    ContactList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "link to the list of user personal contacts"
        records:
          type: "array"
          description: "List of personal contacts from the extension address book"
          items:
            $ref: "#/components/schemas/PersonalContactResource"
        navigation:
          $ref: "#/components/schemas/UserContactsNavigationInfo"
        paging:
          $ref: "#/components/schemas/UserContactsPagingInfo"
        groups:
          $ref: "#/components/schemas/UserContactsGroupsInfo"
    UserContactsNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/UserContactsNavigationInfoUri"
        nextPage:
          $ref: "#/components/schemas/UserContactsNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/UserContactsNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/UserContactsNavigationInfoUri"
      description: "Information on navigation"
    UserContactsPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
      description: "Information on paging"
    PersonalContactRequest:
      type: "object"
      properties:
        firstName:
          type: "string"
          description: "First name of the contact"
          example: "Charlie"
        lastName:
          type: "string"
          description: "Last name of the contact"
          example: "Williams"
        middleName:
          type: "string"
          description: "Middle name of the contact"
          example: "J"
        nickName:
          type: "string"
          description: "Nick name of the contact"
          example: "The Boss"
        company:
          type: "string"
          description: "Company name of the contact"
          example: "Example, Inc."
        jobTitle:
          type: "string"
          description: "Job title of the contact"
          example: "CEO"
        email:
          type: "string"
          description: "Email of the contact"
          example: "charlie.williams@example.com"
        email2:
          type: "string"
          description: "2nd email of the contact"
          example: "charlie-example@gmail.com"
        email3:
          type: "string"
          description: "3rd email of the contact"
          example: "theboss-example@hotmail.com"
        birthday:
          type: "string"
          description: "Date of birth of the contact"
          format: "date-time"
        webPage:
          type: "string"
          description: "The contact home page URL"
          example: "http://www.example.com"
        notes:
          type: "string"
          description: "Notes for the contact"
          example: "#1 Customer"
        homePhone:
          type: "string"
          description: "Home phone number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        homePhone2:
          type: "string"
          description: "2nd home phone number of the contact in e.164 (with \"+\"\
            ) format"
          example: "+15551234567"
        businessPhone:
          type: "string"
          description: "Business phone of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessPhone2:
          type: "string"
          description: "2nd business phone of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        mobilePhone:
          type: "string"
          description: "Mobile phone of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        businessFax:
          type: "string"
          description: "Business fax number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        companyPhone:
          type: "string"
          description: "Company number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        assistantPhone:
          type: "string"
          description: "Phone number of the contact assistant in e.164 (with \"+\"\
            ) format"
          example: "+15551234567"
        carPhone:
          type: "string"
          description: "Car phone number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        otherPhone:
          type: "string"
          description: "Other phone number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        otherFax:
          type: "string"
          description: "Other fax number of the contact in e.164 (with \"+\") format"
          example: "+15551234567"
        callbackPhone:
          type: "string"
          description: "Callback phone number of the contact in e.164 (with \"+\"\
            ) format"
          example: "+15551234567"
        homeAddress:
          $ref: "#/components/schemas/ContactAddressInfo"
        businessAddress:
          $ref: "#/components/schemas/ContactAddressInfo"
        otherAddress:
          $ref: "#/components/schemas/ContactAddressInfo"
        ringtoneIndex:
          type: "string"
          description: "Contact ringtone. Max number of symbols is 64"
    ContactAddressInfo:
      type: "object"
      properties:
        street:
          type: "string"
          description: "Street address"
          example: "20 Davis Dr."
        city:
          type: "string"
          description: "City name"
          example: "Belmont"
        country:
          type: "string"
          description: "Country name"
        state:
          type: "string"
          description: "State/province name"
          example: "CA"
        zip:
          type: "string"
          description: "Zip/Postal code"
          example: "94002"
    AssistedUserResource:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
    AssistedUsersResource:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/AssistedUserResource"
    AssistantsResource:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/AssistantResource"
    AssistantResource:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
    MessageCountryInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a country"
        uri:
          type: "string"
          description: "Canonical URI of a country"
        name:
          type: "string"
          description: "Official name of a country"
        isoCode:
          type: "string"
          description: "ISO code of a country"
        callingCode:
          type: "string"
          description: "Calling code of a country"
    GetSMSMessageInfoResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a message"
        uri:
          type: "string"
          description: "Canonical URI of a message"
        attachments:
          type: "array"
          description: "The list of message attachments"
          items:
            $ref: "#/components/schemas/MessageAttachmentInfo"
        availability:
          type: "string"
          description: "Message availability status. Message in 'Deleted' state is\
            \ still preserved with all its attachments and can be restored. 'Purged'\
            \ means that all attachments are already deleted and the message itself\
            \ is about to be physically deleted shortly"
          enum:
          - "Alive"
          - "Deleted"
          - "Purged"
        conversationId:
          type: "integer"
          format: "int64"
          description: "SMS and Pager only. Identifier of a conversation that the\
            \ message belongs to"
        conversation:
          $ref: "#/components/schemas/ConversationInfo"
        creationTime:
          type: "string"
          description: "Message creation datetime in ISO 8601 format including timezone,\
            \ for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        deliveryErrorCode:
          type: "string"
          description: "SMS only. Delivery error code returned by gateway"
        direction:
          type: "string"
          description: "Message direction. Note that for some message types not all\
            \ directions are allowed. For example voicemail messages can be only inbound"
          enum:
          - "Inbound"
          - "Outbound"
        from:
          $ref: "#/components/schemas/MessageStoreCallerInfoResponseFrom"
        lastModifiedTime:
          type: "string"
          description: "The datetime when the message was modified on server in ISO\
            \ 8601 format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        messageStatus:
          type: "string"
          description: "Message status. Different message types may have different\
            \ allowed status values. For outbound faxes the aggregated message status\
            \ is returned: If status for at least one recipient is 'Queued', then\
            \ 'Queued' value is returned If status for at least one recipient is 'SendingFailed',\
            \ then 'SendingFailed' value is returned In other cases Sent status is\
            \ returned"
          enum:
          - "Queued"
          - "Sent"
          - "Delivered"
          - "DeliveryFailed"
          - "SendingFailed"
          - "Received"
        priority:
          type: "string"
          description: "Message priority"
          enum:
          - "Normal"
          - "High"
        readStatus:
          type: "string"
          description: "Message read status"
          enum:
          - "Read"
          - "Unread"
        smsDeliveryTime:
          type: "string"
          description: "SMS only. The datetime when outbound SMS was delivered to\
            \ recipient's handset in ISO 8601 format including timezone, for example\
            \ 2016-03-10T18:07:52.534Z. It is filled only if the carrier sends a delivery\
            \ receipt to RingCentral"
          format: "date-time"
        smsSendingAttemptsCount:
          type: "integer"
          description: "SMS only. Number of attempts made to send an outbound SMS\
            \ to the gateway (if gateway is temporary unavailable)"
        subject:
          type: "string"
          description: "Message subject. For SMS and Pager messages it replicates\
            \ message text which is also returned as an attachment"
        to:
          type: "array"
          description: "Recipient information"
          items:
            $ref: "#/components/schemas/MessageStoreCallerInfoResponseTo"
        type:
          type: "string"
          description: "Message type"
          enum:
          - "Fax"
          - "SMS"
          - "VoiceMail"
          - "Pager"
          - "Text"
    CreateSMSMessage:
      required:
      - "from"
      - "text"
      - "to"
      type: "object"
      properties:
        from:
          $ref: "#/components/schemas/MessageStoreCallerInfoRequest"
        to:
          type: "array"
          description: "Message receiver(s) information. The `phoneNumber` value is\
            \ required"
          items:
            $ref: "#/components/schemas/MessageStoreCallerInfoRequest"
        text:
          type: "string"
          description: "Text of a message. Max length is 1000 symbols (2-byte UTF-16\
            \ encoded). If a character is encoded in 4 bytes in UTF-16 it is treated\
            \ as 2 characters, thus restricting the maximum message length to 500\
            \ symbols"
        country:
          $ref: "#/components/schemas/MessageCountryInfo"
    MessageStoreCallerInfoRequest:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number in E.164 format"
      description: "Message sender information. The `phoneNumber` value should be\
        \ one the account phone numbers allowed to send the current type of messages"
    AssignedRolesResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/AssignedRoleResource"
    NotificationSettingsUpdateRequest:
      type: "object"
      properties:
        emailAddresses:
          type: "array"
          description: "List of notification recipient email addresses. Should not\
            \ be empty if 'includeManagers' parameter is set to false"
          items:
            type: "string"
        smsEmailAddresses:
          type: "array"
          description: "List of notification recipient email addresses"
          items:
            type: "string"
        advancedMode:
          type: "boolean"
          description: "Specifies notifications settings mode. If 'True' then advanced\
            \ mode is on, it allows using different emails and/or phone numbers for\
            \ each notification type. If 'False' then basic mode is on. Advanced mode\
            \ settings are returned in both modes, if specified once, but if basic\
            \ mode is switched on, they are not applied "
        voicemails:
          $ref: "#/components/schemas/VoicemailsInfo"
        inboundFaxes:
          $ref: "#/components/schemas/InboundFaxesInfo"
        outboundFaxes:
          $ref: "#/components/schemas/OutboundFaxesInfo"
        inboundTexts:
          $ref: "#/components/schemas/InboundTextsInfo"
        missedCalls:
          $ref: "#/components/schemas/MissedCallsInfo"
        includeManagers:
          type: "boolean"
          description: "Specifies if managers' emails are included in the list of\
            \ emails to which notifications are sent. If not specified, then the value\
            \ is 'True'"
          default: true
    NotificationSettings:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of notifications settings resource"
        emailRecipients:
          type: "array"
          description: "List of extensions specified as email notification recipients.\
            \ Returned only for call queues where queue managers are assigned as user\
            \ extensions."
          items:
            $ref: "#/components/schemas/EmailRecipientInfo"
        emailAddresses:
          type: "array"
          description: "List of notification recipient email addresses"
          items:
            type: "string"
        includeManagers:
          type: "boolean"
          description: "Specifies if managers' emails are included in the list of\
            \ emails to which notifications are sent"
        smsEmailAddresses:
          type: "array"
          description: "List of notification recipient email addresses"
          items:
            type: "string"
        advancedMode:
          type: "boolean"
          description: "Specifies notifications settings mode. If 'True' then advanced\
            \ mode is on, it allows using different emails and/or phone numbers for\
            \ each notification type. If 'False' then basic mode is on. Advanced mode\
            \ settings are returned in both modes, if specified once, but if basic\
            \ mode is switched on, they are not applied "
        voicemails:
          $ref: "#/components/schemas/VoicemailsInfo"
        inboundFaxes:
          $ref: "#/components/schemas/InboundFaxesInfo"
        outboundFaxes:
          $ref: "#/components/schemas/OutboundFaxesInfo"
        inboundTexts:
          $ref: "#/components/schemas/InboundTextsInfo"
        missedCalls:
          $ref: "#/components/schemas/MissedCallsInfo"
    InboundFaxesInfo:
      type: "object"
      properties:
        notifyByEmail:
          type: "boolean"
          description: "Email notification flag"
        notifyBySms:
          type: "boolean"
          description: "SMS notification flag"
        advancedEmailAddresses:
          type: "array"
          description: "List of recipient email addresses for inbound fax notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
        advancedSmsEmailAddresses:
          type: "array"
          description: "List of recipient phone numbers for inbound fax notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
        includeAttachment:
          type: "boolean"
          description: "Indicates whether fax should be attached to email"
        markAsRead:
          type: "boolean"
          description: "Indicates whether email should be automatically marked as\
            \ read"
    InboundTextsInfo:
      type: "object"
      properties:
        notifyByEmail:
          type: "boolean"
          description: "Email notification flag"
        notifyBySms:
          type: "boolean"
          description: "SMS notification flag"
        advancedEmailAddresses:
          type: "array"
          description: "List of recipient email addresses for inbound text message\
            \ notifications. Returned if specified, in both modes (advanced/basic).\
            \ Applied in advanced mode only"
          items:
            type: "string"
        advancedSmsEmailAddresses:
          type: "array"
          description: "List of recipient phone numbers for inbound text message notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
    OutboundFaxesInfo:
      type: "object"
      properties:
        notifyByEmail:
          type: "boolean"
          description: "Email notification flag"
        notifyBySms:
          type: "boolean"
          description: "SMS notification flag"
        advancedEmailAddresses:
          type: "array"
          description: "List of recipient email addresses for outbound fax notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
        advancedSmsEmailAddresses:
          type: "array"
          description: "List of recipient phone numbers for outbound fax notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
    MissedCallsInfo:
      type: "object"
      properties:
        notifyByEmail:
          type: "boolean"
          description: "Email notification flag"
        notifyBySms:
          type: "boolean"
          description: "SMS notification flag"
        advancedEmailAddresses:
          type: "array"
          description: "List of recipient email addresses for missed call notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
        advancedSmsEmailAddresses:
          type: "array"
          description: "List of recipient phone numbers for missed call notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
    VoicemailsInfo:
      type: "object"
      properties:
        notifyByEmail:
          type: "boolean"
          description: "Email notification flag"
        notifyBySms:
          type: "boolean"
          description: "SMS notification flag"
        advancedEmailAddresses:
          type: "array"
          description: "List of recipient email addresses for voicemail notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
        advancedSmsEmailAddresses:
          type: "array"
          description: "List of recipient phone numbers for voicemail notifications.\
            \ Returned if specified, in both modes (advanced/basic). Applied in advanced\
            \ mode only"
          items:
            type: "string"
        includeAttachment:
          type: "boolean"
          description: "Indicates whether voicemail should be attached to email"
        includeTranscription:
          type: "boolean"
          description: "Specifies whether to add voicemail transcription or not"
        markAsRead:
          type: "boolean"
          description: "Indicates whether a voicemail should be automatically marked\
            \ as read"
    EmailRecipientInfo:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        fullName:
          type: "string"
          description: "User full name"
        extensionNumber:
          type: "string"
          description: "User extension number"
        status:
          type: "string"
          description: "Current state of an extension"
          enum:
          - "Enabled"
          - "Disable"
          - "NotActivated"
          - "Unassigned"
        emailAddresses:
          type: "array"
          description: "List of user email addresses from extension notification settings.\
            \ By default main email address from contact information is returned"
          items:
            type: "string"
        permission:
          type: "string"
          description: "Call queue manager permission"
          enum:
          - "FullAccess"
          - "Messages"
          - "MemberManagement"
    ForwardAllCallsInfo:
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "Indicates whether *Forward All Calls* feature is enabled or\
            \ disabled for an extension"
        ranges:
          type: "array"
          description: "Specific data ranges. If specified, weeklyRanges cannot be\
            \ specified"
          items:
            $ref: "#/components/schemas/RangesInfo"
        callHandlingAction:
          type: "string"
          description: "Specifies how incoming calls are forwarded"
          enum:
          - "UnconditionalForwarding"
          - "TransferToExtension"
          - "TakeMessagesOnly"
          - "PlayAnnouncementOnly"
        extension:
          $ref: "#/components/schemas/ExtensionShortInfoResource"
        phoneNumber:
          $ref: "#/components/schemas/UnconditionalForwardingInfo"
        reason:
          $ref: "#/components/schemas/ForwardAllCallsReason"
    ForwardAllCallsReason:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "ExtensionLimitation"
          - "FeatureLimitation"
          description: "Specifies the type of limitation. `ExtensionLimitation` means\
            \ that the feature is turned off for this particular extension. `FeatureLimitation`\
            \ means that the user may enable this feature and setup the rule via the\
            \ Sevice Web UI"
        message:
          type: "string"
          enum:
          - "The feature is turned off for the extension"
          - "The feature must be initialized through the service web before using"
          description: "Error message depending on the type of limitation"
    ExtensionShortInfoResource:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an extension"
        name:
          type: "string"
          description: "Extension name"
        extensionNumber:
          type: "string"
          description: "Extension number"
    CreateMMSMessage:
      required:
      - "attachments"
      - "from"
      - "to"
      type: "object"
      properties:
        from:
          $ref: "#/components/schemas/MessageStoreCallerInfoRequest"
        to:
          type: "array"
          description: "Message receiver(s) information. The `phoneNumber` value is\
            \ required"
          items:
            $ref: "#/components/schemas/MessageStoreCallerInfoRequest"
        text:
          type: "string"
          description: "Text of a message. Max length is 1000 symbols (2-byte UTF-16\
            \ encoded). If a character is encoded in 4 bytes in UTF-16 it is treated\
            \ as 2 characters, thus restricting the maximum message length to 500\
            \ symbols"
        country:
          $ref: "#/components/schemas/MessageCountryInfo"
        attachments:
          type: "array"
          description: "Media file(s) to upload"
          items:
            type: "string"
            format: "binary"
    ReasonInfo:
      type: "object"
      properties:
        code:
          type: "string"
          description: "Reason code"
          enum:
          - "ServicePlanLimitation"
          - "AccountLimitation"
          - "ExtensionTypeLimitation"
          - "ExtensionLimitation"
          - "InsufficientPermissions"
          - "ConfigurationLimitation"
        message:
          type: "string"
          description: "Reason description"
        permission:
          type: "string"
      description: "Reason for the feature unavailability. Returned only if `available`\
        \ is set to 'false'"
    ParamsInfo:
      type: "object"
      properties:
        name:
          type: "string"
          description: "Parameter name"
        value:
          type: "string"
          description: "Parameter value"
    FeatureList:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/FeatureInfo"
    FeatureInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a feature"
        available:
          type: "boolean"
          description: "Specifies if the feature is available for the current user\
            \ according to services enabled for the account, type, entitlements and\
            \ permissions of the extension. If the authorized user gets features of\
            \ the other extension, only features that can be delegated are returned\
            \ (such as configuration by administrators)."
        params:
          type: "array"
          items:
            $ref: "#/components/schemas/ParamsInfo"
        reason:
          $ref: "#/components/schemas/ReasonInfo"
    MessagingNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/MessagingNavigationInfoURI"
        nextPage:
          $ref: "#/components/schemas/MessagingNavigationInfoURI"
        previousPage:
          $ref: "#/components/schemas/MessagingNavigationInfoURI"
        lastPage:
          $ref: "#/components/schemas/MessagingNavigationInfoURI"
      description: "Information on navigation"
    MessagingNavigationInfoURI:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    AlertInfo:
      type: "object"
      properties:
        title:
          type: "string"
          description: "Title of a message"
        body:
          type: "string"
          description: "Message Description"
      description: "Alert information"
    InboundMessageEvent:
      type: "object"
      properties:
        aps:
          $ref: "#/components/schemas/NotificationInfo"
        messageId:
          type: "string"
          description: "Internal identifier of a message"
        conversationId:
          type: "string"
          description: "Internal identifier of a conversation"
        from:
          type: "string"
          description: "Sender phone number. For GCM transport type '_from' property\
            \ should be used"
        to:
          type: "string"
          description: "Receiver phone number"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
    GetMessageList:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of user messages"
        records:
          type: "array"
          description: "List of records with message information"
          items:
            $ref: "#/components/schemas/GetMessageInfoResponse"
        navigation:
          $ref: "#/components/schemas/MessagingNavigationInfo"
        paging:
          $ref: "#/components/schemas/MessagingPagingInfo"
    InstantMessageEventBody:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a message"
        to:
          type: "array"
          description: "Message receiver(s) information"
          items:
            $ref: "#/components/schemas/NotificationRecipientInfo"
        from:
          $ref: "#/components/schemas/SenderInfo"
        type:
          type: "string"
          description: "Type of a message. The default value is 'SMS'"
        creationTime:
          type: "string"
          description: "Message creation datetime in ISO 8601 format including timezone,\
            \ for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Datetime when the message was modified in ISO 8601 format\
            \ including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        readStatus:
          type: "string"
          description: "Status of a message"
          default: "Unread"
        priority:
          type: "string"
          default: "Normal"
        attachments:
          type: "array"
          description: "Message attachment data"
          items:
            $ref: "#/components/schemas/MessageAttachmentInfo"
        direction:
          type: "string"
          description: "Message direction"
          default: "Inbound"
        availability:
          type: "string"
          description: "Message availability status"
          default: "Alive"
        subject:
          type: "string"
          description: "Message subject. It replicates message text which is also\
            \ returned as an attachment"
        messageStatus:
          type: "string"
          description: "Status of a message"
          default: "Received"
        conversationId:
          type: "string"
          description: "Deprecated. Identifier of a conversation the message belongs\
            \ to"
        conversation:
          $ref: "#/components/schemas/ConversationInfo"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
      description: "Notification payload body"
    NotificationRecipientInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number in E.164 (with '+' sign) format"
        extensionNumber:
          type: "string"
          description: "Extension number"
        target:
          type: "boolean"
          description: "'True' specifies that message is sent exactly to this recipient.\
            \ Returned in to field for group MMS. Useful if one extension has several\
            \ phone numbers"
        location:
          type: "string"
          description: "Contains party location (city, state) if one can be determined\
            \ from phoneNumber. This property is filled only when phoneNumber is not\
            \ empty and server can calculate location information from it (for example,\
            \ this information is unavailable for US toll-free numbers)"
        name:
          type: "string"
          description: "Symbolic name associated with a caller/callee. If the phone\
            \ does not belong to the known extension, only the location is returned,\
            \ the name is not determined then"
    SenderInfo:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "Phone number in E.164 (with '+' sign) format"
        extensionNumber:
          type: "string"
          description: "Extension number"
        location:
          type: "string"
          description: "Contains party location (city, state) if one can be determined\
            \ from phoneNumber. This property is filled only when phoneNumber is not\
            \ empty and server can calculate location information from it (for example,\
            \ this information is unavailable for US toll-free numbers)"
        name:
          type: "string"
          description: "Symbolic name associated with a caller/callee. If the phone\
            \ does not belong to the known extension, only the location is returned,\
            \ the name is not determined then"
      description: "Extension Type. For GCM transport type '_from' property should\
        \ be used || Message sender information"
    InstantMessageEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter URI"
        timestamp:
          type: "string"
          description: "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/InstantMessageEventBody"
    MessagingPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
      description: "Information on paging"
    MessageEventBody:
      type: "object"
      properties:
        extensionId:
          type: "string"
          description: "Internal identifier of an extension"
        lastUpdated:
          type: "string"
          description: "Datetime when the message was last modified in ISO 8601 format\
            \ including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        changes:
          type: "array"
          description: "Message Changes"
          items:
            $ref: "#/components/schemas/MessageChanges"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
      description: "Notification payload body"
    MessageEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter URI"
        timestamp:
          type: "string"
          description: "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        body:
          $ref: "#/components/schemas/MessageEventBody"
    MessageChanges:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Message type"
          enum:
          - "Voicemail"
          - "SMS"
          - "Fax"
          - "Pager"
        newCount:
          type: "integer"
          description: "The number of new messages. Can be omitted if the value is\
            \ zero"
        updatedCount:
          type: "integer"
          description: "The number of updated messages. Can be omitted if the value\
            \ is zero"
    NotificationInfo:
      type: "object"
      properties:
        alert:
          $ref: "#/components/schemas/AlertInfo"
        badge:
          type: "string"
          description: "Number of incoming messages"
        sound:
          type: "string"
          description: "Message sound"
        content-available:
          type: "string"
          description: "Content availability"
        category:
          type: "string"
          description: "Category of a message"
      description: "Information on a notification"
    MessageSenderInfo:
      type: "object"
      properties:
        extensionNumber:
          type: "string"
        extensionId:
          type: "string"
        name:
          type: "string"
      description: "Sender information"
    UpdateMessageRequest:
      type: "object"
      properties:
        readStatus:
          type: "string"
          description: "Read status of a message to be changed. Multiple values are\
            \ accepted"
          enum:
          - "Read"
          - "Unread"
    MessageBody:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a message"
        id:
          type: "string"
          description: "Internal identifier of a message"
        attachments:
          type: "array"
          description: "The list of message attachments"
          items:
            $ref: "#/components/schemas/MessageAttachmentInfo"
        availability:
          type: "string"
          description: "Message availability status. Message in 'Deleted' state is\
            \ still preserved with all its attachments and can be restored. 'Purged'\
            \ means that all attachments are already deleted and the message itself\
            \ is about to be physically deleted shortly"
          enum:
          - "Alive"
          - "Deleted"
          - "Purged"
        conversationId:
          type: "integer"
          format: "int64"
          description: "SMS and Pager only. Identifier of a conversation the message\
            \ belongs to"
        conversation:
          $ref: "#/components/schemas/ConversationInfo"
        creationTime:
          type: "string"
          description: "Message creation datetime in ISO 8601 format including timezone,\
            \ for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        deliveryErrorCode:
          type: "string"
          description: "SMS only. Delivery error code returned by gateway"
        direction:
          type: "string"
          description: "Message direction. Note that for some message types not all\
            \ directions are allowed. For example voicemail messages can be only inbound"
          enum:
          - "Inbound"
          - "Outbound"
        faxPageCount:
          type: "integer"
          description: "Fax only. Page count in a fax message"
        faxResolution:
          type: "string"
          description: "Fax only. Resolution of a fax message. 'High' for black and\
            \ white image scanned at 200 dpi, 'Low' for black and white image scanned\
            \ at 100 dpi"
          enum:
          - "High"
          - "Low"
        from:
          $ref: "#/components/schemas/MessageSenderInfo"
        lastModifiedTime:
          type: "string"
          description: "The datetime when the message was modified on server in ISO\
            \ 8601 format including timezone, for example 2016-03-10T18:07:52.534Z"
          format: "date-time"
        messageStatus:
          type: "string"
          description: "Message status. Different message types may have different\
            \ allowed status values.For outbound faxes the aggregated message status\
            \ is returned: If status for at least one recipient is 'Queued', then\
            \ 'Queued' value is returned If status for at least one recipient is 'SendingFailed',\
            \ then 'SendingFailed' value is returned In other cases Sent status is\
            \ returned"
          enum:
          - "Queued"
          - "Sent"
          - "Delivered"
          - "DeliveryFailed"
          - "SendingFailed"
          - "Received"
        pgToDepartment:
          type: "boolean"
          description: "'Pager' only. 'True' if at least one of the message recipients\
            \ is 'Department' extension"
        priority:
          type: "string"
          description: "Message priority"
          enum:
          - "Normal"
          - "High"
        readStatus:
          type: "string"
          description: "Message read status"
          enum:
          - "Read"
          - "Unread"
        smsDeliveryTime:
          type: "string"
          description: "SMS only. The datetime when outbound SMS was delivered to\
            \ recipient's handset in ISO 8601 format including timezone, for example\
            \ 2016-03-10T18:07:52.534Z. It is filled only if the carrier sends a delivery\
            \ receipt to RingCentral"
          format: "date-time"
        smsSendingAttemptsCount:
          type: "integer"
          description: "SMS only. Number of attempts made to send an outbound SMS\
            \ to the gateway (if gateway is temporary unavailable)"
        subject:
          type: "string"
          description: "Message subject. For SMS and Pager messages it replicates\
            \ message text which is also returned as an attachment"
        to:
          type: "array"
          description: "Recipient information"
          items:
            $ref: "#/components/schemas/MessageRecipientInfo"
        type:
          type: "string"
          description: "Message type"
          enum:
          - "Fax"
          - "SMS"
          - "VoiceMail"
          - "Pager"
          - "Text"
        vmTranscriptionStatus:
          type: "string"
          description: "Voicemail only. Status of voicemail to text transcription.\
            \ If VoicemailToText feature is not activated for account, the 'NotAvailable'\
            \ value is returned"
          enum:
          - "NotAvailable"
          - "InProgress"
          - "TimedOut"
          - "Completed"
          - "CompletedPartially"
          - "Failed"
    MessageRecipientInfo:
      type: "object"
      properties:
        extensionNumber:
          type: "string"
        extensionId:
          type: "string"
        name:
          type: "string"
    VoicemailMessageEvent:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Universally unique identifier of a notification"
        event:
          type: "string"
          description: "Event filter URI"
        timestamp:
          type: "string"
          description: "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
        subscriptionId:
          type: "string"
          description: "Internal identifier of a subscription"
        ownerId:
          type: "string"
          description: "Internal identifier of a subscription owner extension"
        body:
          $ref: "#/components/schemas/VoicemailMessageEventBody"
    GetMessageInfoMultiResponse:
      type: "object"
      properties:
        resourceId:
          type: "string"
          description: "Internal identifier of a resource"
        status:
          type: "integer"
          description: "Status code of resource retrieval"
        body:
          $ref: "#/components/schemas/MessageBody"
    GetMessageMultiResponse:
      type: "array"
      items:
        $ref: "#/components/schemas/GetMessageInfoMultiResponse"
    VoicemailMessageEventBody:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a message"
        to:
          type: "array"
          description: "Message receiver(s) information"
          items:
            $ref: "#/components/schemas/NotificationRecipientInfo"
        from:
          $ref: "#/components/schemas/SenderInfo"
        type:
          type: "string"
          description: "Type of a message"
          enum:
          - "Voicemail"
        creationTime:
          type: "string"
          description: "Message creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2019-03-10T18:07:52.534Z*"
        lastModifiedTime:
          type: "string"
          description: "Datetime when the message was modified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2019-03-10T18:07:52.534Z*"
        readStatus:
          type: "string"
          description: "Status of a message"
          default: "Unread"
        priority:
          type: "string"
          description: "Message priority"
          default: "Normal"
        attachments:
          type: "array"
          description: "Message attachment data"
          items:
            $ref: "#/components/schemas/MessageAttachmentInfo"
        direction:
          type: "string"
          description: "Message direction"
          default: "Inbound"
          enum:
          - "Inbound"
          - "Outbound"
        availability:
          type: "string"
          description: "Message availability status"
          default: "Alive"
        subject:
          type: "string"
          description: "Message subject. It replicates message text which is also\
            \ returned as an attachment"
        messageStatus:
          type: "string"
          description: "Status of a message"
          default: "Received"
        conversationId:
          type: "string"
          description: "Internal identifier of a conversation this message belongs\
            \ to"
        vmTranscriptionStatus:
          type: "string"
          description: "Specifies if a voicemail message transcription is already\
            \ completed or not"
      description: "Notification payload body"
    CustomUserGreetingInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a custom user greeting"
        id:
          type: "string"
          description: "Internal identifier of a custom user greeting"
        type:
          type: "string"
          description: "Type of a custom user greeting"
          enum:
          - "Introductory"
          - "Announcement"
          - "InterruptPrompt"
          - "ConnectingAudio"
          - "ConnectingMessage"
          - "Voicemail"
          - "Unavailable"
          - "HoldMusic"
          - "PronouncedName"
        contentType:
          type: "string"
          description: "Content media type"
          enum:
          - "audio/mpeg"
          - "audio/wav"
        contentUri:
          type: "string"
          description: "Link to a greeting content (audio file)"
        answeringRule:
          $ref: "#/components/schemas/CustomGreetingAnsweringRuleInfo"
    UpdateUnifiedPresence:
      type: "object"
      properties:
        glip:
          $ref: "#/components/schemas/UpdateUnifiedPresenceGlip"
        telephony:
          $ref: "#/components/schemas/UpdateUnifiedPresenceTelephony"
    UnifiedPresenceList:
      type: "array"
      items:
        $ref: "#/components/schemas/UnifiedPresenceListEntry"
    UnifiedPresence:
      type: "object"
      properties:
        status:
          type: "string"
          description: "Aggregated presence status of the user"
          enum:
          - "Available"
          - "Offline"
          - "DND"
          - "Busy"
        glip:
          $ref: "#/components/schemas/UnifiedPresenceGlip"
        telephony:
          $ref: "#/components/schemas/UnifiedPresenceTelephony"
        meeting:
          $ref: "#/components/schemas/UnifiedPresenceMeeting"
    UnifiedPresenceListEntry:
      type: "object"
      properties:
        resourceId:
          type: "string"
          description: "Internal identifier of the resource"
        status:
          type: "integer"
          description: "Status code of resource retrieval"
        body:
          $ref: "#/components/schemas/UnifiedPresence"
    UpdateUnifiedPresenceTelephony:
      type: "object"
      properties:
        availability:
          type: "string"
          description: "Telephony DND status"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptAnyCalls"
          - "DoNotAcceptQueueCalls"
    UnifiedPresenceGlip:
      type: "object"
      properties:
        status:
          type: "string"
          description: "Glip connection status calculated from all user's apps. Returned\
            \ always for the requester's extension; returned for another users if\
            \ their glip visibility is set to 'Visible'"
          enum:
          - "Offline"
          - "Online"
        visibility:
          type: "string"
          description: "Visibility setting allowing other users to see the user's\
            \ Glip presence status; returned only for requester's extension"
          enum:
          - "Visible"
          - "Invisible"
        availability:
          type: "string"
          description: "Shows whether user wants to receive Glip notifications or\
            \ not."
          enum:
          - "Available"
          - "DND"
      description: "Returned if *Glip* feature is switched on"
    UnifiedPresenceMeeting:
      type: "object"
      properties:
        status:
          type: "string"
          description: "Meeting status calculated from all user`s meetings"
          enum:
          - "NoMeeting"
          - "InMeeting"
      description: "Returned if *Meetings* feature is switched on"
    UpdateUnifiedPresenceGlip:
      type: "object"
      properties:
        visibility:
          type: "string"
          description: "Visibility setting allowing other users to see Glip presence\
            \ status"
          enum:
          - "Visible"
          - "Invisible"
        availability:
          type: "string"
          description: "Availability setting specifying whether to receive Glip notifications\
            \ or not"
          enum:
          - "Available"
          - "DND"
    UnifiedPresenceTelephony:
      type: "object"
      properties:
        status:
          type: "string"
          description: "Telephony status calculated from all user's phone numbers.\
            \ Returned always for the requester's extension; returned for another\
            \ users if their telephony visibility is set to 'Visible'"
          enum:
          - "NoCall"
          - "Ringing"
          - "CallConnected"
          - "OnHold"
          - "ParkedCall"
        visibility:
          type: "string"
          description: "Specifies if the user hardphone presence status is visible\
            \ to other users; returned only for requester's extension"
          enum:
          - "Visible"
          - "Invisible"
        availability:
          type: "string"
          description: "Telephony DND status. Returned if *DND* feature is switched\
            \ on"
          enum:
          - "TakeAllCalls"
          - "DoNotAcceptAnyCalls"
          - "DoNotAcceptQueueCalls"
      description: "Returned if *BLF* feature is switched on"
    CallerBlockingSettings:
      type: "object"
      properties:
        mode:
          type: "string"
          description: "Call blocking options: either specific or all calls and faxes"
          enum:
          - "Specific"
          - "All"
        noCallerId:
          type: "string"
          description: " Determines how to handle calls with no caller ID in 'Specific'\
            \ mode"
          enum:
          - "BlockCallsAndFaxes"
          - "BlockFaxes"
          - "Allow"
        payPhones:
          type: "string"
          description: "Blocking settings for pay phones"
          enum:
          - "Block"
          - "Allow"
        greetings:
          type: "array"
          description: "List of greetings played for blocked callers"
          items:
            $ref: "#/components/schemas/BlockedCallerGreetingInfo"
      description: "Returns the lists of blocked and allowed phone numbers"
    CallerBlockingSettingsUpdate:
      type: "object"
      properties:
        mode:
          type: "string"
          description: "Call blocking options: either specific or all calls and faxes"
          enum:
          - "Specific"
          - "All"
        noCallerId:
          type: "string"
          description: "Determines how to handle calls with no caller ID in 'Specific'\
            \ mode"
          enum:
          - "BlockCallsAndFaxes"
          - "BlockFaxes"
          - "Allow"
        payPhones:
          type: "string"
          description: "Blocking settings for pay phones"
          enum:
          - "Block"
          - "Allow"
        greetings:
          type: "array"
          description: "List of greetings played for blocked callers"
          items:
            $ref: "#/components/schemas/BlockedCallerGreetingInfo"
      description: "Returns the lists of blocked and allowed phone numbers"
    BlockedCallerGreetingInfo:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type of a greeting"
        preset:
          $ref: "#/components/schemas/PresetInfo"
    AddBlockedAllowedPhoneNumber:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          description: "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format"
        label:
          type: "string"
          description: "Custom name of a blocked/allowed phone number"
        status:
          type: "string"
          description: "Status of a phone number"
          default: "Blocked"
          enum:
          - "Blocked"
          - "Allowed"
      description: "Updates either blocked or allowed phone number list with a new\
        \ phone number."
    BlockedAllowedPhoneNumberInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a blocked/allowed phone number"
        id:
          type: "string"
          description: "Internal identifier of a blocked/allowed phone number"
        phoneNumber:
          type: "string"
          description: "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format"
        label:
          type: "string"
          description: "Custom name of a blocked/allowed phone number"
        status:
          type: "string"
          description: "Status of a phone number"
          enum:
          - "Blocked"
          - "Allowed"
      description: "Information on a blocked/allowed phone number"
    BlockedAllowedPhoneNumbersList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a list of blocked/allowed phone numbers resource"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/BlockedAllowedPhoneNumberInfo"
        navigation:
          $ref: "#/components/schemas/CallHandlingNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallHandlingPagingInfo"
      description: "List of blocked or allowed phone numbers"
    SyncInfo:
      type: "object"
      properties:
        syncType:
          type: "string"
          enum:
          - "FSync"
          - "ISync"
        syncToken:
          type: "string"
        syncTime:
          type: "string"
          format: "date-time"
        olderRecordsExist:
          type: "boolean"
          default: false
    AddressBookSync:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/PersonalContactResource"
        syncInfo:
          $ref: "#/components/schemas/SyncInfo"
        nextPageId:
          type: "integer"
          format: "int64"
        nextPageUri:
          type: "string"
          format: "uri"
    GetExtensionPhoneNumbersResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the user's phone number list resource"
        records:
          type: "array"
          description: "List of phone numbers"
          items:
            $ref: "#/components/schemas/UserPhoneNumberInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    UserPhoneNumberExtensionInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Canonical URI of an extension"
        extensionNumber:
          type: "string"
          description: "Number of extension"
        partnerId:
          type: "string"
          description: "For Partner Applications Internal identifier of an extension\
            \ created by partner. The RingCentral supports the mapping of accounts\
            \ and stores the corresponding account ID/extension ID for each partner\
            \ ID of a client application. In request URIs partner IDs are accepted\
            \ instead of regular RingCentral native IDs as path parameters using pid\
            \ = XXX clause. Though in response URIs contain the corresponding account\
            \ IDs and extension IDs. In all request and response bodies these values\
            \ are reflected via partnerId attributes of account and extension"
        type:
          type: "string"
          description: "Extension type. Please note that legacy 'Department' extension\
            \ type corresponds to 'Call Queue' extensions in modern RingCentral product\
            \ terminology"
          enum:
          - "User"
          - "FaxUser"
          - "VirtualUser"
          - "DigitalUser"
          - "Department"
          - "Announcement"
          - "Voicemail"
          - "SharedLinesGroup"
          - "PagingOnly"
          - "IvrMenu"
          - "ApplicationExtension"
          - "ParkLocation"
          - "Site"
        contactCenterProvider:
          $ref: "#/components/schemas/ContactCenterProvider"
        name:
          type: "string"
          description: "Extension name. For user extension types the value is a combination\
            \ of the specified first name and last name"
      description: "Information on the extension, to which the phone number is assigned.\
        \ Returned only for the request of Account phone number list"
    ContactCenterProvider:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the provider"
        name:
          type: "string"
          description: "Provider's name"
      description: "CCRN (Contact Center Routing Number) provider. If not specified\
        \ then the default value 'InContact/North America' is used, its ID is '1'"
    UserPhoneNumberInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the user's phone number resource"
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a phone number"
        country:
          $ref: "#/components/schemas/CountryInfo"
        contactCenterProvider:
          $ref: "#/components/schemas/ContactCenterProvider"
        extension:
          $ref: "#/components/schemas/UserPhoneNumberExtensionInfo"
        label:
          type: "string"
          description: "Custom user name of a phone number, if any"
        location:
          type: "string"
          description: "Location (City, State). Filled for local US numbers"
        paymentType:
          type: "string"
          description: "Payment type. 'External' is returned for forwarded numbers\
            \ which are not terminated in the RingCentral phone system"
          enum:
          - "External"
          - "TollFree"
          - "Local"
          - "BusinessMobileNumberProvider"
          - "ExternalNumberProvider"
        phoneNumber:
          type: "string"
          description: "Phone number"
        primary:
          type: "boolean"
          description: "Specifies if the number is primary, i.e. displayed as 'main\
            \ number' and called by default"
          example: false
        status:
          type: "string"
          description: "Status of a phone number. If the value is 'Normal', the phone\
            \ number is ready to be used. Otherwise it is an external number not yet\
            \ ported to RingCentral"
          enum:
          - "Normal"
          - "Pending"
          - "PortedIn"
          - "Temporary"
        type:
          type: "string"
          description: "Phone number type"
          enum:
          - "VoiceFax"
          - "FaxOnly"
          - "VoiceOnly"
        subType:
          type: "string"
          description: "Extension sub-type, if applicable. For any unsupported sub-types\
            \ the 'Unknown' value will be returned"
          enum:
          - "VideoPro"
          - "VideoProPlus"
          - "DigitalSignage"
          - "Unknown"
        usageType:
          type: "string"
          description: "Usage type of a phone number. Numbers of 'NumberPool' type\
            \ will not be returned for phone number list requests"
          enum:
          - "MainCompanyNumber"
          - "AdditionalCompanyNumber"
          - "CompanyNumber"
          - "DirectNumber"
          - "CompanyFaxNumber"
          - "ForwardedNumber"
          - "ForwardedCompanyNumber"
          - "ContactCenterNumber"
          - "ConferencingNumber"
          - "NumberPool"
          - "BusinessMobileNumber"
          - "IntegrationNumber"
        features:
          type: "array"
          description: "List of features of a phone number"
          items:
            type: "string"
            enum:
            - "CallerId"
            - "SmsSender"
            - "A2PSmsSender"
            - "MmsSender"
            - "InternationalSmsSender"
            - "Delegated"
    AutomaticLocationUpdatesTaskInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a task"
        status:
          type: "string"
          description: "Status of a task"
          enum:
          - "Accepted"
          - "InProgress"
          - "Completed"
          - "Failed"
        creationTime:
          type: "string"
          description: "Task creation time"
        lastModifiedTime:
          type: "string"
          description: "Time of the task latest modification"
        type:
          type: "string"
          description: "Type of a task"
          enum:
          - "WirelessPointsBulkCreate"
          - "WirelessPointsBulkUpdate"
          - "SwitchesBulkCreate"
          - "SwitchesBulkUpdate"
        result:
          $ref: "#/components/schemas/TaskResultInfo"
    TaskResultRecord:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the created/updated element - wireless\
            \ point or network switch"
        bssid:
          type: "string"
          description: "Unique 48-bit identifier of the wireless access point complying\
            \ with MAC address conventions. Returned only for 'Wireless Points Bulk\
            \ Create' tasks"
        chassisId:
          type: "string"
          description: "Unique identifier of a network switch. Returned only for 'Switches\
            \ Bulk Create' tasks"
        status:
          type: "string"
          description: "Operation status"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/TaskResultRecordErrorsInfo"
    TaskResultInfo:
      type: "object"
      properties:
        records:
          type: "array"
          description: "Detailed task results by elements from initial request"
          items:
            $ref: "#/components/schemas/TaskResultRecord"
      description: "Task detailed result. Returned for failed and completed tasks"
    TaskResultRecordErrorsInfo:
      type: "object"
      properties:
        errorCode:
          type: "string"
        message:
          type: "string"
        parameterName:
          type: "string"
        description:
          type: "string"
    AutomaticLocationUpdatesUserList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the users list resource"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/AutomaticLocationUpdatesUserInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    AutomaticLocationUpdatesUserInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a device"
        fullName:
          type: "string"
          description: "User name"
        extensionNumber:
          type: "string"
        featureEnabled:
          type: "boolean"
          description: "Specifies if Automatic Location Updates feature is enabled"
        type:
          type: "string"
          description: "User extension type"
          enum:
          - "User"
          - "Limited"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        department:
          type: "string"
          description: "Department name"
    BulkAssignAutomaticLocationUpdatesUsers:
      type: "object"
      properties:
        enabledUserIds:
          type: "array"
          items:
            type: "string"
        disabledUserIds:
          type: "array"
          items:
            type: "string"
    CreateMultipleWirelessPointsResponse:
      type: "object"
      properties:
        task:
          $ref: "#/components/schemas/BulkTaskInfoWiCreate"
    ERLLocationInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an emergency response location"
        name:
          type: "string"
          description: "Emergency response location name"
      description: "Emergency response location information"
    CreateMultipleWirelessPointsRequest:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/CreateWirelessPoint"
    CreateWirelessPoint:
      required:
      - "bssid"
      - "name"
      type: "object"
      properties:
        bssid:
          type: "string"
          description: "Unique 48-bit identifier of wireless access point complying\
            \ with MAC address conventions. The Mask is XX:XX:XX:XX:XX:XX, where X\
            \ can be a symbol in the range of 0-9 or A-F"
        name:
          type: "string"
          description: "Wireless access point name"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
        emergencyLocationId:
          type: "string"
          description: "Deprecated. Internal identifier of the emergency response\
            \ location (address). Only one of a pair `emergencyAddress` or `emergencyLocationId`\
            \ should be specified, otherwise the error is returned"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    BulkTaskInfoWiCreate:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a task for multiple switches creation"
        status:
          type: "string"
          description: "Status of a task"
          enum:
          - "Accepted"
          - "Failed"
        creationTime:
          type: "string"
          description: "Task creation time"
        lastModifiedTime:
          type: "string"
          description: "Time of the task latest modification"
      description: "Information on the task for multiple wireless points creation"
    PublicIpRangeInfo:
      type: "object"
      properties:
        id:
          type: "string"
        startIp:
          type: "string"
        endIp:
          type: "string"
        matched:
          type: "boolean"
    LocationUpdatesEmergencyAddressInfo:
      type: "object"
      properties:
        country:
          type: "string"
          description: "Country name"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
        countryIsoCode:
          type: "string"
          description: "ISO code of a country"
        countryName:
          type: "string"
          description: "Full name of a country"
        customerName:
          type: "string"
          description: "Customer name"
        state:
          type: "string"
          description: "State/Province name. Mandatory for the USA, the UK and Canada"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        stateIsoCode:
          type: "string"
          description: "ISO code of a state"
        stateName:
          type: "string"
          description: "Full name of a state"
        city:
          type: "string"
          description: "City name"
        street:
          type: "string"
          description: "First line address"
        street2:
          type: "string"
          description: "Second line address (apartment, suite, unit, building, floor,\
            \ etc.)"
        zip:
          type: "string"
          description: "Postal (Zip) code"
      description: "Emergency address information (or information assigned to the\
        \ switch or wireless point - in case of using them). Only one of a pair `emergencyAddress`\
        \ or `emergencyLocationId` should be specified, otherwise the error is returned"
    PrivateIpRangeInfo:
      type: "object"
      properties:
        id:
          type: "string"
        startIp:
          type: "string"
        endIp:
          type: "string"
        name:
          type: "string"
          description: "Network name"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfo"
        emergencyLocationId:
          type: "string"
          description: "Emergency response location (address) internal identifier.\
            \ Only one of a pair `emergencyAddress` or `emergencyLocationId` should\
            \ be specified, otherwise the error is returned"
        matched:
          type: "boolean"
    NetworkInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a network"
        uri:
          type: "string"
          description: "Link to a network resource"
        name:
          type: "string"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        publicIpRanges:
          type: "array"
          items:
            $ref: "#/components/schemas/PublicIpRangeInfo"
        privateIpRanges:
          type: "array"
          items:
            $ref: "#/components/schemas/PrivateIpRangeInfo"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    CreateNetworkRequest:
      type: "object"
      properties:
        name:
          type: "string"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        publicIpRanges:
          type: "array"
          items:
            $ref: "#/components/schemas/PublicIpRangeInfo"
        privateIpRanges:
          type: "array"
          items:
            $ref: "#/components/schemas/PrivateIpRangeInfoRequest"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    NetworksList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a networks resource"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/NetworkInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    PrivateIpRangeInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
        startIp:
          type: "string"
        endIp:
          type: "string"
        name:
          type: "string"
          description: "Network name"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
        emergencyLocationId:
          type: "string"
          description: "Emergency response location (address) internal identifier.\
            \ Only one of a pair `emergencyAddress` or `emergencyLocationId` should\
            \ be specified, otherwise the error is returned"
    UpdateNetworkRequest:
      type: "object"
      properties:
        id:
          type: "string"
          example: "2874044"
          description: "Internal identifier of a network"
        uri:
          type: "string"
        name:
          type: "string"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        publicIpRanges:
          type: "array"
          items:
            $ref: "#/components/schemas/PublicIpRangeInfo"
        privateIpRanges:
          type: "array"
          items:
            $ref: "#/components/schemas/PrivateIpRangeInfoRequest"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    ValidateMultipleSwitchesRequest:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/SwitchInfo"
    SwitchSiteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a site. The company identifier value\
            \ is 'main-site'"
        name:
          type: "string"
          description: "Name of a site"
      description: "Site data"
    ValidateMultipleSwitchesResponse:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/SwitchValidated"
    SwitchInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the network switch resource"
        id:
          type: "string"
          description: "Internal identifier of a network switch"
        chassisId:
          type: "string"
          description: "Unique identifier of a network switch"
        name:
          type: "string"
          description: "Name of a network switch"
        site:
          $ref: "#/components/schemas/SwitchSiteInfo"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfo"
        emergencyLocationId:
          type: "string"
          description: "Deprecated. Emergency response location (address) internal\
            \ identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId`\
            \ should be specified, otherwise the error is returned"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    ValidationError:
      type: "object"
      properties:
        errorCode:
          type: "string"
          description: "Error code"
        message:
          type: "string"
          description: "Error message"
        parameterName:
          type: "string"
          description: "Name of invalid parameter"
        featureName:
          type: "string"
          example: "Sites"
        parameterValue:
          type: "string"
          example: "SoftPhoneAutoLocationUpdate"
    SwitchValidated:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a switch"
        chassisId:
          type: "string"
          description: "Unique identifier of a network switch"
        status:
          type: "string"
          description: "Validation result status"
          enum:
          - "Valid"
          - "Invalid"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ValidationError"
    CreateSwitchInfo:
      required:
      - "chassisId"
      type: "object"
      properties:
        chassisId:
          type: "string"
          description: "Unique identifier of a network switch. The supported formats\
            \ are: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X\
            \ for IP address (symbols 0-255)"
        name:
          type: "string"
          description: "Name of a network switch"
        site:
          $ref: "#/components/schemas/SwitchSiteInfo"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
        emergencyLocationId:
          type: "string"
          description: "Deprecated. Emergency response location (address) internal\
            \ identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId`\
            \ should be specified, otherwise the error is returned"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    SwitchesList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the switches list resource"
        records:
          type: "array"
          description: "Switches map"
          items:
            $ref: "#/components/schemas/SwitchInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    UpdateSwitchInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "internal identifier of a switch"
        chassisId:
          type: "string"
          description: "Unique identifier of a network switch. The supported formats\
            \ are: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X\
            \ for IP address (symbols 0-255)"
        name:
          type: "string"
          description: "Name of a network switch"
        site:
          $ref: "#/components/schemas/SwitchSiteInfo"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
        emergencyLocationId:
          type: "string"
          description: "Deprecated. Emergency response location (address) internal\
            \ identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId`\
            \ should be specified, otherwise the error is returned"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    WirelessPointInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the wireless point resource"
        id:
          type: "string"
          description: "Internal identifier of a wireless point"
        bssid:
          type: "string"
          description: "Unique 48-bit identifier of the wireless access point complying\
            \ with MAC address conventions"
        name:
          type: "string"
          description: "Wireless access point name"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfo"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
        emergencyLocationId:
          type: "string"
          description: "Deprecated. Emergency response location (address) internal\
            \ identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId`\
            \ should be specified, otherwise the error is returned"
    WirelessPointsList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the wireless point list resource"
        records:
          type: "array"
          description: "List of wireless points with assigned emergency addresses"
          items:
            $ref: "#/components/schemas/WirelessPointInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    UpdateWirelessPoint:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a wireless point"
        bssid:
          type: "string"
          description: "Unique 48-bit identifier of wireless access point complying\
            \ with MAC address conventions. Mask: XX:XX:XX:XX:XX:XX, where X can be\
            \ a symbol in the range of 0-9 or A-F"
        name:
          type: "string"
          description: "Wireless access point name"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
        emergencyLocationId:
          type: "string"
          description: "Deprecated. Internal identifier of the emergency response\
            \ location (address). Only one of a pair `emergencyAddress` or `emergencyLocationId`\
            \ should be specified, otherwise the error is returned"
        emergencyLocation:
          $ref: "#/components/schemas/ERLLocationInfo"
    WirelessPointInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a wireless point"
        bssid:
          type: "string"
          description: "Unique 48-bit identifier of the wireless access point complying\
            \ with MAC address conventions"
        name:
          type: "string"
          description: "Wireless access point name"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        emergencyAddress:
          $ref: "#/components/schemas/LocationUpdatesEmergencyAddressInfoRequest"
        emergencyLocationId:
          type: "string"
          description: "Emergency response location (address) internal identifier.\
            \ Only one of a pair `emergencyAddress` or `emergencyLocationId` should\
            \ be specified, otherwise the error is returned"
    ValidateMultipleWirelessPointsRequest:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/WirelessPointInfoRequest"
    ValidateMultipleWirelessPointsResponse:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/WirelessPointValidated"
    WirelessPointValidated:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a wireless point"
        bssid:
          type: "string"
          description: "Unique 48-bit identifier of the wireless access point complying\
            \ with MAC address conventions"
        status:
          type: "string"
          description: "Validation result status"
          enum:
          - "Valid"
          - "Invalid"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ValidationError"
    ListDevicesAutomaticLocationUpdates:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to devices resource"
        records:
          type: "array"
          description: "List of users' devices with the current status of Emergency\
            \ Address Auto Update Feature"
          items:
            $ref: "#/components/schemas/AutomaticLocationUpdatesDeviceInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    AutomaticLocationUpdatesDeviceInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a device"
        type:
          type: "string"
          description: "Device type"
          default: "HardPhone"
          enum:
          - "HardPhone"
          - "SoftPhone"
          - "OtherPhone"
        serial:
          type: "string"
          description: "Serial number for HardPhone (is returned only when the phone\
            \ is shipped and provisioned)"
        featureEnabled:
          type: "boolean"
          description: "Specifies if Automatic Location Updates feature is enabled"
        name:
          type: "string"
          description: "Device name"
        model:
          $ref: "#/components/schemas/AutomaticLocationUpdatesModelInfo"
        site:
          $ref: "#/components/schemas/AutomaticLocationUpdatesSiteInfo"
        phoneLines:
          type: "array"
          description: "Phone lines information"
          items:
            $ref: "#/components/schemas/AutomaticLocationUpdatesPhoneLine"
    AutomaticLocationUpdatesPhoneLine:
      type: "object"
      properties:
        lineType:
          type: "string"
          enum:
          - "Unknown"
          - "Standalone"
          - "StandaloneFree"
          - "BlaPrimary"
          - "BlaSecondary"
          - "BLF"
        phoneInfo:
          $ref: "#/components/schemas/AutomaticLocationUpdatesPhoneNumberInfo"
    AutomaticLocationUpdatesModelInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Device model identifier"
        name:
          type: "string"
          description: "Device name"
        features:
          type: "array"
          description: "Device feature or multiple features supported"
          items:
            type: "string"
            enum:
            - "BLA"
            - "Intercom"
            - "Paging"
            - "HELD"
      description: "HardPhone model information"
    AutomaticLocationUpdatesPhoneNumberInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a phone number"
        phoneNumber:
          type: "string"
          description: "Phone number"
    AssignMultipleDevicesAutomaticLocationUpdates:
      type: "object"
      properties:
        enabledDeviceIds:
          type: "array"
          items:
            type: "string"
            description: "List of common devices for feature activation"
        disabledDeviceIds:
          type: "array"
          items:
            type: "string"
            description: "List of common devices for feature disabling"
    CreateMultipleSwitchesResponse:
      type: "object"
      properties:
        task:
          $ref: "#/components/schemas/BulkTaskInfoSwUpdate"
      description: "Information on the task for multiple switches creation"
    CreateMultipleSwitchesRequest:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/CreateSwitchInfo"
    BulkTaskInfoSwUpdate:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a task for multiple switches creation"
        status:
          type: "string"
          description: "Status of a task"
          enum:
          - "Accepted"
          - "Failed"
        creationTime:
          type: "string"
          description: "Task creation time"
        lastModifiedTime:
          type: "string"
          description: "Time of the task latest modification"
      description: "Information on the task for multiple switches update"
    UpdateMultipleWirelessPointsResponse:
      type: "object"
      properties:
        task:
          $ref: "#/components/schemas/BulkTaskInfoWiUpdate"
    BulkTaskInfoWiUpdate:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a task for multiple switches creation"
        status:
          type: "string"
          description: "Status of a task"
          enum:
          - "Accepted"
          - "Failed"
        creationTime:
          type: "string"
          description: "Task creation time"
        lastModifiedTime:
          type: "string"
          description: "Time of the task latest modification"
      description: "Information on the task for multiple wireless points update"
    UpdateMultipleWirelessPointsRequest:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/UpdateWirelessPoint"
    UpdateMultipleSwitchesRequest:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/UpdateSwitchInfo"
    UpdateMultipleSwitchesResponse:
      type: "object"
      properties:
        task:
          $ref: "#/components/schemas/BulkTaskInfoSwUpdate"
    CompanyPhoneNumberInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a company phone number resource"
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a phone number"
        country:
          $ref: "#/components/schemas/CountryInfo"
        extension:
          $ref: "#/components/schemas/ExtensionInfo"
        label:
          type: "string"
          description: "Custom user name of a phone number, if any"
        location:
          type: "string"
          description: "Location (City, State). Filled for local US numbers"
        paymentType:
          type: "string"
          description: "Payment type. 'External' is returned for forwarded numbers\
            \ which are not terminated in the RingCentral phone system"
          enum:
          - "External"
          - "TollFree"
          - "Local"
          - "BusinessMobileNumberProvider"
          - "ExternalNumberProvider"
        phoneNumber:
          type: "string"
          description: "Phone number"
        status:
          type: "string"
          description: "Status of a phone number. If the value is 'Normal', the phone\
            \ number is ready to be used. If the value is 'Pending' it is an external\
            \ number not yet ported to RingCentral."
          enum:
          - "Normal"
          - "Pending"
          - "PortedIn"
          - "Temporary"
        type:
          type: "string"
          description: "Phone number type"
          enum:
          - "VoiceFax"
          - "FaxOnly"
          - "VoiceOnly"
        usageType:
          type: "string"
          description: "Usage type of a phone number. Usage type of a phone number.\
            \ Numbers of 'NumberPool' type wont't be returned for phone number list\
            \ requests"
          enum:
          - "MainCompanyNumber"
          - "AdditionalCompanyNumber"
          - "CompanyNumber"
          - "DirectNumber"
          - "CompanyFaxNumber"
          - "ForwardedNumber"
          - "ForwardedCompanyNumber"
          - "ContactCenterNumber"
          - "ConferencingNumber"
          - "MeetingsNumber"
          - "NumberPool"
          - "BusinessMobileNumber"
          - "IntegrationNumber"
        temporaryNumber:
          $ref: "#/components/schemas/TemporaryNumberInfo"
        contactCenterProvider:
          $ref: "#/components/schemas/ContactCenterProvider"
        vanityPattern:
          type: "string"
          description: "Vanity pattern for this number. Returned only when vanity\
            \ search option is requested. Vanity pattern corresponds to request parameters\
            \ nxx plus line or numberPattern"
    TemporaryNumberInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Temporary phone number identifier"
        phoneNumber:
          type: "string"
          description: "Temporary phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ (with '+' sign) format"
      description: "Temporary phone number, if any. Returned for phone numbers in\
        \ `Pending` porting status only"
    AccountPhoneNumbers:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of account phone numbers"
        records:
          type: "array"
          description: "List of account phone numbers"
          items:
            $ref: "#/components/schemas/CompanyPhoneNumberInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    TaskAssigneeInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an assignee"
        status:
          type: "string"
          description: "Status of the task execution by assignee"
          enum:
          - "Pending"
          - "Completed"
    TaskAttachment:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a file"
        type:
          type: "string"
          description: "Attachment type (currently only `File` value is supported)."
          enum:
          - "File"
        name:
          type: "string"
          description: "Name of the attached file (including extension name)."
        contentUri:
          type: "string"
          description: "Link to an attachment content"
    GlipTaskRecurrenceInfo:
      type: "object"
      properties:
        schedule:
          type: "string"
          description: "Task recurrence settings. For non-periodic tasks the value\
            \ is 'None'"
          enum:
          - "None"
          - "Daily"
          - "Weekdays"
          - "Weekly"
          - "Monthly"
          - "Yearly"
        endingCondition:
          type: "string"
          description: "Task ending condition"
          enum:
          - "None"
          - "Count"
          - "Date"
        endingAfter:
          maximum: 10.0
          minimum: 1
          type: "integer"
          description: "Count of iterations of periodic tasks"
        endingOn:
          type: "string"
          description: "End date of periodic task"
          format: "date-time"
    GlipUpdateTask:
      type: "object"
      properties:
        subject:
          type: "string"
          description: "Task name/subject. Max allowed length is 250 characters."
        assignees:
          type: "array"
          items:
            $ref: "#/components/schemas/AssigneeInfo"
        completenessCondition:
          type: "string"
          enum:
          - "Simple"
          - "AllAssignees"
          - "Percentage"
        startDate:
          type: "string"
          description: "Task start date in UTC time zone"
          format: "date-time"
        dueDate:
          type: "string"
          description: "Task due date/time in UTC time zone"
          format: "date-time"
        color:
          type: "string"
          enum:
          - "Black"
          - "Red"
          - "Orange"
          - "Yellow"
          - "Green"
          - "Blue"
          - "Purple"
          - "Magenta"
        section:
          type: "string"
          description: "Task section to group/search by. Max allowed length is 100\
            \ characters"
        description:
          type: "string"
          description: "Task details. Max allowed length is 102400 characters (100kB)"
        recurrence:
          $ref: "#/components/schemas/GlipTaskRecurrenceInfo"
        attachments:
          type: "array"
          items:
            $ref: "#/components/schemas/GlipAttachmentInfoRequest"
    AssigneeInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an assignee"
    GlipCreatorInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user who created a note/task"
      description: "Note creator information"
    GlipTaskInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a task"
        creationTime:
          type: "string"
          description: "Datetime of the task creation in UTC time zone."
          format: "datetime"
        lastModifiedTime:
          type: "string"
          description: "Datetime of the last modification of the task in UTC time\
            \ zone."
          format: "datetime"
        type:
          type: "string"
          description: "Type of a task"
          enum:
          - "Task"
        creator:
          $ref: "#/components/schemas/GlipCreatorInfo"
        chatIds:
          type: "array"
          description: "Chat IDs where the task is posted or shared."
          items:
            type: "string"
        status:
          type: "string"
          description: "Status of task execution"
          enum:
          - "Pending"
          - "InProgress"
          - "Completed"
        subject:
          type: "string"
          description: "Name/subject of a task"
        assignees:
          type: "array"
          items:
            $ref: "#/components/schemas/TaskAssigneeInfo"
        completenessCondition:
          type: "string"
          description: "Specifies how to determine task completeness"
          enum:
          - "Simple"
          - "AllAssignees"
          - "Percentage"
        completenessPercentage:
          maximum: 100.0
          minimum: 0
          type: "integer"
          description: "Current completeness percentage of the task with the specified\
            \ percentage completeness condition"
        startDate:
          type: "string"
          description: "Task start date"
          format: "date-time"
        dueDate:
          type: "string"
          description: "Task due date/time"
          format: "date-time"
        color:
          type: "string"
          description: "Font color of a post with the current task"
          enum:
          - "Black"
          - "Red"
          - "Orange"
          - "Yellow"
          - "Green"
          - "Blue"
          - "Purple"
          - "Magenta"
        section:
          type: "string"
          description: "Task section to group/search by"
        description:
          type: "string"
          description: "Task details"
        recurrence:
          $ref: "#/components/schemas/GlipTaskRecurrenceInfo"
        attachments:
          type: "array"
          items:
            $ref: "#/components/schemas/TaskAttachment"
    GlipAttachmentInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an attachment"
        type:
          type: "string"
          description: "Type of an attachment"
          enum:
          - "File"
          - "Note"
          - "Event"
          - "Card"
    GlipTaskList:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/GlipTaskInfo"
    GlipCompleteTask:
      type: "object"
      properties:
        status:
          type: "string"
          description: "Completeness status. 'Mandatory' if `completenessCondition`\
            \ is set to `Simple`, otherwise 'Optional'"
          enum:
          - "Incomplete"
          - "Complete"
        assignees:
          type: "array"
          items:
            $ref: "#/components/schemas/AssigneeInfo"
        completenessPercentage:
          maximum: 100.0
          minimum: 0
          type: "integer"
          description: "Current completeness percentage of a task with the 'Percentage'\
            \ completeness condition. 'Mandatory' if `completenessCondition` is set\
            \ to `Percentage`, otherwise 'Optional'"
    GlipNavigationInfo:
      type: "object"
      properties:
        prevPageToken:
          type: "string"
          description: "Previous page token. To get previous page, user should pass\
            \ one of returned token in next request and, in turn, required page will\
            \ be returned with new tokens"
        nextPageToken:
          type: "string"
          description: "Next page token. To get next page, user should pass one of\
            \ returned token in next request and, in turn, required page will be returned\
            \ with new tokens"
    GlipEventsInfo:
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of events created by the current user"
          items:
            $ref: "#/components/schemas/GlipEventInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    GlipEventInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an event"
        creatorId:
          type: "string"
          description: "Internal identifier of a person created an event"
        title:
          type: "string"
          description: "Event title"
        startTime:
          type: "string"
          description: "Datetime of starting an event"
        endTime:
          type: "string"
          description: "Datetime of ending an event"
        allDay:
          type: "boolean"
          description: "Indicates whether an event has some specific time slot or\
            \ lasts for the whole day(s)"
          default: false
        recurrence:
          type: "string"
          description: "Event recurrence settings"
          enum:
          - "None"
          - "Day"
          - "Weekday"
          - "Week"
          - "Month"
          - "Year"
        endingCondition:
          type: "string"
          description: "Condition of ending"
        endingAfter:
          type: "integer"
          description: "Count of iterations. For periodic events only"
        endingOn:
          type: "string"
          description: "Iterations end datetime for periodic events"
          default: "None"
          enum:
          - "None"
          - "Count"
          - "Date"
        color:
          type: "string"
          description: "Color of Event title (including its presentation in Calendar)"
          default: "Black"
          enum:
          - "Black"
          - "Red"
          - "Orange"
          - "Yellow"
          - "Green"
          - "Blue"
          - "Purple"
          - "Magenta"
        location:
          type: "string"
          description: "Event location"
        description:
          type: "string"
          description: "Event details"
    GlipEventCreate:
      required:
      - "endTime"
      - "startTime"
      - "title"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an event"
        creatorId:
          type: "string"
          description: "Internal identifier of a person created an event"
        title:
          type: "string"
          description: "Event title"
        startTime:
          type: "string"
          description: "Datetime of starting an event"
        endTime:
          type: "string"
          description: "Datetime of ending an event"
        allDay:
          type: "boolean"
          description: "Indicates whether event has some specific time slot or lasts\
            \ for whole day(s)"
          default: false
        recurrence:
          type: "string"
          description: "Event recurrence settings. For non-periodic events the value\
            \ is 'None'. Must be greater or equal to event duration: 1- Day/Weekday;\
            \ 7 - Week; 28 - Month; 365 - Year"
          enum:
          - "None"
          - "Day"
          - "Weekday"
          - "Week"
          - "Month"
          - "Year"
        endingCondition:
          type: "string"
          description: "Condition of ending"
        endingAfter:
          type: "integer"
          description: "Count of iterations. For periodic events only. Value range\
            \ is 1 - 10. Must be specified if 'endingCondition' is 'Count'"
        endingOn:
          type: "string"
          description: "Iterations end datetime for periodic events."
          default: "None"
          enum:
          - "None"
          - "Count"
          - "Date"
        color:
          type: "string"
          description: "Color of Event title (including its presentation in Calendar)"
          default: "Black"
          enum:
          - "Black"
          - "Red"
          - "Orange"
          - "Yellow"
          - "Green"
          - "Blue"
          - "Purple"
          - "Magenta"
        location:
          type: "string"
          description: "Event location"
        description:
          type: "string"
          description: "Event details"
    GlipChatsListWithoutNavigation:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of chats"
          items:
            $ref: "#/components/schemas/GlipChatInfo"
    GlipMemberInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user"
    GlipChatInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a chat"
        type:
          type: "string"
          description: "Type of a chat"
          enum:
          - "Everyone"
          - "Team"
          - "Group"
          - "Direct"
          - "Personal"
        public:
          type: "boolean"
          description: "For 'Team' chat type only. Team access level."
        name:
          type: "string"
          description: "For 'Team','Everyone' chats types only. Chat name."
        description:
          type: "string"
          description: "For 'Team','Everyone' chats types only. Chat description."
        status:
          type: "string"
          description: "For 'Team' chat type only. Team status."
          enum:
          - "Active"
          - "Archived"
        creationTime:
          type: "string"
          description: "Chat creation datetime in ISO 8601 format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Chat last change datetime in ISO 8601 format"
          format: "date-time"
        members:
          type: "array"
          items:
            $ref: "#/components/schemas/GlipMemberInfo"
    PostGlipFile:
      required:
      - "contentUri"
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a file"
        contentUri:
          type: "string"
          description: "Link to binary content"
        name:
          type: "string"
          description: "Name of a file"
    GlipChatsList:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of chats"
          items:
            $ref: "#/components/schemas/GlipChatInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    GlipCreateTask:
      required:
      - "assignees"
      - "subject"
      type: "object"
      properties:
        subject:
          type: "string"
          description: "Task name/subject. Max allowed length is 250 characters."
        assignees:
          type: "array"
          items:
            $ref: "#/components/schemas/AssigneeInfo"
        completenessCondition:
          type: "string"
          default: "Simple"
          enum:
          - "Simple"
          - "AllAssignees"
          - "Percentage"
        startDate:
          type: "string"
          description: "Task start date in UTC time zone."
          format: "date-time"
        dueDate:
          type: "string"
          description: "Task due date/time in UTC time zone."
          format: "date-time"
        color:
          type: "string"
          default: "Black"
          enum:
          - "Black"
          - "Red"
          - "Orange"
          - "Yellow"
          - "Green"
          - "Blue"
          - "Purple"
          - "Magenta"
        section:
          type: "string"
          description: "Task section to group / search by. Max allowed length is 100\
            \ characters."
        description:
          type: "string"
          description: "Task details. Max allowed length is 102400 characters (100kB)."
        recurrence:
          $ref: "#/components/schemas/GlipTaskRecurrenceInfo"
        attachments:
          type: "array"
          items:
            $ref: "#/components/schemas/GlipAttachmentInfoRequest"
    GlipMentionsInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user"
        type:
          type: "string"
          description: "Type of mention"
          enum:
          - "Person"
          - "Team"
          - "File"
          - "Link"
          - "Event"
          - "Task"
          - "Note"
          - "Card"
        name:
          type: "string"
          description: "Name of a user"
    GlipMessageAttachmentFootnoteInfo:
      type: "object"
      properties:
        text:
          type: "string"
          description: "Text of a footer"
        iconUri:
          type: "string"
          description: "Link to an icon displayed to the left of a footer; sized 32x32px"
        time:
          type: "string"
          description: "Message creation datetime in ISO 8601 format including timezone,\
            \ for example *2016-03-10T18:07:52.534Z*"
          format: "date-time"
      description: "Message footer information"
    GlipPostInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a post"
        groupId:
          type: "string"
          description: "Internal identifier of a group a post belongs to"
        type:
          type: "string"
          description: "Type of a post"
          enum:
          - "TextMessage"
          - "PersonJoined"
          - "PersonsAdded"
        text:
          type: "string"
          description: "For 'TextMessage' post type only. Text of a message"
        creatorId:
          type: "string"
          description: "Internal identifier of a user - author of a post"
        addedPersonIds:
          type: "array"
          description: "For 'PersonsAdded' post type only. Identifiers of persons\
            \ added to a group"
          items:
            type: "string"
        creationTime:
          type: "string"
          description: "Post creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        attachments:
          type: "array"
          description: "List of posted attachments"
          items:
            $ref: "#/components/schemas/GlipMessageAttachmentInfo"
        mentions:
          type: "array"
          items:
            $ref: "#/components/schemas/GlipMentionsInfo"
        activity:
          type: "string"
          description: "Label of activity type"
        title:
          type: "string"
          description: "Title of a message. (Can be set for bot's messages only)"
        iconUri:
          type: "string"
          description: "Link to an image used as an icon for this message"
        iconEmoji:
          type: "string"
          description: "Emoji used as an icon for this message"
    GlipMessageAttachmentInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an attachment"
        type:
          type: "string"
          description: "Type of an attachment"
          default: "Card"
          enum:
          - "Card"
          - "Event"
          - "File"
          - "Note"
          - "Task"
        fallback:
          type: "string"
          description: "A string of default text that will be rendered in the case\
            \ that the client does not support Interactive Messages"
        intro:
          type: "string"
          description: "A pretext to the message"
        author:
          $ref: "#/components/schemas/GlipMessageAttachmentAuthorInfo"
        title:
          type: "string"
          description: "Message title"
        text:
          type: "string"
          description: "A large string field (up to 1000 chars) to be displayed as\
            \ the body of a message (Supports GlipDown)"
        imageUri:
          type: "string"
          description: "Link to an image displayed at the bottom of a message"
        thumbnailUri:
          type: "string"
          description: "Link to an image preview displayed to the right of a message\
            \ (82x82)"
        fields:
          type: "array"
          description: "Information on navigation"
          items:
            $ref: "#/components/schemas/GlipMessageAttachmentFieldsInfo"
        footnote:
          $ref: "#/components/schemas/GlipMessageAttachmentFootnoteInfo"
        creatorId:
          type: "string"
          description: "Internal identifier of a person created an event"
        startTime:
          type: "string"
          description: "Datetime of starting an event"
        endTime:
          type: "string"
          description: "Datetime of ending an event"
        allDay:
          type: "boolean"
          description: "Indicates whether an event has some specific time slot or\
            \ lasts for the whole day(s)"
          default: false
        recurrence:
          type: "string"
          description: "Event recurrence settings."
          enum:
          - "None"
          - "Day"
          - "Weekday"
          - "Week"
          - "Month"
          - "Year"
        endingCondition:
          type: "string"
          description: "Condition of ending"
        endingAfter:
          type: "integer"
          description: "Count of iterations. For periodic events only"
        endingOn:
          type: "string"
          description: "Iterations end datetime for periodic events"
          default: "None"
          enum:
          - "None"
          - "Count"
          - "Date"
        color:
          type: "string"
          description: "Color of Event title, including its presentation in Calendar;\
            \ or the color of the side border of an interactive message of a Card"
          default: "Black"
          enum:
          - "Black"
          - "Red"
          - "Orange"
          - "Yellow"
          - "Green"
          - "Blue"
          - "Purple"
          - "Magenta"
        location:
          type: "string"
          description: "Event location"
        description:
          type: "string"
          description: "Event details"
    GlipPostPostBody:
      type: "object"
      description: "Post data. At least one attribute should be provided (text or\
        \ attachments)"
      properties:
        text:
          type: "string"
          description: "Text of a post. Maximum length is 10000 symbols. Mentions\
            \ can be added in .md format `![:Type](id)`"
        attachments:
          type: "array"
          description: "Identifier(s) of attachments. Maximum number of attachments\
            \ is 25"
          items:
            $ref: "#/components/schemas/GlipAttachmentInfoRequest"
    GlipMessageAttachmentFieldsInfo:
      type: "object"
      properties:
        title:
          type: "string"
          description: "Title of an individual field"
        value:
          type: "string"
          description: "Value of an individual field (supports Markdown)"
        style:
          type: "string"
          description: "Style of width span applied to a field"
          default: "Short"
          enum:
          - "Short"
          - "Long"
    GlipMessageAttachmentAuthorInfo:
      type: "object"
      properties:
        name:
          type: "string"
          description: "Name of a message author"
        uri:
          type: "string"
          description: "Link to an author's name"
        iconUri:
          type: "string"
          description: "Link to an image displayed to the left of an author's name;\
            \ sized 82x82px"
      description: "Information about the author"
    GlipPostsList:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of posts"
          items:
            $ref: "#/components/schemas/GlipPostInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    GlipPatchPostBody:
      type: "object"
      properties:
        text:
          type: "string"
          description: "Post text."
    AdaptiveCardInfoRequest:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Container"
        items:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/AdaptiveCardInfoRequestItem"
    VerticalAlignment:
      type: "object"
      description: "Describes how the image should be aligned if it must be cropped\
        \ or if using repeat fill mode"
      anyOf:
      - enum:
        - "top"
        - "center"
        - "bottom"
      - pattern: "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
    AdaptiveCardSelectAction:
      type: "object"
      required:
      - "type"
      properties:
        type:
          type: "string"
          enum:
          - "Action.Submit"
          - "Action.OpenUrl"
          - "Action.ToggleVisibility"
    GlipAdaptiveCardRequest:
      type: "object"
      required:
      - "type"
      - "version"
      properties:
        type:
          type: "string"
          description: "Type of atttachment. This field is mandatory and filled on\
            \ server side - will be ignored if set in request body"
          enum:
          - "AdaptiveCard"
        version:
          type: "string"
          description: "Version. This field is mandatory and filled on server side\
            \ - will be ignored if set in request body"
        body:
          type: "array"
          description: "List of adaptive cards with the detailed information"
          items:
            type: "object"
            $ref: "#/components/schemas/AdaptiveCardInfoRequest"
        actions:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/AdaptiveCardAction"
        selectAction:
          type: "object"
          $ref: "#/components/schemas/AdaptiveCardSelectAction"
          description: "An action that will be invoked when the card is tapped or\
            \ selected. `Action.ShowCard` is not supported"
        fallbackText:
          type: "string"
        backgroundImage:
          description: "Specifies the background image of a card"
          oneOf:
          - type: "string"
          - $ref: "#/components/schemas/BackgroundImage"
        minHeight:
          type: "string"
          description: "Specifies the minimum height of the card in pxls"
          example:
          - "50px"
        speak:
          type: "string"
          description: "Specifies what should be spoken for this entire card. This\
            \ is simple text or SSML fragment"
        lang:
          type: "string"
          description: "The 2-letter ISO-639-1 language used in the card. Used to\
            \ localize any date/time functions"
          enum:
          - "en"
          - "fr"
          - "es"
        verticalContentAlignment:
          type: "object"
          $ref: "#/components/schemas/VerticalContentAlignment"
    HorizontalAlignment:
      type: "object"
      description: "Describes how the image should be aligned if it must be cropped\
        \ or if using repeat fill mode"
      anyOf:
      - enum:
        - "left"
        - "center"
        - "right"
      - pattern: "^([l|L][e|E][f|F][t|T])|([c|C][e|E][n|N][t|T][e|E][r|R])|([r|R][i|I][g|G][h|H][t|T])$"
    AdaptiveCardAction:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Action.ShowCard"
          - "Action.Submit"
          - "Action.OpenUrl"
          - "Action.ToggleVisibility"
        title:
          type: "string"
        card:
          type: "object"
          $ref: "#/components/schemas/ActionAdaptiveCardInfo"
        url:
          type: "string"
    ActionAdaptiveCardInfo:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "AdaptiveCard"
        body:
          type: "array"
          items:
            $ref: "#/components/schemas/ActionCardBody"
    ImageFillMode:
      description: "Describes how the image should fill the area"
      type: "object"
      anyOf:
      - enum:
        - "cover"
        - "repeatHorizontally"
        - "repeatVertically"
        - "repeat"
      - pattern: "^([c|C][o|O][v|V][e|E][r|R])|([r|R][e|E][p|P][e|E][a|A][t|T][h|H][o|O][r|R][i|I][z|Z][o|O][n|N][t|T][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T][v|V][e|E][r|R][t|T][i|I][c|C][a|A][l|L][l|L][y|Y])|([r|R][e|E][p|P][e|E][a|A][t|T])$"
    AdaptiveCardColumnInfo:
      type: "object"
      properties:
        type:
          type: "string"
        width:
          type: "string"
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/AdaptiveCardColumnItemInfo"
    ActionCardBody:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Input.Text"
        id:
          type: "string"
        isMultiline:
          type: "boolean"
          description: "If set to `true`, allows multiple lines of input"
          default: false
        placeholder:
          type: "string"
          description: "Description of the input desired. Displayed when no text has\
            \ been input"
    BackgroundImage:
      type: "object"
      required:
      - "url"
      description: "Specifies a background image oa a card. Acceptable formats are\
        \ PNG, JPEG, and GIF"
      properties:
        type:
          type: "string"
          enum:
          - "BackgroundImage"
          description: "Must be `BackgroundImage`"
        url:
          type: "string"
          format: "uri-reference"
          description: "The URL/data URL of an image to be used as a background of\
            \ a card. Acceptable formats are PNG, JPEG, and GIF"
        fillMode:
          $ref: "#/components/schemas/ImageFillMode"
        horizontalAlignment:
          $ref: "#/components/schemas/HorizontalAlignment"
        verticalAlignment:
          $ref: "#/components/schemas/VerticalAlignment"
    AdaptiveCardCreator:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a creator"
    AdaptiveCardColumnItemInfo:
      type: "object"
      properties:
        type:
          type: "string"
        url:
          type: "string"
        size:
          type: "string"
        style:
          type: "string"
        wrap:
          type: "boolean"
        spacing:
          type: "string"
        text:
          type: "string"
        isSubtle:
          type: "boolean"
    VerticalContentAlignment:
      type: "object"
      description: "Defines how the content should be aligned vertically within the\
        \ container. Only relevant for fixed-height cards, or cards with a `minHeight`\
        \ specified"
      anyOf:
      - enum:
        - "top"
        - "center"
        - "bottom"
      - pattern: "^([t|T][o|O][p|P])|([c|C][e|E][n|N][t|T][e|E][r|R])|([b|B][o|O][t|T][t|T][o|O][m|M])$"
    GlipAdaptiveCardShortInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an adaptive card"
        creationTime:
          type: "string"
          description: "Adaptive Card creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        $schema:
          type: "string"
          description: "Schema of an adaptive card"
        type:
          type: "string"
          enum:
          - "AdaptiveCard"
        version:
          type: "string"
          description: "Version of an adaptive card. Filled on server-side"
        creator:
          type: "object"
          $ref: "#/components/schemas/AdaptiveCardCreator"
        chatIds:
          type: "array"
          description: "Chat IDs where an adaptive card is posted or shared."
          items:
            type: "string"
    AdaptiveCardInfoRequestItem:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "TextBlock"
          - "ColumnSet"
          - "Column"
          - "FactSet"
        text:
          type: "string"
        weight:
          type: "string"
        size:
          type: "string"
        columns:
          type: "array"
          items:
            $ref: "#/components/schemas/AdaptiveCardColumnInfo"
    GlipNoteCreate:
      required:
      - "title"
      type: "object"
      properties:
        title:
          type: "string"
          description: "Title of a note. Max allowed length is 250 characters"
        body:
          type: "string"
          description: "Contents of a note; HTML-markuped text. Max allowed length\
            \ is 1048576 characters (1 Mb)."
    GlipNoteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a note"
        title:
          type: "string"
          description: "Title of a note"
        chatIds:
          type: "array"
          description: "Internal identifiers of the chat(s) where the note is posted\
            \ or shared."
          items:
            type: "string"
        preview:
          type: "string"
          description: "Preview of a note (first 150 characters of a body)"
        creator:
          $ref: "#/components/schemas/GlipCreatorInfo"
        lastModifiedBy:
          $ref: "#/components/schemas/LastModifiedByInfo"
        lockedBy:
          $ref: "#/components/schemas/LockedByInfo"
        status:
          type: "string"
          description: "Note publishing status. Any note is created in 'Draft' status.\
            \ After it is posted it becomes 'Active'"
          enum:
          - "Active"
          - "Draft"
        creationTime:
          type: "string"
          description: "Creation time"
        lastModifiedTime:
          type: "string"
          description: "Datetime of the note last update"
        type:
          type: "string"
          enum:
          - "Note"
    LockedByInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the user editing the note"
      description: "Returned for the note being edited (locked) at the current moment.\
        \ Information on the user editing the note"
    GlipNotesInfo:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/GlipNoteInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    LastModifiedByInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of the user who last updated the note"
      description: "Note last modification information"
    GlipAdaptiveCardInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an adaptive card"
        creationTime:
          type: "string"
          description: "Adaptive Card creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        $schema:
          type: "string"
          format: "uri"
          description: "Schema of an adaptive card"
        type:
          type: "string"
          enum:
          - "AdaptiveCard"
        version:
          type: "string"
          description: "Version of an adaptive card"
        creator:
          type: "object"
          $ref: "#/components/schemas/AdaptiveCardCreator"
        chatIds:
          type: "array"
          description: "Chat IDs where an adaptive card is posted or shared."
          items:
            type: "string"
        body:
          type: "array"
          description: "List of card elements to show in the primary card region"
          items:
            type: "object"
            $ref: "#/components/schemas/AdaptiveCardInfoRequest"
        actions:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/AdaptiveCardAction"
        selectAction:
          type: "object"
          $ref: "#/components/schemas/AdaptiveCardSelectAction"
          description: "An action that will be invoked when the card is tapped or\
            \ selected. `Action.ShowCard` is not supported"
        fallbackText:
          type: "string"
          description: "Text shown when the client doesn't support the version specified\
            \ (may contain markdown)"
        backgroundImage:
          oneOf:
          - $ref: "#/components/schemas/BackgroundImage"
          - type: "string"
          description: "Specifies the background image of a card"
        minHeight:
          type: "string"
          description: "Specifies the minimum height of the card in pxls"
          example:
          - "50px"
        speak:
          type: "string"
          description: "Specifies what should be spoken for this entire card. This\
            \ is simple text or SSML fragment"
        lang:
          type: "string"
          description: "The 2-letter ISO-639-1 language used in the card. Used to\
            \ localize any date/time functions"
          enum:
          - "en"
          - "fr"
          - "es"
        verticalContentAlignment:
          type: "object"
          $ref: "#/components/schemas/VerticalContentAlignment"
    GlipWebhookInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a webhook"
        creatorId:
          type: "string"
          description: "Internal identifier of the user who created a webhook"
        groupIds:
          type: "array"
          description: "Internal identifiers of groups where a webhook has been created"
          items:
            type: "string"
        creationTime:
          type: "string"
          description: "Webhook creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Webhook last update time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        uri:
          type: "string"
          description: "Public link to send a webhook payload"
        status:
          type: "string"
          description: "Current status of a webhook"
          enum:
          - "Active"
          - "Suspended"
          - "Deleted"
    GlipWebhookList:
      type: "object"
      properties:
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/GlipWebhookInfo"
    GlipCompany:
      required:
      - "creationTime"
      - "id"
      - "lastModifiedTime"
      type: "object"
      properties:
        id:
          description: "Internal identifier of a Glip company (RC account)"
          type: "string"
        name:
          type: "string"
          description: "Name of a company"
        domain:
          type: "string"
          description: "Domain name of a company"
        creationTime:
          type: "string"
          description: "Datetime of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
        lastModifiedTime:
          type: "string"
          description: "Datetime of last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
    GlipPersonInfo:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user"
        firstName:
          type: "string"
          description: "First name of a user"
        lastName:
          type: "string"
          description: "Last name of a user"
        email:
          type: "string"
          description: "Email of a user"
        avatar:
          type: "string"
          description: "Photo of a user"
        companyId:
          type: "string"
          description: "Internal identifier of a company"
        creationTime:
          type: "string"
          description: "Time of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Time of the last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
    GlipMessageAttachmentInfoRequest:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type of attachment"
          default: "Card"
          enum:
          - "Card"
          - "Event"
          - "Note"
        title:
          type: "string"
          description: "Attachment title"
        fallback:
          type: "string"
          description: "Default message returned in case the client does not support\
            \ interactive messages"
        color:
          type: "string"
          description: "Color of Event title, including its presentation in Calendar;\
            \ or the color of the side border of an interactive message of a Card.\
            \ The default color is 'Black'"
        intro:
          type: "string"
          description: "Introductory text displayed directly above a message"
        author:
          $ref: "#/components/schemas/GlipMessageAttachmentAuthorInfo"
        text:
          type: "string"
          description: "Text of attachment (up to 1000 chars), supports GlipDown"
        imageUri:
          type: "string"
          description: "Link to an image displayed at the bottom of a message"
        thumbnailUri:
          type: "string"
          description: "Link to an image preview displayed to the right of a message\
            \ (82x82)"
        fields:
          type: "array"
          description: "Individual subsections within a message"
          items:
            $ref: "#/components/schemas/GlipMessageAttachmentFieldsInfo"
        footnote:
          $ref: "#/components/schemas/GlipMessageAttachmentFootnoteInfo"
        startTime:
          type: "string"
          description: "Datetime of starting an event"
        endTime:
          type: "string"
          description: "Datetime of ending an event"
        allDay:
          type: "boolean"
          description: "Indicates whether an event has some specific time slot or\
            \ lasts for the whole day(s)"
          default: false
        recurrence:
          type: "string"
          description: "Event recurrence settings. For non-periodic events the value\
            \ is 'None'. Must be greater or equal to event duration: 1- Day/Weekday;\
            \ 7 - Week; 28 - Month; 365 - Year"
          enum:
          - "None"
          - "Day"
          - "Weekday"
          - "Week"
          - "Month"
          - "Year"
        endingCondition:
          type: "string"
          description: "Condition of ending an event"
    GlipPosts:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of posts"
          items:
            $ref: "#/components/schemas/GlipPostInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    GlipCreatePost:
      type: "object"
      properties:
        activity:
          type: "string"
        title:
          type: "string"
          description: "Title of a message. (Can be set for bot's messages only)."
        text:
          type: "string"
          description: "Text of a post"
        groupId:
          type: "string"
          description: "Internal identifier of a group"
        attachments:
          type: "array"
          description: "List of attachments to be posted"
          items:
            $ref: "#/components/schemas/GlipMessageAttachmentInfoRequest"
        personIds:
          type: "array"
          items:
            type: "string"
        system:
          type: "boolean"
    CreateGlipConversationRequest:
      required:
      - "members"
      type: "object"
      properties:
        members:
          type: "array"
          description: "List of glip members. The maximum supported number of IDs\
            \ is 15. User's own ID is optional. If `members` section is omitted then\
            \ 'Personal' chat will be returned"
          items:
            $ref: "#/components/schemas/CreateGlipMember"
    GlipConversationInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a conversation"
        type:
          type: "string"
          description: "Type of a conversation"
          enum:
          - "Direct"
          - "Personal"
          - "Group"
        creationTime:
          type: "string"
          description: "Conversation creation datetime in ISO 8601 format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Conversation last change datetime in ISO 8601 format"
          format: "date-time"
        members:
          type: "array"
          description: "List of glip members"
          items:
            $ref: "#/components/schemas/CreateGlipMember"
    CreateGlipMember:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user"
        email:
          type: "string"
          description: "Email of a user"
    GlipConversationsList:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of conversations"
          items:
            $ref: "#/components/schemas/GlipConversationInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    GlipGroupList:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of groups/teams/private chats"
          items:
            $ref: "#/components/schemas/GlipGroupInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    GlipGroupsEvent:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a group"
        type:
          type: "string"
          description: "Type of a group. 'PrivateChat' is a group of 2 members. 'Group'\
            \ is a chat of 2 and more participants, the membership cannot be changed\
            \ after group creation. 'Team' is a chat of 1 and more participants, the\
            \ membership can be modified in future. 'PersonalChat' is a private chat\
            \ thread of a user"
          enum:
          - "PrivateChat"
          - "Group"
          - "Team"
          - "PersonalChat"
        isPublic:
          type: "boolean"
          description: "For 'Team' group type only. Team access level"
        name:
          type: "string"
          description: "For 'Team' group type only. Team name"
        description:
          type: "string"
          description: "For 'Team' group type only. Team description"
        members:
          type: "array"
          description: "“List of glip members”"
          items:
            $ref: "#/components/schemas/GlipMemberInfo"
        creationTime:
          type: "string"
          description: "Group creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Group last change datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        eventType:
          type: "string"
          description: "Type of a group event. Only the person who joined/was added\
            \ to a group will receive 'GroupJoined' notification. Only the person\
            \ who left/was removed from a group will receive 'GroupLeft' notification"
          enum:
          - "GroupRenamed"
          - "GroupJoined"
          - "GroupLeft"
          - "GroupChanged"
    GlipGroupInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a group"
        type:
          type: "string"
          description: "Type of a group. 'PrivateChat' is a group of 2 members. 'Group'\
            \ is a chat of 2 and more participants, the membership cannot be changed\
            \ after group creation. 'Team' is a chat of 1 and more participants, the\
            \ membership can be modified in future. 'PersonalChat' is a private chat\
            \ thread of a user"
          enum:
          - "PrivateChat"
          - "Group"
          - "Team"
          - "PersonalChat"
        isPublic:
          type: "boolean"
          description: "For 'Team' group type only. Team access level"
        name:
          type: "string"
          description: "For 'Team' group type only. Team name"
        description:
          type: "string"
          description: "For 'Team' group type only. Team description"
        members:
          type: "array"
          description: "“List of glip members”"
          items:
            type: "string"
            description: "Internal identifier of a member"
        creationTime:
          type: "string"
          description: "Group creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Group last change datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
    GlipCreateGroup:
      required:
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type of a group to be created. 'PrivateChat' is a group of\
            \ 2 members. 'Team' is a chat of 1 and more participants, the membership\
            \ can be modified in future. 'PersonalChat' is a private chat thread of\
            \ a user"
          enum:
          - "PrivateChat"
          - "Team"
        isPublic:
          type: "boolean"
          description: "For 'Team' group type only. Team access level"
        name:
          type: "string"
          description: "For 'Team' group type only. Team name"
        description:
          type: "string"
          description: "For 'Team' group type only. Team description"
        members:
          type: "array"
          description: "“List of glip members. For 'PrivateChat' group type 2 members\
            \ only are supported”"
          items:
            $ref: "#/components/schemas/GlipMemberInfo"
    GlipPostEvent:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a post"
        eventType:
          type: "string"
          description: "Type of a post event"
          enum:
          - "PostAdded"
          - "PostChanged"
          - "PostRemoved"
        groupId:
          type: "string"
          description: "Internal identifier of a group a post belongs to"
        type:
          type: "string"
          description: "Type of a post. 'TextMessage' - an incoming text message;\
            \ 'PersonJoined' - a message notifying that person has joined a conversation;\
            \ 'PersonsAdded' - a message notifying that a person(s) were added to\
            \ a conversation"
          enum:
          - "TextMessage"
          - "PersonJoined"
          - "PersonsAdded"
          - "Card"
        text:
          type: "string"
          description: "For 'TextMessage' post type only. Message text"
        creatorId:
          type: "string"
          description: "Internal identifier of a user - author of a post"
        addedPersonIds:
          type: "array"
          description: "For PersonsAdded post type only. Identifiers of persons added\
            \ to a group"
          items:
            type: "string"
        removedPersonIds:
          type: "array"
          description: "For PersonsRemoved post type only. Identifiers of persons\
            \ removed from a group"
          items:
            type: "string"
        mentions:
          type: "array"
          description: "List of mentions in post text with names."
          items:
            $ref: "#/components/schemas/GlipMentionsInfo"
        creationTime:
          type: "string"
          description: "Post creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Post last change datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format"
          format: "date-time"
    EditGroupRequest:
      type: "object"
      properties:
        addedPersonIds:
          type: "array"
          description: "List of users to be added to a team"
          items:
            type: "string"
        addedPersonEmails:
          type: "array"
          description: "List of user email addresses to be added to a team (i.e. as\
            \ guests)"
          items:
            type: "string"
        removedPersonIds:
          type: "array"
          description: "List of users to be removed from a team"
          items:
            type: "string"
    GlipDataExportNavigationInfo:
      type: "object"
      properties:
        firstPage:
          $ref: "#/components/schemas/GlipDataExportNavigationInfoUri"
        nextPage:
          $ref: "#/components/schemas/GlipDataExportNavigationInfoUri"
        previousPage:
          $ref: "#/components/schemas/GlipDataExportNavigationInfoUri"
        lastPage:
          $ref: "#/components/schemas/GlipDataExportNavigationInfoUri"
    SpecificInfo:
      type: "object"
      properties:
        timeFrom:
          type: "string"
          description: "Starting time for data collection"
        timeTo:
          type: "string"
          description: "Ending time for data collection"
        contacts:
          type: "array"
          items:
            $ref: "#/components/schemas/DataExportTaskContactInfo"
        chatIds:
          type: "array"
          description: "List of chats from which the data (posts, files, tasks, events,\
            \ notes, etc.) will be collected"
          items:
            type: "string"
      description: "Information specified in request"
    ExportTaskResultInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a dataset"
        uri:
          type: "string"
          description: "Link for downloading a dataset"
        size:
          type: "integer"
          description: "Size of ta dataset in bytes"
    GlipDataExportPagingInfo:
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number. 1-indexed, so the first page is 1\
            \ by default. May be omitted if result is empty (because non-existent\
            \ page was specified or perPage=0 was requested)"
        perPage:
          type: "integer"
          description: "Current page size, describes how many items are in each page.\
            \ Default value is 100. Maximum value is 1000. If perPage value in the\
            \ request is greater than 1000, the maximum value (1000) is applied"
        pageStart:
          type: "integer"
          description: "The zero-based number of the first element on the current\
            \ page. Omitted if the page is omitted or result is empty"
        pageEnd:
          type: "integer"
          description: "The zero-based index of the last element on the current page.\
            \ Omitted if the page is omitted or result is empty"
        totalPages:
          type: "integer"
          description: "The total number of pages in a dataset. May be omitted for\
            \ some resources due to performance reasons"
        totalElements:
          type: "integer"
          description: "The total number of elements in a dataset. May be omitted\
            \ for some resource due to performance reasons"
    DataExportTaskList:
      type: "object"
      properties:
        tasks:
          type: "array"
          items:
            $ref: "#/components/schemas/DataExportTask"
        navigation:
          $ref: "#/components/schemas/GlipDataExportNavigationInfo"
        paging:
          $ref: "#/components/schemas/GlipDataExportPagingInfo"
    CreatorInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a user"
        firstName:
          type: "string"
          description: "First name of a user"
        lastName:
          type: "string"
          description: "Last name of a user"
      description: "Task creator information"
    GlipDataExportNavigationInfoUri:
      type: "object"
      properties:
        uri:
          type: "string"
      description: "Canonical URI for the corresponding page of the list"
    DataExportTask:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a task"
        id:
          type: "string"
          description: "Internal identifier of a task"
        creationTime:
          type: "string"
          description: "Task creation datetime"
        lastModifiedTime:
          type: "string"
          description: "Task last modification datetime"
        status:
          type: "string"
          description: "Task status"
          enum:
          - "Accepted"
          - "InProgress"
          - "Completed"
          - "Failed"
          - "Expired"
        creator:
          $ref: "#/components/schemas/CreatorInfo"
        specific:
          $ref: "#/components/schemas/SpecificInfo"
        datasets:
          type: "array"
          description: "Data collection sets. Returned by task ID"
          items:
            $ref: "#/components/schemas/ExportTaskResultInfo"
    DataExportTaskContactInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a contact"
        email:
          type: "string"
          description: "Email address of a contact"
      description: "List of users whose data is collected. The following data will\
        \ be exported: posts, tasks, events, etc. posted by the user(s); posts addressing\
        \ the user(s) via direct and @Mentions; tasks assigned to the listed user(s).\
        \ The list of 10 users per request is supported."
    CreateDataExportTaskRequest:
      type: "object"
      properties:
        timeFrom:
          type: "string"
          description: "Starting time for data collection. The default value is `timeTo`\
            \ minus 24 hours. Max allowed time frame between `timeFrom` and `timeTo`\
            \ is 6 months"
        timeTo:
          type: "string"
          description: "Ending time for data collection. The default value is current\
            \ time. Max allowed time frame between `timeFrom` and `timeTo` is 6 months"
        contacts:
          type: "array"
          items:
            $ref: "#/components/schemas/DataExportTaskContactInfo"
        chatIds:
          type: "array"
          description: "List of chats from which the data (posts, files, tasks, events,\
            \ notes, etc.) will be collected. Maximum number of chats supported is\
            \ 10"
          items:
            type: "string"
    UpdateGlipEveryoneRequest:
      type: "object"
      properties:
        name:
          type: "integer"
          description: "Everyone chat name. Maximum number of characters supported\
            \ is 250"
        description:
          type: "string"
          description: "Everyone chat description. Maximum number of characters supported\
            \ is 1000"
    GlipEveryoneInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a chat"
        type:
          type: "string"
          description: "Type of a chat"
          enum:
          - "Everyone"
        name:
          type: "string"
          description: "Chat name"
        description:
          type: "string"
          description: "Chat description"
        creationTime:
          type: "string"
          description: "Chat creation datetime in ISO 8601 format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Chat last change datetime in ISO 8601 format"
          format: "date-time"
    GlipPostTeamBody:
      required:
      - "name"
      type: "object"
      properties:
        public:
          type: "boolean"
          description: "Team access level."
        name:
          type: "string"
          description: "Team name."
        description:
          type: "string"
          description: "Team description."
        members:
          type: "array"
          description: "List of glip members"
          items:
            $ref: "#/components/schemas/CreateGlipMember"
    GlipTeamsList:
      required:
      - "records"
      type: "object"
      properties:
        records:
          type: "array"
          description: "List of teams"
          items:
            $ref: "#/components/schemas/GlipTeamInfo"
        navigation:
          $ref: "#/components/schemas/GlipNavigationInfo"
    GlipTeamInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a team"
        type:
          type: "string"
          description: "Type of a chat"
          enum:
          - "Team"
        public:
          type: "boolean"
          description: "Team access level"
        name:
          type: "string"
          description: "Team name"
        description:
          type: "string"
          description: "Team description"
        status:
          type: "string"
          description: "Team status"
          enum:
          - "Active"
          - "Archived"
        creationTime:
          type: "string"
          description: "Team creation datetime in ISO 8601 format"
          format: "date-time"
        lastModifiedTime:
          type: "string"
          description: "Team last change datetime in ISO 8601 format"
          format: "date-time"
    GlipPatchTeamBody:
      type: "object"
      properties:
        public:
          type: "boolean"
          description: "Team access level"
        name:
          type: "string"
          description: "Team name. Maximum number of characters supported is 250"
        description:
          type: "string"
          description: "Team description. Maximum number of characters supported is\
            \ 1000"
    GlipPostMembersIdsListBody:
      required:
      - "members"
      type: "object"
      properties:
        members:
          type: "array"
          description: "Identifier(s) of chat members."
          items:
            $ref: "#/components/schemas/GlipMemberInfo"
    GlipPostMembersListBody:
      required:
      - "members"
      type: "object"
      properties:
        members:
          type: "array"
          description: "List of glip members"
          items:
            $ref: "#/components/schemas/CreateGlipMember"
    GetGlipNoteInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a note"
        title:
          type: "string"
          description: "Title of a note"
        chatIds:
          type: "array"
          description: "Internal identifiers of the chat(s) where the note is posted\
            \ or shared."
          items:
            type: "string"
        preview:
          type: "string"
          description: "Preview of a note (first 150 characters of a body)"
        body:
          type: "string"
          description: "Text of a note"
        creator:
          $ref: "#/components/schemas/GlipCreatorInfo"
        lastModifiedBy:
          $ref: "#/components/schemas/LastModifiedByInfo"
        lockedBy:
          $ref: "#/components/schemas/LockedByInfo"
        status:
          type: "string"
          description: "Note publishing status. Any note is created in 'Draft' status.\
            \ After it is posted it becomes 'Active'"
          enum:
          - "Active"
          - "Draft"
        creationTime:
          type: "string"
          description: "Creation time"
        lastModifiedTime:
          type: "string"
          description: "Datetime of the note last update"
        type:
          type: "string"
          enum:
          - "Note"
    GlipPreferencesInfo:
      type: "object"
      properties:
        chats:
          $ref: "#/components/schemas/GlipPreferencesChats"
    GlipPreferencesChats:
      type: "object"
      properties:
        maxCount:
          type: "integer"
        leftRailMode:
          type: "string"
          default: "CombineAllChatTypes"
          enum:
          - "SeparateAllChatTypes"
          - "SeparateConversationsAndTeams"
          - "CombineAllChatTypes"
    CreateSubscriptionRequest:
      required:
      - "deliveryMode"
      - "eventFilters"
      type: "object"
      properties:
        eventFilters:
          type: "array"
          description: "The list of event filter names corresponding to events the\
            \ user is subscribed to"
          minItems: 1
          items:
            type: "string"
            minLength: 1
        deliveryMode:
          $ref: "#/components/schemas/NotificationDeliveryMode"
        expiresIn:
          type: "integer"
          format: "int32"
          description: "Subscription lifetime in seconds. For \"WebHook\" transport\
            \ type max value might be set up to 315360000\nseconds (10 years). For\
            \ \"RC/APNS\" and \"RC/GSM\" transport types max subscription lifetime\
            \ is 7776000 seconds (90 days).\nFor \"PubNub\" transport type the max\
            \ value is 900 seconds (15 minutes)\n"
    DisabledFilterInfo:
      type: "object"
      required:
      - "filter"
      - "reason"
      properties:
        filter:
          type: "string"
          description: "Event filter that is disabled for the user"
        reason:
          type: "string"
          description: "Reason why the filter is disabled for the user"
        message:
          type: "string"
          description: "Error message"
    SubscriptionListResource:
      type: "object"
      required:
      - "uri"
      - "records"
      properties:
        uri:
          type: "string"
          format: "uri"
          description: "Canonical URI of a resource"
        records:
          type: "array"
          minItems: 0
          maxItems: 20
          items:
            $ref: "#/components/schemas/SubscriptionInfo"
    SubscriptionInfo:
      required:
      - "id"
      - "uri"
      - "eventFilters"
      - "deliveryMode"
      - "creationTime"
      - "expirationTime"
      - "status"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a subscription resource"
          readOnly: true
        id:
          type: "string"
          description: "Internal identifier of a subscription"
          readOnly: true
        eventFilters:
          type: "array"
          description: "The list of event filter names corresponding to events the\
            \ user is subscribed to"
          minItems: 0
          items:
            type: "string"
            minLength: 1
        disabledFilters:
          type: "array"
          minItems: 0
          description: "The list of event filter names corresponding to events the\
            \ user is not subscribed to due to certain limitations"
          items:
            $ref: "#/components/schemas/DisabledFilterInfo"
          readOnly: true
        expirationTime:
          type: "string"
          format: "date-time"
          description: "Subscription expiration datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
          readOnly: true
        expiresIn:
          type: "integer"
          format: "int32"
          description: "Subscription lifetime in seconds"
        status:
          type: "string"
          description: "Subscription status"
          enum:
          - "Active"
          - "Suspended"
          - "Blacklisted"
          readOnly: true
        creationTime:
          type: "string"
          description: "Subscription creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534*"
          format: "date-time"
          readOnly: true
        deliveryMode:
          $ref: "#/components/schemas/NotificationDeliveryMode"
        blacklistedData:
          description: "Returned if a WebHook subscription is blacklisted"
          readOnly: true
          properties:
            blacklistedAt:
              type: "string"
              format: "date-time"
              description: "Time of adding subscription to a black list in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
                \ format including timezone, for example *2016-03-10T18:07:52.534Z*"
            reason:
              type: "string"
              description: "Reason of adding subscription to a black list"
    NotificationDeliveryMode:
      type: "object"
      required:
      - "transportType"
      properties:
        transportType:
          type: "string"
          description: "Notifications transport name, e.g. \"WebHook\""
          enum:
          - "PubNub"
          - "RC/APNS"
          - "RC/GCM"
          - "WebHook"
        address:
          type: "string"
          description: "For a \"WebHook\" transport - URL of a consumer service (cannot\
            \ be changed during subscription update)"
          example: "https://acme.com/myservice/webhook"
        encryption:
          type: "boolean"
          description: "Optional parameter. Specifies if the message will be encrypted\n\
            or not. If request contains any presence event filter the value by default\n\
            is 'true' (even if specified as 'false'). If request contains only message\n\
            event filters the value by default is 'false'\n"
        certificateName:
          type: "string"
          description: "Certificate name (for \"RC/APNS\" and \"RC/GCM\" transport\
            \ types only)"
          writeOnly: true
        registrationId:
          type: "string"
          description: "Registration identifier (for \"RC/APNS\" and \"RC/GCM\" transport\
            \ types only)"
          writeOnly: true
        verificationToken:
          type: "string"
          description: "Subscription verification token ensuring data security (For\
            \ \"Webhook\" transport type only)"
          writeOnly: true
        subscriberKey:
          type: "string"
          description: "PubNub subscriber credentials required to subscribe to the\
            \ channel (for \"PubNub\" transport type only)"
          readOnly: true
        secretKey:
          type: "string"
          description: "PubNub subscriber credentials required to subscribe to the\
            \ channel (for \"PubNub\" transport type only)"
          readOnly: true
        encryptionAlgorithm:
          type: "string"
          description: "Encryption algorithm \"AES\" (for \"PubNub\" transport type\
            \ only)"
          readOnly: true
        encryptionKey:
          type: "string"
          description: "Key for notification message decryption (for \"PubNub\" transport\
            \ type only)"
          readOnly: true
    UpdateSubscriptionRequest:
      type: "object"
      required:
      - "eventFilters"
      properties:
        eventFilters:
          type: "array"
          description: "The list of event filters corresponding to events the user\
            \ is subscribed to"
          minItems: 1
          items:
            type: "string"
            minLength: 1
        expiresIn:
          type: "integer"
          format: "int32"
          description: "Subscription lifetime in seconds. For \"WebHook\" transport\
            \ type max value might be set up to 315360000\nseconds (10 years). For\
            \ \"RC/APNS\" and \"RC/GSM\" transport types max subscription lifetime\
            \ is 7776000 seconds (90 days).\nFor \"PubNub\" transport type the max\
            \ value is 900 seconds (15 minutes)\n"
    GetCountryInfoNumberParser:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a country"
        uri:
          type: "string"
          description: "Canonical URI of a country"
        callingCode:
          type: "string"
          description: "Country calling code defined by ITU-T recommendations E.123\
            \ and E.164, see Calling Codes"
        emergencyCalling:
          type: "boolean"
          description: "Emergency calling feature availability/emergency address requirement\
            \ indicator"
        isoCode:
          type: "string"
          description: "Country code according to the ISO standard, see ISO 3166"
        name:
          type: "string"
          description: "Official name of a country"
      description: "Information on a user home country || Information on a country\
        \ the phone number belongs to"
    PhoneNumberInfoNumberParser:
      type: "object"
      properties:
        areaCode:
          type: "string"
          description: "Area code of location. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ number that identifies a specific geographic region/numbering area of\
            \ the national numbering plan (NANP); that can be summarized as `NPA-NXX-xxxx`\
            \ and covers Canada, the United States, parts of the Caribbean Sea, and\
            \ some Atlantic and Pacific islands. See [North American Numbering Plan]\
            \ (https://en.wikipedia.org/wiki/North_American_Numbering_Plan) for details"
        country:
          $ref: "#/components/schemas/GetCountryInfoNumberParser"
        dialable:
          type: "string"
          description: "Dialing format of a phone number"
        e164:
          type: "string"
          description: "Phone number [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format"
        formattedInternational:
          type: "string"
          description: "International format of a phone number"
        formattedNational:
          type: "string"
          description: "Domestic format of a phone number"
        originalString:
          type: "string"
          description: "One of the numbers to be parsed, passed as a string in response"
        special:
          type: "boolean"
          description: "'True' if the number is in a special format (for example N11\
            \ code)"
        normalized:
          type: "string"
          description: "Phone number [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ format without plus sign ('+')"
        tollFree:
          type: "boolean"
          description: "Specifies if a phone number is toll free or not"
        subAddress:
          type: "string"
          description: "Sub-Address. The portion of the number that identifies a subscriber\
            \ into the subscriber internal (non-public) network."
        subscriberNumber:
          type: "string"
          description: " Subscriber number. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)\
            \ number that identifies a subscriber in a network or numbering area."
        dtmfPostfix:
          type: "string"
          description: "DTMF (Dual Tone Multi-Frequency) postfix"
    ParsePhoneNumberRequest:
      type: "object"
      properties:
        originalStrings:
          type: "array"
          description: "Phone numbers passed in a string. The maximum value of phone\
            \ numbers is limited to 64. The maximum number of symbols in each phone\
            \ number in a string is 64"
          items:
            type: "string"
    ParsePhoneNumberResponse:
      required:
      - "homeCountry"
      - "phoneNumbers"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a resource"
        homeCountry:
          $ref: "#/components/schemas/GetCountryInfoNumberParser"
        phoneNumbers:
          type: "array"
          description: "Parsed phone numbers data"
          items:
            $ref: "#/components/schemas/PhoneNumberInfoNumberParser"
    GetCountryListResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the list of countries supported"
        records:
          type: "array"
          description: "List of countries with the country data"
          items:
            $ref: "#/components/schemas/GetCountryInfoDictionaryResponse"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    GetCountryInfoDictionaryResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a country"
        uri:
          type: "string"
          description: "Canonical URI of a country"
        callingCode:
          type: "string"
          description: "Country calling code defined by ITU-T recommendations [E.123](https://www.itu.int/rec/T-REC-E.123-200102-I/en)\
            \ and [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)"
        emergencyCalling:
          type: "boolean"
          description: "Emergency calling feature availability/emergency address requirement\
            \ indicator"
        isoCode:
          type: "string"
          description: "Country code according to the ISO standard, see [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)"
        name:
          type: "string"
          description: "Official name of a country"
        numberSelling:
          type: "boolean"
          description: "Determines whether phone numbers are available for a country"
        loginAllowed:
          type: "boolean"
          description: "Specifies whether login with the phone numbers of this country\
            \ is enabled or not"
        signupAllowed:
          type: "boolean"
          description: "Indicates whether signup/billing is allowed for a country"
        freeSoftphoneLine:
          type: "boolean"
          description: "Specifies if free phone line for softphone is available for\
            \ a country or not"
    GetStateInfoResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a state"
        uri:
          type: "string"
          description: "Canonical URI of a state"
        country:
          $ref: "#/components/schemas/GetCountryInfoState"
        isoCode:
          type: "string"
          description: "Short code for a state (2-letter usually)"
        name:
          type: "string"
          description: "Official name of a state"
    GetStateListResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the states list resource"
        records:
          type: "array"
          description: "List of states"
          items:
            $ref: "#/components/schemas/GetStateInfoResponse"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    GetCountryInfoState:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a state"
        uri:
          type: "string"
          description: "Canonical URI of a state"
      description: "Information on a country the state belongs to"
    GetLocationListResponse:
      required:
      - "navigation"
      - "paging"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the location list resource"
        records:
          type: "array"
          description: "List of locations"
          items:
            $ref: "#/components/schemas/LocationInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    LocationStateInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a state"
        uri:
          type: "string"
          description: "Link to a state resource"
      description: "Information on the state this location belongs to"
    LocationInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of a location"
        areaCode:
          type: "string"
          description: "Area code of the location"
        city:
          type: "string"
          description: "Official name of the city, belonging to the certain state"
        npa:
          type: "string"
          description: "Area code of the location (3-digit usually), according to\
            \ the NANP number format, that can be summarized as NPA-NXX-xxxx and covers\
            \ Canada, the United States, parts of the Caribbean Sea, and some Atlantic\
            \ and Pacific islands. See for details North American Numbering Plan"
        nxx:
          type: "string"
          description: "Central office code of the location, according to the NANP\
            \ number format, that can be summarized as NPA-NXX-xxxx and covers Canada,\
            \ the United States, parts of the Caribbean Sea, and some Atlantic and\
            \ Pacific islands. See for details North American Numbering Plan"
        state:
          $ref: "#/components/schemas/LocationStateInfo"
    PermissionCollectionResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/PermissionResource"
        paging:
          $ref: "#/components/schemas/RNPPagingInfo"
        navigation:
          $ref: "#/components/schemas/RNPNavigationInfo"
    PermissionCategoryIdResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
    PermissionResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
        displayName:
          type: "string"
        description:
          type: "string"
        assignable:
          type: "boolean"
          default: false
        readOnly:
          type: "boolean"
          default: false
        siteCompatible:
          type: "string"
          description: "Site compatibility flag set for permission"
          enum:
          - "Incompatible"
          - "Compatible"
          - "Independent"
        category:
          $ref: "#/components/schemas/PermissionCategoryIdResource"
        includedPermissions:
          type: "array"
          items:
            $ref: "#/components/schemas/PermissionIdResource"
    LanguageList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of the language list resource"
        records:
          type: "array"
          description: "Language data"
          items:
            $ref: "#/components/schemas/LanguageInfo"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    LanguageInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a language"
        uri:
          type: "string"
          description: "Canonical URI of a language"
        greeting:
          type: "boolean"
          description: "Indicates whether a language is available as greeting language"
        formattingLocale:
          type: "boolean"
          description: "Indicates whether a language is available as formatting locale"
        localeCode:
          type: "string"
          description: "Localization code of a language"
        isoCode:
          type: "string"
          description: "Country code according to the ISO standard, see [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)"
        name:
          type: "string"
          description: "Official name of a language"
        ui:
          type: "boolean"
          description: "Indicates whether a language is available as UI language"
      description: "User interface language data"
    PermissionCategoryResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        id:
          type: "string"
        displayName:
          type: "string"
        description:
          type: "string"
    PermissionCategoryCollectionResource:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/PermissionCategoryResource"
        paging:
          $ref: "#/components/schemas/RNPPagingInfo"
        navigation:
          $ref: "#/components/schemas/RNPNavigationInfo"
    DictionaryGreetingList:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of greetings list resource"
        records:
          type: "array"
          description: "List of greetings"
          items:
            $ref: "#/components/schemas/DictionaryGreetingInfo"
        navigation:
          $ref: "#/components/schemas/CallHandlingNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallHandlingPagingInfo"
    DictionaryGreetingInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a greeting"
        uri:
          type: "string"
          description: "Link to a greeting"
        name:
          type: "string"
          description: "Name of a greeting"
        usageType:
          type: "string"
          description: "Usage type of a greeting, specifying if the greeting is applied\
            \ for user extension or department (call queue) extension."
          enum:
          - "UserExtensionAnsweringRule"
          - "ExtensionAnsweringRule"
          - "DepartmentExtensionAnsweringRule"
          - "BlockedCalls"
          - "CallRecording"
          - "CompanyAnsweringRule"
          - "CompanyAfterHoursAnsweringRule"
          - "LimitedExtensionAnsweringRule"
          - "VoicemailExtensionAnsweringRule"
          - "AnnouncementExtensionAnsweringRule"
          - "SharedLinesGroupAnsweringRule"
        text:
          type: "string"
          description: "Text of a greeting, if any"
        contentUri:
          type: "string"
          description: "Link to a greeting content (audio file), if any"
        type:
          type: "string"
          description: "Type of a greeting, specifying the case when the greeting\
            \ is played."
          enum:
          - "Introductory"
          - "Announcement"
          - "AutomaticRecording"
          - "BlockedCallersAll"
          - "BlockedCallersSpecific"
          - "BlockedNoCallerId"
          - "BlockedPayPhones"
          - "ConnectingMessage"
          - "ConnectingAudio"
          - "StartRecording"
          - "StopRecording"
          - "Voicemail"
          - "Unavailable"
          - "InterruptPrompt"
          - "HoldMusic"
          - "Company"
        category:
          type: "string"
          description: "Category of a greeting, specifying data form. The category\
            \ value 'None' specifies that greetings of a certain type ('Introductory',\
            \ 'ConnectingAudio', etc.) are switched off for an extension = ['Music',\
            \ 'Message', 'RingTones', 'None']"
          enum:
          - "Music"
          - "Message"
          - "RingTones"
          - "None"
        navigation:
          $ref: "#/components/schemas/CallHandlingNavigationInfo"
        paging:
          $ref: "#/components/schemas/CallHandlingPagingInfo"
    GetTimezoneInfoResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a timezone"
        uri:
          type: "string"
          description: "Canonical URI of a timezone"
        name:
          type: "string"
          description: "Short name of a timezone"
        description:
          type: "string"
          description: "Description of a timezone"
        bias:
          type: "string"
    GetTimezoneListResponse:
      required:
      - "navigation"
      - "paging"
      - "records"
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to the timezone list resource"
        records:
          type: "array"
          description: "List of timezones"
          items:
            $ref: "#/components/schemas/GetTimezoneInfoResponse"
        navigation:
          $ref: "#/components/schemas/ProvisioningNavigationInfo"
        paging:
          $ref: "#/components/schemas/ProvisioningPagingInfo"
    FaxCoverPageInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a fax cover page. The possible value\
            \ range is 0-13 (for language setting en-US) and 0, 15-28 (for all other\
            \ languages)"
        name:
          type: "string"
          description: "Name of a fax cover page pattern"
    ListFaxCoverPagesResponse:
      type: "object"
      properties:
        uri:
          type: "string"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/FaxCoverPageInfo"
        navigation:
          $ref: "#/components/schemas/MessagingNavigationInfo"
        paging:
          $ref: "#/components/schemas/MessagingPagingInfo"
    DeviceAddonInfo:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        count:
          type: "string"
          format: "int32"
    SipRegistrationDeviceInfo:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Link to a device resource"
        id:
          type: "string"
          description: "Internal identifier of a Device"
        type:
          type: "string"
          description: "Device type"
          enum:
          - "HardPhone"
          - "SoftPhone"
          - "OtherPhone"
          - "Paging"
          - "WebPhone"
          - "Room"
        sku:
          type: "string"
          description: "Device identification number (stock keeping unit) in the format\
            \ TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for\
            \ all other devices including softphone); ID - device model ID; AT -addon\
            \ type ID; AC - addon count (if any). For example 'HP-56-2-2'"
        status:
          type: "string"
          enum:
          - "Online"
          - "Offline"
        name:
          type: "string"
          description: "Device name. Mandatory if ordering  SoftPhone or OtherPhone.\
            \ Optional for  HardPhone. If not specified for HardPhone, then device\
            \  model  name is used as device  name "
        serial:
          type: "string"
          description: "Serial number for HardPhone (is returned only when the phone\
            \ is shipped and provisioned); endpoint_id for softphone and mobile applications"
        computerName:
          type: "string"
          description: "PC name for softphone"
        model:
          $ref: "#/components/schemas/DeviceModelInfo"
        extension:
          $ref: "#/components/schemas/DeviceExtensionInfo"
        emergencyServiceAddress:
          $ref: "#/components/schemas/DeviceEmergencyServiceAddressResource"
        emergency:
          $ref: "#/components/schemas/SipRegistrationDeviceEmergencyInfo"
        shipping:
          $ref: "#/components/schemas/Shipping"
        phoneLines:
          type: "array"
          description: "Phone lines information"
          items:
            $ref: "#/components/schemas/DevicePhoneLinesInfo"
        boxBillingId:
          type: "integer"
          format: "int64"
          description: "Box billing identifier of a device. Applicable only for HardPhones.\
            \ It is an alternative way to identify the device to be ordered. EitherT?\
            \ model  structure, or  boxBillingId  must be specified forT?HardPhone"
        useAsCommonPhone:
          type: "boolean"
          description: "Supported only for devices assigned to Limited extensions.\
            \ If true, enables users to log in to this phone as a common phone."
        linePooling:
          type: "string"
          description: "Pooling type of a deviceHost - device with standalone paid\
            \ phone line which can be linked to Glip/Softphone instanceGuest - device\
            \ with a linked phone lineNone - device without a phone line or with specific\
            \ line (free, BLA, etc.) = ['Host', 'Guest', 'None']"
          enum:
          - "Host"
          - "Guest"
          - "None"
        inCompanyNet:
          type: "boolean"
          description: "Network location status. 'True' if the device is located in\
            \ the configured corporate network (On-Net); 'False' for Off-Net location.\
            \ Parameter is not returned if `EmergencyAddressAutoUpdate` feature is\
            \ not enabled for the account/user, or if device network location is not\
            \ determined"
        site:
          $ref: "#/components/schemas/DeviceSiteInfo"
        lastLocationReportTime:
          type: "string"
          description: "Datetime of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format including timezone, for example *2016-03-10T18:07:52.534Z"
    DevicePhoneNumberInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of a phone number"
        country:
          $ref: "#/components/schemas/DevicePhoneNumberCountryInfo"
        paymentType:
          type: "string"
          description: "Payment type. 'External' is returned for forwarded numbers\
            \ which are not terminated in the RingCentral phone system = ['External',\
            \ 'TollFree', 'Local']"
          enum:
          - "External"
          - "TollFree"
          - "Local"
        phoneNumber:
          maxLength: 128
          minLength: 0
          type: "string"
          description: "Phone number"
        usageType:
          type: "string"
          enum:
          - "CompanyNumber"
          - "MainCompanyNumber"
          - "AdditionalCompanyNumber"
          - "DirectNumber"
          - "CompanyFaxNumber"
          - "ForwardedNumber"
          - "ForwardedCompanyNumber"
          - "ContactCenterNumber"
        type:
          type: "string"
          description: "Type of a phone number"
          enum:
          - "VoiceFax"
          - "FaxOnly"
          - "VoiceOnly"
      description: "Phone number information"
    DeviceExtensionInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "Internal identifier of an extension"
        uri:
          type: "string"
          description: "Link to an extension resource"
        extensionNumber:
          type: "string"
          description: "Number of extension"
      description: "Internal identifier of an extension the device should be assigned\
        \ to"
    SIPInfoResponse:
      type: "object"
      properties:
        username:
          type: "string"
          description: "User credentials"
        password:
          type: "string"
          description: "User password"
        authorizationId:
          type: "string"
          description: "Identifier for SIP authorization"
        domain:
          type: "string"
          description: "SIP domain"
        outboundProxy:
          type: "string"
          description: "SIP outbound proxy"
        outboundProxyIPv6:
          type: "string"
          description: "SIP outbound IPv6 proxy"
        outboundProxyBackup:
          type: "string"
          description: "SIP outbound proxy backup"
        outboundProxyIPv6Backup:
          type: "string"
          description: "SIP outbound IPv6 proxy backup"
        transport:
          type: "string"
          description: "Preferred transport. SIP info will be returned for this transport\
            \ if supported"
          enum:
          - "UDP"
          - "TCP"
          - "TLS"
          - "WS"
          - "WSS"
        certificate:
          type: "string"
          description: "For TLS transport only Base64 encoded certificate"
        switchBackInterval:
          type: "integer"
          description: "The interval in seconds after which the app must try to switch\
            \ back to primary proxy if it was previously switched to backup. If this\
            \ parameter is not returned, the app must stay on backup proxy and try\
            \ to switch to primary proxy after the next SIP-provision call."
    DeviceModelInfo:
      required:
      - "addons"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Addon identifier. For HardPhones of certain types, which are\
            \ compatible with this addon identifier"
        name:
          type: "string"
          description: "Device name"
        addons:
          type: "array"
          description: "Addons description"
          items:
            $ref: "#/components/schemas/DeviceAddonInfo"
        features:
          type: "array"
          description: "Device feature or multiple features supported"
          items:
            type: "string"
            enum:
            - "BLA"
            - "Intercom"
            - "Paging"
            - "HELD"
      description: "HardPhone model information"
    CreateSipRegistrationRequest:
      type: "object"
      properties:
        device:
          $ref: "#/components/schemas/DeviceInfoRequest"
        sipInfo:
          type: "array"
          description: "SIP settings for device"
          items:
            $ref: "#/components/schemas/SIPInfoRequest"
        softPhoneLineReassignment:
          type: "string"
          description: "Supported for softphone clients only. If 'SoftphoneLineReassignment'\
            \ feature is enabled the reassignment process can be initialized, however\
            \ if there is no DL for the given user's device then SPR-131 error code\
            \ will be returned."
          default: "None"
          enum:
          - "None"
          - "Initialize"
          - "Reassign"
    DevicePhoneNumberCountryInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a home country"
        uri:
          type: "string"
          description: "Canonical URI of a home country"
        name:
          type: "string"
          description: "Official name of a home country"
      description: "Brief information on a phone number country"
    MethodResource:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
    DevicePhoneLinesEmergencyAddressInfo:
      type: "object"
      properties:
        required:
          type: "boolean"
          description: " 'True' if specifying of emergency address is required"
        localOnly:
          type: "boolean"
          description: " 'True' if only local emergency address can be specified"
    Shipping:
      type: "object"
      properties:
        address:
          $ref: "#/components/schemas/DeviceEmergencyServiceAddressResource"
        method:
          $ref: "#/components/schemas/MethodResource"
        status:
          type: "string"
        carrier:
          type: "string"
        trackingNumber:
          type: "string"
      description: "Shipping information, according to which devices (in case of HardPhone\
        \ ) or e911 stickers (in case of SoftPhone and OtherPhone ) will be delivered\
        \ to the customer"
    SipRegistrationDeviceEmergencyInfo:
      type: "object"
      properties:
        address:
          $ref: "#/components/schemas/DeviceEmergencyServiceAddressResource"
        location:
          $ref: "#/components/schemas/SipRegistrationDeviceLocationInfo"
        outOfCountry:
          type: "boolean"
          description: "Specifies if emergency address is out of country"
        addressStatus:
          type: "string"
          description: "Emergency address status"
          enum:
          - "Valid"
          - "Invalid"
          - "Processing"
        visibility:
          type: "string"
          description: "Specifies whether to return only private or only public (company)\
            \ ERLs (Emergency Response Locations)"
          enum:
          - "Private"
          - "Public"
        syncStatus:
          type: "string"
          description: "Resulting status of emergency address synchronization. Returned\
            \ if `syncEmergencyAddress` parameter is set to 'True'"
          enum:
          - "Verified"
          - "Updated"
          - "Deleted"
          - "NotRequired"
          - "Unsupported"
          - "Failed"
        addressEditableStatus:
          type: "string"
          description: "Ability to register new emergency address for a phone line\
            \ using devices sharing this line or only main device (line owner)"
          enum:
          - "MainDevice"
          - "AnyDevice"
        addressRequired:
          type: "boolean"
          description: "'True' if emergency address is required for the country of\
            \ a phone line"
        addressLocationOnly:
          type: "boolean"
          description: "'True' if out of country emergency address is not allowed\
            \ for the country of a phone line"
      description: "Emergency response location settings of a device"
    CreateSipRegistrationResponse:
      required:
      - "sipFlags"
      - "sipInfo"
      type: "object"
      properties:
        device:
          $ref: "#/components/schemas/SipRegistrationDeviceInfo"
        sipInfo:
          type: "array"
          description: "SIP settings for device"
          items:
            $ref: "#/components/schemas/SIPInfoResponse"
        sipInfoPstn:
          type: "array"
          description: "SIP PSTN settings for device"
          items:
            $ref: "#/components/schemas/SIPInfoResponse"
        sipFlags:
          $ref: "#/components/schemas/SIPFlagsResponse"
        sipErrorCodes:
          type: "array"
          items:
            type: "string"
    SIPInfoRequest:
      type: "object"
      properties:
        transport:
          type: "string"
          description: "Supported transport. SIP info will be returned for this transport\
            \ if supported"
          enum:
          - "UDP"
          - "TCP"
          - "TLS"
          - "WS"
          - "WSS"
    SipRegistrationDeviceLocationInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of an emergency response location"
        name:
          type: "string"
          description: "Emergency response location name"
      description: "Company emergency response location details"
    DevicePhoneLinesInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Internal identifier of a phone line"
        lineType:
          type: "string"
          description: "Type of phone line"
          enum:
          - "Standalone"
          - "StandaloneFree"
          - "BlaPrimary"
          - "BlaSecondary"
        emergencyAddress:
          $ref: "#/components/schemas/DevicePhoneLinesEmergencyAddressInfo"
        phoneInfo:
          $ref: "#/components/schemas/DevicePhoneNumberInfo"
    DeviceEmergencyServiceAddressResource:
      type: "object"
      properties:
        street:
          type: "string"
        street2:
          type: "string"
        city:
          type: "string"
        zip:
          type: "string"
        customerName:
          type: "string"
        state:
          type: "string"
          description: "State/province name"
        stateId:
          type: "string"
          description: "Internal identifier of a state"
        stateIsoCode:
          type: "string"
          description: "ISO code of a state"
        stateName:
          type: "string"
          description: "Full name of a state"
        countryId:
          type: "string"
          description: "Internal identifier of a country"
        countryIsoCode:
          type: "string"
          description: "ISO code of a country"
        country:
          type: "string"
          description: "Country name"
        countryName:
          type: "string"
          description: "Full name of a country"
        outOfCountry:
          type: "boolean"
          description: "Specifies if emergency address is out of country"
      description: "Address for emergency cases. The same emergency address is assigned\
        \ to all the numbers of one device"
    DeviceInfoRequest:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Device unique identifier, retrieved at previous session (if\
            \ any)"
        appExternalId:
          type: "string"
          description: "Supported for iOS devices only. Certificate name (used by\
            \ iOS applications for APNS subscription)"
        computerName:
          type: "string"
          description: "Supported for SoftPhone only. Computer name"
        serial:
          type: "string"
          description: "Serial number for HardPhone; `endpoint_id` for softphone and\
            \ mobile applications. Returned only when the phone is shipped and provisioned"
      description: "Device information"
    SIPFlagsResponse:
      type: "object"
      properties:
        voipFeatureEnabled:
          type: "string"
          description: "If 'True' VoIP calling feature is enabled"
          enum:
          - "True"
          - "False"
        voipCountryBlocked:
          type: "string"
          description: "If 'True' the request is sent from IP address of a country\
            \ blocked for VoIP calling"
          enum:
          - "True"
          - "False"
        outboundCallsEnabled:
          type: "string"
          description: "If 'True' outbound calls are enabled"
          enum:
          - "True"
          - "False"
        dscpEnabled:
          type: "boolean"
        dscpSignaling:
          type: "integer"
        dscpVoice:
          type: "integer"
        dscpVideo:
          type: "integer"
      description: "SIP flags data"
    GetVersionResponse:
      type: "object"
      properties:
        uri:
          type: "string"
          description: "Canonical URI of the version info resource"
        versionString:
          type: "string"
          description: "Version of the RingCentral REST API"
        releaseDate:
          type: "string"
          description: "Release date of this version"
        uriString:
          type: "string"
          description: "URI part determining the current version"
      example:
        application/json:
          uri: "https://platform.ringcentral.com/restapi/v1.0"
          versionString: "1.0.34"
          releaseDate: "2018-02-09T00:00:00.000+00:00"
          uriString: "v1.0"
    Name:
      required:
      - "familyName"
      - "givenName"
      type: "object"
      properties:
        familyName:
          type: "string"
        givenName:
          type: "string"
    UserResponse:
      required:
      - "emails"
      - "name"
      - "schemas"
      - "userName"
      type: "object"
      properties:
        active:
          type: "boolean"
          description: "user status"
          default: false
        addresses:
          type: "array"
          items:
            $ref: "#/components/schemas/UserAddress"
        emails:
          type: "array"
          items:
            $ref: "#/components/schemas/Email"
        externalId:
          type: "string"
          description: "external unique resource id defined by provisioning client"
        id:
          type: "string"
          description: "unique resource id defined by RingCentral"
        name:
          $ref: "#/components/schemas/Name"
        phoneNumbers:
          type: "array"
          items:
            $ref: "#/components/schemas/PhoneNumber"
        photos:
          type: "array"
          items:
            $ref: "#/components/schemas/Photo"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:schemas:core:2.0:User"
        urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
          $ref: "#/components/schemas/EnterpriseUser"
        userName:
          type: "string"
          description: "MUST be same as work type email address"
        meta:
          $ref: "#/components/schemas/Meta"
    ScimErrorResponse:
      type: "object"
      properties:
        detail:
          type: "string"
          description: "detail error message"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:api:messages:2.0:Error"
        scimType:
          type: "string"
          description: "bad request type when status code is 400"
          enum:
          - "uniqueness"
          - "tooMany"
          - "mutability"
          - "sensitive"
          - "invalidSyntax"
          - "invalidFilter"
          - "invalidPath"
          - "invalidValue"
          - "invalidVers"
          - "noTarget"
        status:
          type: "string"
          description: "same as HTTP status code, e.g. 400, 401, etc."
    UserSearchResponse:
      type: "object"
      properties:
        Resources:
          type: "array"
          description: "user list"
          items:
            $ref: "#/components/schemas/UserResponse"
        itemsPerPage:
          type: "integer"
          format: "int64"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:api:messages:2.0:ListResponse"
        startIndex:
          type: "integer"
          format: "int64"
        totalResults:
          type: "integer"
          format: "int64"
    Email:
      required:
      - "type"
      - "value"
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "work"
        value:
          type: "string"
    UserAddress:
      required:
      - "type"
      type: "object"
      properties:
        country:
          type: "string"
        locality:
          type: "string"
        postalCode:
          type: "string"
        region:
          type: "string"
        streetAddress:
          type: "string"
        type:
          type: "string"
          enum:
          - "work"
    Meta:
      type: "object"
      properties:
        created:
          type: "string"
          format: "date-time"
        lastModified:
          type: "string"
          format: "date-time"
        location:
          type: "string"
          description: "resource location URI"
        resourceType:
          type: "string"
          enum:
          - "User"
          - "Group"
      description: "resource metadata"
    PhoneNumber:
      required:
      - "type"
      - "value"
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "work"
          - "mobile"
          - "other"
        value:
          type: "string"
    Photo:
      required:
      - "type"
      - "value"
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "photo"
        value:
          type: "string"
    CreateUser:
      required:
      - "emails"
      - "name"
      - "schemas"
      - "userName"
      type: "object"
      properties:
        active:
          type: "boolean"
          description: "User status"
          default: false
        addresses:
          type: "array"
          items:
            $ref: "#/components/schemas/UserAddress"
        emails:
          type: "array"
          items:
            $ref: "#/components/schemas/Email"
        externalId:
          type: "string"
          description: "external unique resource id defined by provisioning client"
        name:
          $ref: "#/components/schemas/Name"
        phoneNumbers:
          type: "array"
          items:
            $ref: "#/components/schemas/PhoneNumber"
        photos:
          type: "array"
          items:
            $ref: "#/components/schemas/Photo"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:schemas:core:2.0:User"
        urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
          $ref: "#/components/schemas/EnterpriseUser"
        userName:
          type: "string"
          description: "MUST be same as work type email address"
    EnterpriseUser:
      type: "object"
      properties:
        department:
          type: "string"
    SearchRequest:
      type: "object"
      properties:
        count:
          type: "integer"
          description: "page size"
          format: "int32"
        filter:
          type: "string"
          description: "only support 'userName' or 'email' filter expressions for\
            \ now"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
        startIndex:
          type: "integer"
          description: "start index (1-based)"
          format: "int32"
    User:
      required:
      - "emails"
      - "name"
      - "schemas"
      - "userName"
      type: "object"
      properties:
        active:
          type: "boolean"
          description: "user status"
          default: false
        addresses:
          type: "array"
          items:
            $ref: "#/components/schemas/UserAddress"
        emails:
          type: "array"
          items:
            $ref: "#/components/schemas/Email"
        externalId:
          type: "string"
          description: "external unique resource id defined by provisioning client"
        id:
          type: "string"
          description: "unique resource id defined by RingCentral"
        name:
          $ref: "#/components/schemas/Name"
        phoneNumbers:
          type: "array"
          items:
            $ref: "#/components/schemas/PhoneNumber"
        photos:
          type: "array"
          items:
            $ref: "#/components/schemas/Photo"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:schemas:core:2.0:User"
        urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
          $ref: "#/components/schemas/EnterpriseUser"
        userName:
          type: "string"
          description: "MUST be same as work type email address"
    PatchOperation:
      required:
      - "op"
      type: "object"
      properties:
        op:
          type: "string"
          enum:
          - "add"
          - "replace"
          - "remove"
        path:
          type: "string"
        value:
          type: "string"
          description: "corresponding 'value' of that field specified by 'path'"
    UserPatch:
      required:
      - "Operations"
      - "schemas"
      type: "object"
      properties:
        Operations:
          type: "array"
          description: "patch operations list"
          items:
            $ref: "#/components/schemas/PatchOperation"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:api:messages:2.0:PatchOp"
    Supported:
      type: "object"
      properties:
        supported:
          type: "boolean"
          default: false
    BulkSupported:
      type: "object"
      properties:
        maxOperations:
          type: "integer"
          format: "int32"
        maxPayloadSize:
          type: "integer"
          format: "int32"
        supported:
          type: "boolean"
          default: false
    ServiceProviderConfig:
      type: "object"
      properties:
        authenticationSchemes:
          type: "array"
          items:
            $ref: "#/components/schemas/AuthenticationScheme"
        bulk:
          $ref: "#/components/schemas/BulkSupported"
        changePassword:
          $ref: "#/components/schemas/Supported"
        etag:
          $ref: "#/components/schemas/Supported"
        filter:
          $ref: "#/components/schemas/FilterSupported"
        patch:
          $ref: "#/components/schemas/Supported"
        schemas:
          type: "array"
          items:
            type: "string"
            enum:
            - "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig"
        sort:
          $ref: "#/components/schemas/Supported"
        xmlDataFormat:
          $ref: "#/components/schemas/Supported"
    AuthenticationScheme:
      type: "object"
      properties:
        description:
          type: "string"
        documentationUri:
          type: "string"
        name:
          type: "string"
        specUri:
          type: "string"
        primary:
          type: "boolean"
    FilterSupported:
      type: "object"
      properties:
        maxResults:
          type: "integer"
          format: "int32"
        supported:
          type: "boolean"
          default: false
    AnalyticsLegacyPerformanceCallsSegments:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsSegments"
    AnalyticsLegacyOrigin:
      type: "string"
      description: "Specifies whether an external party was present in the initial\
        \ segment of the call"
      enum:
      - "Internal"
      - "External"
    AnalyticsLegacyCallsByType:
      required:
      - "direct"
      - "fromQueue"
      - "parkRetrieval"
      - "transferred"
      - "outbound"
      type: "object"
      properties:
        direct:
          type: "number"
          format: "double"
        fromQueue:
          type: "number"
          format: "double"
        parkRetrieval:
          type: "number"
          format: "double"
        transferred:
          type: "number"
          format: "double"
        outbound:
          type: "number"
          format: "double"
    AnalyticsLegacyResponsePaging:
      required:
      - "page"
      - "perPage"
      - "totalPages"
      - "totalElements"
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number"
          format: "int64"
        perPage:
          type: "integer"
          description: "How many items are displayed on the page"
          format: "int64"
        totalPages:
          type: "integer"
          description: "The total number of pages"
          format: "int64"
        totalElements:
          type: "integer"
          description: "The total number of items in the dataset"
          format: "int64"
    AnalyticsLegacyPerformanceCallsTimeRange:
      required:
      - "timeFrom"
      - "timeTo"
      type: "object"
      properties:
        timeFrom:
          type: "string"
          description: "The start date-time for resulting records in RFC 3339 format\
            \ including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z"
          format: "date-time"
        timeTo:
          type: "string"
          description: "The end date-time for resulting records in RFC 3339 format\
            \ including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z"
          format: "date-time"
    AnalyticsLegacyBadRequest:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyErrorBody"
    AnalyticsLegacyCallAction:
      type: "string"
      enum:
      - "HoldOff"
      - "HoldOn"
      - "ParkOn"
      - "ParkOff"
      - "BlindTransfer"
      - "WarmTransfer"
      - "DTMFTransfer"
    AnalyticsLegacyPerformanceCallsByResult:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsByResult"
    AnalyticsLegacyPerformanceCallsCounters:
      type: "object"
      properties:
        allCalls:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTotal"
        callsByDirection:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByDirection"
        callsByOrigin:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByOrigin"
        callsByResponse:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByResponse"
        callsSegments:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsSegments"
        callsByResult:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByResult"
        callsActions:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsActions"
        callsByCompanyHours:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByCompanyHours"
        callsByQueueSla:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByQueueSla"
        callsByType:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByType"
      description: "Call volume data for the specified grouping"
    AnalyticsLegacyCallsByQueueSla:
      required:
      - "inSla"
      - "outOfSla"
      type: "object"
      properties:
        inSla:
          type: "number"
          format: "double"
        outOfSla:
          type: "number"
          format: "double"
    AnalyticsLegacyQueueSla:
      type: "string"
      description: "This filter allows to get aggregation of calls that were either\
        \ within or out of queue SLA. Only applicable to Queues grouping"
      enum:
      - "InSla"
      - "OutSla"
    AnalyticsLegacyCallType:
      type: "string"
      enum:
      - "Direct"
      - "FromQueue"
      - "ParkRetrieval"
      - "Transferred"
      - "Outbound"
    AnalyticsLegacyPerformanceCallsCallSegmentLengthFilter:
      type: "object"
      properties:
        minValueSeconds:
          type: "integer"
          format: "int64"
        maxValueSeconds:
          type: "integer"
          format: "int64"
    AnalyticsLegacyErrorBody:
      required:
      - "errorCode"
      - "message"
      type: "object"
      properties:
        errorCode:
          type: "string"
        message:
          type: "string"
    AnalyticsLegacyPerformanceCallsByOrigin:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsByOrigin"
    AnalyticsLegacyCallsByResult:
      required:
      - "completed"
      - "abandoned"
      - "voicemail"
      - "missed"
      - "accepted"
      - "unknown"
      type: "object"
      properties:
        completed:
          type: "number"
          format: "double"
        abandoned:
          type: "number"
          format: "double"
        voicemail:
          type: "number"
          format: "double"
        missed:
          type: "number"
          format: "double"
        accepted:
          type: "number"
          format: "double"
        unknown:
          type: "number"
          format: "double"
    AnalyticsLegacyPerformanceCallsGrouping:
      required:
      - "groupBy"
      type: "object"
      properties:
        groupBy:
          $ref: "#/components/schemas/AnalyticsLegacyGroupingOptions"
        ids:
          type: "array"
          items:
            type: "string"
          description: "This field can be used to specify unique identifiers of groups\
            \ in GroupBy types"
      description: "This field specifies the dimensions by which the response should\
        \ be grouped and specific IDs to narrow the response. If this field is undefined\
        \ or null, the response will contain one record with data aggregated by the\
        \ whole company"
    AnalyticsLegacyCallsByResponse:
      required:
      - "answered"
      - "notAnswered"
      - "connected"
      - "notConnected"
      type: "object"
      properties:
        answered:
          type: "number"
          format: "double"
        notAnswered:
          type: "number"
          format: "double"
        connected:
          type: "number"
          format: "double"
        notConnected:
          type: "number"
          format: "double"
    AnalyticsLegacyPerformanceCallsData:
      required:
      - "key"
      type: "object"
      properties:
        key:
          type: "string"
          description: "Grouping key"
        keyInfo:
          $ref: "#/components/schemas/AnalyticsLegacyKeyInfo"
        timers:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimers"
        counters:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsCounters"
    AnalyticsLegacyPerformanceCallsCountersResponseOptions:
      type: "object"
      properties:
        allCalls:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsByDirection:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsByOrigin:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsByResponse:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsSegments:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsByResult:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsByCompanyHours:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsByQueueSla:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
          description: "This counter is only applicable to Queues grouping"
        callsByActions:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsByType:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
      description: "The formula is defined by `aggregationType` and `aggregationInterval`\
        \ for every counter individually.\nIf `aggregationType` is `Sum` or `Percent`,\
        \ `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`,\
        \ `Max` or `Average`, `aggregationInterval` is required"
    AnalyticsLegacyCallSegment:
      type: "string"
      enum:
      - "Ringing"
      - "LiveTalk"
      - "Hold"
      - "Park"
      - "Transfer"
      - "IvrPrompt"
      - "Voicemail"
      - "VmGreeting"
      - "Setup"
    AnalyticsLegacyGroupingOptions:
      type: "string"
      description: "This field describes the options by which the response should\
        \ be grouped. See also [Call Aggregate reports](https://developers.ringcentral.com/guide/analytics/aggregate)\
        \ or [Call Timeline reports](https://developers.ringcentral.com/guide/analytics/timeline)\
        \ pages in the developer guide for more information."
      enum:
      - "WholeCompany"
      - "CompanyNumbers"
      - "Users"
      - "Queues"
      - "IVRs"
      - "SharedLines"
      - "UserGroups"
      - "Sites"
      - "Departments"
      - "DepartmentMembers"
      - "UserGroupMembers"
      - "QueueAgents"
      - "SiteMembers"
    AnalyticsLegacyAggregationInterval:
      type: "string"
      enum:
      - "Hour"
      - "Day"
      - "Week"
      - "Month"
    AnalyticsLegacyCallResultType:
      type: "string"
      enum:
      - "Completed"
      - "Abandoned"
      - "Voicemail"
      - "Unknown"
      - "Missed"
      - "Accepted"
    AnalyticsLegacyPerformanceCallsAdvancedTimeSettings:
      required:
      - "timeZone"
      type: "object"
      properties:
        timeZone:
          type: "string"
          description: "Name of the timezone that will be used for `includeDays` and\
            \ `includeHours` filters. For example 'America/Los_Angeles', 'Europe/Moscow'.\
            \ See also *[Time Zones](https://www.iana.org/time-zones)*"
        includeDays:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyDayOfWeek"
          description: "Days of the week for which the report is calculated"
        includeHours:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimeInterval"
          description: "Hours of the day for which the report is calculated"
      description: "Allows more granular control over time included in the report"
    AnalyticsLegacyAggregationMethod:
      type: "string"
      enum:
      - "Sum"
      - "Average"
      - "Max"
      - "Min"
      - "Percent"
    AnalyticsLegacyPerformanceCallsResponseDataOptions:
      type: "object"
      properties:
        counters:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsCountersResponseOptions"
        timers:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimersResponseOptions"
      description: "This field provides mapping of possible breakdown options for\
        \ call aggregation and aggregation formula"
    AnalyticsLegacyPerformanceCallsAggregatesResponse:
      required:
      - "paging"
      type: "object"
      properties:
        paging:
          $ref: "#/components/schemas/AnalyticsLegacyResponsePaging"
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsData"
          description: "A list of call aggregations as per the grouping and filtering\
            \ options specified in the request"
    AnalyticsLegacyCallsByCompanyHours:
      required:
      - "businessHours"
      - "afterHours"
      type: "object"
      properties:
        businessHours:
          type: "number"
          format: "double"
        afterHours:
          type: "number"
          format: "double"
    AnalyticsLegacyPerformanceCallsAggregatesRequest:
      required:
      - "timeSettings"
      - "responseOptions"
      type: "object"
      properties:
        grouping:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsGrouping"
        timeSettings:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimeSettings"
        additionalFilters:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsFilters"
        responseOptions:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsResponseDataOptions"
    AnalyticsLegacyPerformanceCallsTimeInterval:
      required:
      - "from"
      - "to"
      type: "object"
      properties:
        from:
          type: "string"
          description: "Time in format hh:mm"
        to:
          type: "string"
          description: "Time in format hh:mm"
    AnalyticsLegacyCallsSegments:
      required:
      - "ringing"
      - "liveTalk"
      - "holds"
      - "parks"
      - "transfers"
      - "ivrPrompts"
      - "voicemail"
      - "vmGreetings"
      - "setup"
      type: "object"
      properties:
        ringing:
          type: "number"
          format: "double"
        liveTalk:
          type: "number"
          format: "double"
        holds:
          type: "number"
          format: "double"
        parks:
          type: "number"
          format: "double"
        transfers:
          type: "number"
          format: "double"
        ivrPrompts:
          type: "number"
          format: "double"
        voicemail:
          type: "number"
          format: "double"
        vmGreetings:
          type: "number"
          format: "double"
        setup:
          type: "number"
          format: "double"
    AnalyticsLegacyCallsActions:
      required:
      - "parksOn"
      - "parksOff"
      - "holdsOn"
      - "holdsOff"
      - "blindTransfer"
      - "warmTransfer"
      - "dtmfTransfer"
      type: "object"
      properties:
        parksOn:
          type: "number"
          format: "double"
        parksOff:
          type: "number"
          format: "double"
        holdsOn:
          type: "number"
          format: "double"
        holdsOff:
          type: "number"
          format: "double"
        blindTransfer:
          type: "number"
          format: "double"
        warmTransfer:
          type: "number"
          format: "double"
        dtmfTransfer:
          type: "number"
          format: "double"
    AnalyticsLegacyDirection:
      type: "string"
      description: "Specifies whether the call was inbound or outbound relative to\
        \ the scope specified in grouping object. Not applicable to internal calls\
        \ with company scope (when grouping is not specified)"
      enum:
      - "Inbound"
      - "Outbound"
    AnalyticsLegacyCallActionFilter:
      required:
      - "callAction"
      type: "object"
      properties:
        callAction:
          $ref: "#/components/schemas/AnalyticsLegacyCallAction"
    AnalyticsLegacyCallsByDirection:
      required:
      - "inbound"
      - "outbound"
      type: "object"
      properties:
        inbound:
          type: "number"
          format: "double"
        outbound:
          type: "number"
          format: "double"
    AnalyticsLegacyPerformanceCallsTotal:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          type: "number"
          format: "double"
    AnalyticsLegacyPerformanceCallsByDirection:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsByDirection"
    AnalyticsLegacyPerformanceCallsTimersResponseOptions:
      type: "object"
      properties:
        allCallsDuration:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsDurationByDirection:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsDurationByOrigin:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsDurationByResponse:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsSegmentsDuration:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsDurationByResult:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsDurationByCompanyHours:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
        callsDurationByQueueSla:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
          description: "This timer is only applicable to Queues grouping"
        callsDurationByType:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationMethod"
            aggregationInterval:
              $ref: "#/components/schemas/AnalyticsLegacyAggregationInterval"
      description: "The formula is defined by `aggregationType` and `aggregationInterval`\
        \ for every timer individually.\nIf `aggregationType` is `Sum` or `Percent`,\
        \ `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`,\
        \ `Max` or `Average`, `aggregationInterval` is supported, but not required.\n\
        If left empty, aggregation will be performed on per-call basis"
    AnalyticsLegacyPerformanceCallsActions:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsActions"
    AnalyticsLegacyCallSegmentFilter:
      required:
      - "callSegment"
      type: "object"
      properties:
        callSegment:
          $ref: "#/components/schemas/AnalyticsLegacyCallSegment"
        callSegmentLength:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsCallSegmentLengthFilter"
    AnalyticsLegacyUnauthorized:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyErrorBody"
    AnalyticsLegacyDayOfWeek:
      type: "string"
      enum:
      - "Sunday"
      - "Monday"
      - "Tuesday"
      - "Wednesday"
      - "Thursday"
      - "Friday"
      - "Saturday"
    AnalyticsLegacyPerformanceCallsByQueueSla:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsByQueueSla"
    AnalyticsLegacyPerformanceCallsFilterByLength:
      type: "object"
      properties:
        minValueSeconds:
          type: "integer"
          format: "int64"
        maxValueSeconds:
          type: "integer"
          format: "int64"
      description: "Conditional aggregation of calls based on the overall call length"
    AnalyticsLegacyValueTypes:
      type: "string"
      enum:
      - "Percent"
      - "Seconds"
      - "Instances"
    AnalyticsLegacyCallsByOrigin:
      required:
      - "internal"
      - "external"
      type: "object"
      properties:
        internal:
          type: "number"
          format: "double"
        external:
          type: "number"
          format: "double"
    AnalyticsLegacyPerformanceCallsByResponse:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsByResponse"
    AnalyticsLegacyPerformanceCallsFilters:
      type: "object"
      properties:
        direction:
          $ref: "#/components/schemas/AnalyticsLegacyDirection"
        origin:
          $ref: "#/components/schemas/AnalyticsLegacyOrigin"
        callResponse:
          $ref: "#/components/schemas/AnalyticsLegacyCallResponse"
        callResult:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyCallResultType"
          description: "Aggregation of calls by the nature of call result (joined\
            \ via OR)"
        callSegments:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyCallSegmentFilter"
          description: "Aggregation of calls by presence of specific segment (joined\
            \ via OR)"
        callActions:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyCallActionFilter"
          description: "Aggregation of calls by presence of specific action (joined\
            \ via OR)"
        companyHours:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsCompanyHours"
        callDuration:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsFilterByLength"
        timeSpent:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsFilterTimeSpentByMailbox"
        callerExtensionIds:
          type: "array"
          items:
            type: "string"
          description: "List of extension Ids from which users specified in groupBy\
            \ received calls, items are joined via OR condition"
        calledExtensionIds:
          type: "array"
          items:
            type: "string"
          description: "List of extension Ids to which users specified in groupBy\
            \ placed calls, items are joined via OR condition"
        calledNumbers:
          type: "array"
          items:
            type: "string"
          description: "The direct company numbers the caller called (joined via OR)"
        queueSla:
          $ref: "#/components/schemas/AnalyticsLegacyQueueSla"
        callType:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyCallType"
          description: "This filter allows to get aggregation of calls based on how\
            \ the call started from the callee perspective (joined via OR). If the\
            \ call is outbound relative to the grouping scope, callType is Outbound"
      description: "Optional filters that limit the scope of calls to be aggregated\
        \ (joined via AND)"
    AnalyticsLegacyKeyInfo:
      type: "object"
      properties:
        extensionNumber:
          type: "string"
        name:
          type: "string"
      description: "Additional info about the key"
    AnalyticsLegacyPerformanceCallsByCompanyHours:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsByCompanyHours"
    AnalyticsLegacyPerformanceCallsCompanyHours:
      type: "string"
      description: "Aggregation of calls by company's business hours or after hours"
      enum:
      - "BusinessHours"
      - "AfterHours"
    AnalyticsLegacyPerformanceCallsByType:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/AnalyticsLegacyValueTypes"
        values:
          $ref: "#/components/schemas/AnalyticsLegacyCallsByType"
    AnalyticsLegacyCallResponse:
      type: "string"
      description: "Aggregation of calls by first response"
      enum:
      - "Answered"
      - "NotAnswered"
      - "Connected"
      - "NotConnected"
    AnalyticsLegacyPerformanceCallsTimeSettings:
      required:
      - "timeRange"
      type: "object"
      properties:
        timeRange:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimeRange"
        advancedTimeSettings:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsAdvancedTimeSettings"
      description: "Date-time range for which the calls are aggregated. The call is\
        \ considered to be within time range if it started within time range. Both\
        \ borders are inclusive"
    AnalyticsLegacyForbidden:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyErrorBody"
    AnalyticsLegacyInternalError:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyErrorBody"
    AnalyticsLegacyPerformanceCallsFilterTimeSpentByMailbox:
      type: "object"
      properties:
        minValueSeconds:
          type: "integer"
          format: "int64"
        maxValueSeconds:
          type: "integer"
          format: "int64"
      description: "Conditional aggregation of calls based on the time spent by specified\
        \ mailbox(es) on call"
    AnalyticsLegacyPerformanceCallsTimers:
      type: "object"
      properties:
        allCalls:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTotal"
        callsByDirection:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByDirection"
        callsByOrigin:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByOrigin"
        callsByResponse:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByResponse"
        callsSegments:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsSegments"
        callsByResult:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByResult"
        callsByCompanyHours:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByCompanyHours"
        callsByQueueSla:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByQueueSla"
        callsByType:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsByType"
      description: "Call length data for the specified grouping"
    AnalyticsLegacyTimelineTimersResponseOptions:
      type: "object"
      properties:
        allCallsDuration:
          type: "boolean"
        callsDurationByDirection:
          type: "boolean"
        callsDurationByOrigin:
          type: "boolean"
        callsDurationByResponse:
          type: "boolean"
        callsSegmentsDuration:
          type: "boolean"
        callsDurationByResult:
          type: "boolean"
        callsDurationByCompanyHours:
          type: "boolean"
        callsDurationByQueueSla:
          type: "boolean"
          description: "This timer is only applicable to Queues grouping"
        callsDurationByType:
          type: "boolean"
    AnalyticsLegacyTimelineData:
      required:
      - "key"
      type: "object"
      properties:
        key:
          type: "string"
        keyInfo:
          $ref: "#/components/schemas/AnalyticsLegacyKeyInfo"
        points:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyTimelineDataPoint"
    AnalyticsLegacyPerformanceCallsTimelineResponse:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/AnalyticsLegacyTimelineData"
          description: "A list of time-value points of call aggregations as per the\
            \ grouping and filtering options specified in the request"
    AnalyticsLegacyTimelineResponseDataOptions:
      type: "object"
      properties:
        counters:
          $ref: "#/components/schemas/AnalyticsLegacyTimelineCountersResponseOptions"
        timers:
          $ref: "#/components/schemas/AnalyticsLegacyTimelineTimersResponseOptions"
      description: "This field provides mapping of possible breakdown options that\
        \ will be used for aggregation within every time interval"
    AnalyticsLegacyTimelineDataPoint:
      required:
      - "time"
      type: "object"
      properties:
        time:
          type: "string"
          format: "date-time"
        timers:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimers"
        counters:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsCounters"
    AnalyticsLegacyPerformanceCallsTimelineRequest:
      required:
      - "timeSettings"
      - "responseOptions"
      type: "object"
      properties:
        grouping:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsGrouping"
        timeSettings:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsTimeSettings"
        additionalFilters:
          $ref: "#/components/schemas/AnalyticsLegacyPerformanceCallsFilters"
        responseOptions:
          $ref: "#/components/schemas/AnalyticsLegacyTimelineResponseDataOptions"
    AnalyticsLegacyInterval:
      type: "string"
      enum:
      - "Hour"
      - "Day"
      - "Week"
      - "Month"
    AnalyticsLegacyTimelineCountersResponseOptions:
      type: "object"
      properties:
        allCalls:
          type: "boolean"
        callsByDirection:
          type: "boolean"
        callsByOrigin:
          type: "boolean"
        callsByResponse:
          type: "boolean"
        callsSegments:
          type: "boolean"
        callsByResult:
          type: "boolean"
        callsByCompanyHours:
          type: "boolean"
        callsByQueueSla:
          type: "boolean"
          description: "This counter is only applicable to Queues grouping"
        callsByActions:
          type: "boolean"
        callsByType:
          type: "boolean"
    QueueSlaOptions:
      type: "string"
      enum:
      - "InSla"
      - "OutSla"
    CallsByDirection:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByDirectionBreakdown"
      description: "Data for calls with breakdown by direction (Inbound, Outbound)"
    DirectGrouping:
      required:
      - "groupBy"
      type: "object"
      properties:
        groupBy:
          $ref: "#/components/schemas/GroupingOptions"
        keys:
          type: "array"
          items:
            type: "string"
          description: "This field can be used to specify unique identifiers of entities\
            \ selected in `groupBy` field. The response data will be limited to these\
            \ entities only"
      description: "This grouping allows to specify the `groupBy` option by which\
        \ the data in the response will be grouped"
    CallsByOriginBreakdown:
      required:
      - "internal"
      - "external"
      type: "object"
      properties:
        internal:
          type: "number"
          description: "Value for Internal origin"
          format: "double"
        external:
          type: "number"
          description: "Value for External origin"
          format: "double"
      description: "Result breakdown by origin"
    AggregationType:
      type: "string"
      description: "Counter aggregation type. Can be `Sum`, `Average`, `Min`, `Max`\
        \ or `Percent`"
      enum:
      - "Sum"
      - "Average"
      - "Max"
      - "Min"
      - "Percent"
    AggregationInterval:
      type: "string"
      description: "Time interval which will be used for aggregation. Can be `Hour`,\
        \ `Day`, `Week` or `Month`"
      enum:
      - "Hour"
      - "Day"
      - "Week"
      - "Month"
    Unauthorized:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorBody"
          description: "List of errors"
    AdvancedTimeSettings:
      type: "object"
      properties:
        includeDays:
          type: "array"
          items:
            $ref: "#/components/schemas/DayOfWeek"
          description: "Days of the week for which the report is calculated"
        includeHours:
          type: "array"
          items:
            $ref: "#/components/schemas/HoursInterval"
          description: "Hours of the day for which the report is calculated"
      description: "Allows more granular control over time included in the report"
    CallsByActions:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByActionsBreakdown"
      description: "Data for calls with breakdown by action (HoldOff, HoldOn, ParkOn,\
        \ ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)"
    CallsByResult:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByResultBreakdown"
      description: "Data for calls with breakdown by result (Completed, Abandoned,\
        \ Voicemail, Unknown, Missed, Accepted)"
    CallsByResponse:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByResponseBreakdown"
      description: "Data for calls with breakdown by response (Answered, NotAnswered,\
        \ Connected, NotConnected)"
    Origin:
      type: "string"
      enum:
      - "Internal"
      - "External"
    CallResult:
      type: "string"
      enum:
      - "Completed"
      - "Abandoned"
      - "Voicemail"
      - "Unknown"
      - "Missed"
      - "Accepted"
    CallsCounters:
      type: "object"
      properties:
        allCalls:
          $ref: "#/components/schemas/AllCalls"
        callsByDirection:
          $ref: "#/components/schemas/CallsByDirection"
        callsByOrigin:
          $ref: "#/components/schemas/CallsByOrigin"
        callsByResponse:
          $ref: "#/components/schemas/CallsByResponse"
        callsSegments:
          $ref: "#/components/schemas/CallsBySegments"
        callsByResult:
          $ref: "#/components/schemas/CallsByResult"
        callsActions:
          $ref: "#/components/schemas/CallsByActions"
        callsByCompanyHours:
          $ref: "#/components/schemas/CallsByCompanyHours"
        callsByQueueSla:
          $ref: "#/components/schemas/CallsByQueueSla"
        callsByType:
          $ref: "#/components/schemas/CallsByType"
      description: "Call volume data for the specified grouping"
    TimeSettings:
      required:
      - "timeZone"
      - "timeRange"
      type: "object"
      properties:
        timeZone:
          type: "string"
          description: "Name of the timezone that will be used for `includeDays` and\
            \ `includeHours` filters and aggregation intervals. For example 'America/Los_Angeles',\
            \ 'Europe/Zurich'. See also *[Time Zones](https://www.iana.org/time-zones)*.\
            \ Value in this field doesn't affect interpretation of time in `timeRange`,\
            \ as it already includes offset from UTC"
        timeRange:
          $ref: "#/components/schemas/TimeRange"
        advancedTimeSettings:
          $ref: "#/components/schemas/AdvancedTimeSettings"
      description: "Date-time range for the calls. The call is considered to be within\
        \ time range if it started within time range. Both borders are inclusive"
    AllCalls:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          type: "number"
          description: "Value for all calls"
          format: "double"
      description: "Data for all calls"
    Grouping:
      description: "This field specifies the dimensions by which the response should\
        \ be grouped and specific keys to narrow the response. See also [Call Aggregate\
        \ reports](https://developers.ringcentral.com/guide/analytics/aggregate) or\
        \ [Call Timeline reports](https://developers.ringcentral.com/guide/analytics/timeline)\
        \ pages in the developer guide for more information"
      oneOf:
      - $ref: "#/components/schemas/DirectGrouping"
      - $ref: "#/components/schemas/GroupingByMembers"
    GroupingOptions:
      type: "string"
      description: "The selected grouping option"
      enum:
      - "Company"
      - "CompanyNumbers"
      - "Users"
      - "Queues"
      - "IVRs"
      - "SharedLines"
      - "UserGroups"
      - "Sites"
      - "Departments"
    AggregationResponseOptionsCounters:
      type: "object"
      properties:
        allCalls:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of all calls count"
        callsByDirection:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by direction (Inbound, Outbound)"
        callsByOrigin:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by origin (Internal, External)"
        callsByResponse:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by response (Answered, NotAnswered,\
            \ Connected, NotConnected)"
        callsSegments:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by segments (Ringing, LiveTalk,\
            \ Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)"
        callsByResult:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by result (Completed, Abandoned,\
            \ Voicemail, Unknown, Missed, Accepted)"
        callsByCompanyHours:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by company hours (BusinessHours,\
            \ AfterHours)"
        callsByQueueSla:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by queue SLA (InSLA, OutSLA). This\
            \ counter is only applicable to Queues grouping"
        callsByActions:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by action (HoldOff, HoldOn, ParkOn,\
            \ ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)"
        callsByType:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls count by type (Direct, FromQueue, ParkRetrieval,\
            \ Transferred, Outbound)"
      description: "The formula is defined by `aggregationType` and `aggregationInterval`\
        \ for every counter individually.\nIf `aggregationType` is `Sum` or `Percent`,\
        \ `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`,\
        \ `Max` or `Average`, `aggregationInterval` is required"
    AggregationResponseOptionsTimers:
      type: "object"
      properties:
        allCallsDuration:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of all calls duration"
        callsDurationByDirection:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by direction (Inbound, Outbound)"
        callsDurationByOrigin:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by origin (Internal, External)"
        callsDurationByResponse:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by response (Answered, NotAnswered,\
            \ Connected, NotConnected)"
        callsSegmentsDuration:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by segments (Ringing, LiveTalk,\
            \ Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)"
        callsDurationByResult:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by result (Completed, Abandoned,\
            \ Voicemail, Unknown, Missed, Accepted)"
        callsDurationByCompanyHours:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by company hours (BusinessHours,\
            \ AfterHours)"
        callsDurationByQueueSla:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by queue SLA (InSLA, OutSLA).\
            \ This timer is only applicable to Queues grouping"
        callsDurationByType:
          required:
          - "aggregationType"
          type: "object"
          properties:
            aggregationType:
              $ref: "#/components/schemas/AggregationType"
            aggregationInterval:
              $ref: "#/components/schemas/AggregationInterval"
          description: "Aggregation of calls duration by type (Direct, FromQueue,\
            \ ParkRetrieval, Transferred, Outbound)"
      description: "The formula is defined by `aggregationType` and `aggregationInterval`\
        \ for every timer individually.\nIf `aggregationType` is `Sum` or `Percent`,\
        \ `aggregationInterval` is not supported.\nIf `aggregationType` is `Min`,\
        \ `Max` or `Average`, `aggregationInterval` is supported, but not required.\n\
        If left empty, aggregation will be performed on per-call basis"
    ValueType:
      type: "string"
      description: "Unit of the result value"
      enum:
      - "Percent"
      - "Seconds"
      - "Instances"
    TimeSpentFilter:
      type: "object"
      properties:
        minSeconds:
          type: "integer"
          description: "Minimum duration in seconds"
          format: "int64"
        maxSeconds:
          type: "integer"
          description: "Maximum duration in seconds"
          format: "int64"
      description: "Filtering of calls based on the time spent by specified mailbox(es)\
        \ on call"
    DayOfWeek:
      type: "string"
      enum:
      - "Sunday"
      - "Monday"
      - "Tuesday"
      - "Wednesday"
      - "Thursday"
      - "Friday"
      - "Saturday"
    CompanyHoursOptions:
      type: "string"
      enum:
      - "BusinessHours"
      - "AfterHours"
    AggregationResponse:
      required:
      - "paging"
      - "data"
      type: "object"
      properties:
        paging:
          $ref: "#/components/schemas/ResponsePaging"
        data:
          $ref: "#/components/schemas/AggregationResponseData"
    Direction:
      type: "string"
      enum:
      - "Inbound"
      - "Outbound"
    CallResponse:
      type: "string"
      enum:
      - "Answered"
      - "NotAnswered"
      - "Connected"
      - "NotConnected"
    CallsByOrigin:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByOriginBreakdown"
      description: "Data for calls with breakdown by origin (Internal, External)"
    Forbidden:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorBody"
          description: "List of errors"
    CallType:
      type: "string"
      enum:
      - "Direct"
      - "FromQueue"
      - "ParkRetrieval"
      - "Transferred"
      - "Outbound"
    CallFilters:
      type: "object"
      properties:
        extensionFilters:
          $ref: "#/components/schemas/ExtensionFilters"
        queues:
          type: "array"
          items:
            type: "string"
          description: "List of queues extension ids which allows to get data only\
            \ for calls that were routed through any of these queues"
        calledNumbers:
          type: "array"
          items:
            type: "string"
          description: "The direct company numbers the caller called (joined via OR)"
        directions:
          type: "array"
          items:
            $ref: "#/components/schemas/Direction"
          description: "Specifies the call directions relative to the scope specified\
            \ in grouping object (joined via OR). Not applicable to internal origin\
            \ calls with company scope"
        origins:
          type: "array"
          items:
            $ref: "#/components/schemas/Origin"
          description: "Specifies whether an external party was present in the initial\
            \ segment of the call (joined via OR)"
        callResponses:
          type: "array"
          items:
            $ref: "#/components/schemas/CallResponse"
          description: "Filtering of calls by first response (joined via OR)"
        callResults:
          type: "array"
          items:
            $ref: "#/components/schemas/CallResult"
          description: "Filtering of calls by the nature of call result (joined via\
            \ OR)"
        callSegments:
          type: "array"
          items:
            $ref: "#/components/schemas/CallSegmentFilter"
          description: "Filtering of calls by presence of specific segment (joined\
            \ via OR)"
        callActions:
          type: "array"
          items:
            $ref: "#/components/schemas/CallAction"
          description: "Filtering of calls by presence of specific action (joined\
            \ via OR)"
        companyHours:
          type: "array"
          items:
            $ref: "#/components/schemas/CompanyHoursOptions"
          description: "Filtering of calls by company's business hours or after hours\
            \ (joined via OR)"
        callDuration:
          $ref: "#/components/schemas/CallDurationFilter"
        timeSpent:
          $ref: "#/components/schemas/TimeSpentFilter"
        queueSla:
          type: "array"
          items:
            $ref: "#/components/schemas/QueueSlaOptions"
          description: "Filtering calls that were within or out of queue SLA (joined\
            \ via OR). Only applicable to Queues grouping"
        callTypes:
          type: "array"
          items:
            $ref: "#/components/schemas/CallType"
          description: "Filtering of calls based on how the call started from the\
            \ callee perspective (joined via OR). If the call is outbound relative\
            \ to the grouping scope, CallType is Outbound"
      description: "Optional filters that limit the scope of calls (joined via AND)"
    AggregationResponseOptions:
      type: "object"
      properties:
        counters:
          $ref: "#/components/schemas/AggregationResponseOptionsCounters"
        timers:
          $ref: "#/components/schemas/AggregationResponseOptionsTimers"
      description: "This field provides mapping of possible breakdown options for\
        \ call aggregation and aggregation formula"
    InternalError:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorBody"
          description: "List of errors"
    CallsByDirectionBreakdown:
      required:
      - "inbound"
      - "outbound"
      type: "object"
      properties:
        inbound:
          type: "number"
          description: "Value for Inbound direction"
          format: "double"
        outbound:
          type: "number"
          description: "Value for Outbound direction"
          format: "double"
      description: "Result breakdown by direction"
    AggregationRequest:
      required:
      - "grouping"
      - "timeSettings"
      - "responseOptions"
      type: "object"
      properties:
        grouping:
          $ref: "#/components/schemas/Grouping"
        timeSettings:
          $ref: "#/components/schemas/TimeSettings"
        callFilters:
          $ref: "#/components/schemas/CallFilters"
        responseOptions:
          $ref: "#/components/schemas/AggregationResponseOptions"
    CallSegmentLengthFilter:
      type: "object"
      properties:
        minSeconds:
          type: "integer"
          description: "Minimum duration of segment in seconds"
          format: "int64"
        maxSeconds:
          type: "integer"
          description: "Maximum duration of segment in seconds"
          format: "int64"
      description: "Duration bounds for the segment"
    CallsByQueueSla:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByQueueSlaBreakdown"
      description: "Data for calls with breakdown by queue SLA (InSLA, OutSLA). This\
        \ counter is only applicable to Queues grouping"
    HoursInterval:
      required:
      - "from"
      - "to"
      type: "object"
      properties:
        from:
          type: "string"
          description: "Time in format hh:mm"
        to:
          type: "string"
          description: "Time in format hh:mm"
    AggregationResponseData:
      required:
      - "groupedBy"
      type: "object"
      properties:
        groupedBy:
          $ref: "#/components/schemas/GroupingOptions"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/AggregationResponseRecord"
          description: "A list of call aggregations as per the grouping and filtering\
            \ options specified in the request"
      description: "Aggregation result"
    ResponsePaging:
      required:
      - "page"
      - "perPage"
      - "totalPages"
      - "totalElements"
      type: "object"
      properties:
        page:
          type: "integer"
          description: "The current page number"
          format: "int64"
        perPage:
          type: "integer"
          description: "How many items are displayed on the page"
          format: "int64"
        totalPages:
          type: "integer"
          description: "The total number of pages"
          format: "int64"
        totalElements:
          type: "integer"
          description: "The total number of items in the dataset"
          format: "int64"
      description: "Paging information"
    CallAction:
      type: "string"
      enum:
      - "HoldOff"
      - "HoldOn"
      - "ParkOn"
      - "ParkOff"
      - "BlindTransfer"
      - "WarmTransfer"
      - "DTMFTransfer"
    CallsByActionsBreakdown:
      required:
      - "parkOn"
      - "parkOff"
      - "holdOn"
      - "holdOff"
      - "blindTransfer"
      - "warmTransfer"
      - "dtmfTransfer"
      type: "object"
      properties:
        parkOn:
          type: "number"
          description: "Value for ParkOn action"
          format: "double"
        parkOff:
          type: "number"
          description: "Value for ParkOff action"
          format: "double"
        holdOn:
          type: "number"
          description: "Value for HoldOn action"
          format: "double"
        holdOff:
          type: "number"
          description: "Value for HoldOff action"
          format: "double"
        blindTransfer:
          type: "number"
          description: "Value for BlindTransfer action"
          format: "double"
        warmTransfer:
          type: "number"
          description: "Value for WarmTransfer action"
          format: "double"
        dtmfTransfer:
          type: "number"
          description: "Value for DTMFTransfer action"
          format: "double"
      description: "Result breakdown by actions"
    ExtensionFilters:
      type: "object"
      properties:
        fromIds:
          type: "array"
          items:
            type: "string"
          description: "List of extension ids to match against incoming calls, joined\
            \ via OR condition. Only applicable for `groupByMembers` options and Users,\
            \ IVRs, SharedLines and Queues in `groupBy`"
        toIds:
          type: "array"
          items:
            type: "string"
          description: "List of extension ids to match against outgoing calls, joined\
            \ via OR condition. Limited to the extension id that first accepted the\
            \ call. Only applicable for `groupByMembers` options and Users, IVRs and\
            \ SharedLines in `groupBy`"
      description: "Specifies filtering based on extension ids"
    CallsByResponseBreakdown:
      required:
      - "answered"
      - "notAnswered"
      - "connected"
      - "notConnected"
      type: "object"
      properties:
        answered:
          type: "number"
          description: "Value for Answered response"
          format: "double"
        notAnswered:
          type: "number"
          description: "Value for NotAnswered response"
          format: "double"
        connected:
          type: "number"
          description: "Value for Connected response"
          format: "double"
        notConnected:
          type: "number"
          description: "Value for NotConnected response"
          format: "double"
      description: "Result breakdown by response"
    BadRequest:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorBody"
          description: "List of errors"
    CallSegmentOptions:
      type: "string"
      description: "Call segment for filtering"
      enum:
      - "Ringing"
      - "LiveTalk"
      - "Hold"
      - "Park"
      - "Transfer"
      - "IvrPrompt"
      - "Voicemail"
      - "VmGreeting"
      - "Setup"
    CallSegmentFilter:
      required:
      - "segment"
      type: "object"
      properties:
        segment:
          $ref: "#/components/schemas/CallSegmentOptions"
        length:
          $ref: "#/components/schemas/CallSegmentLengthFilter"
    GroupingByMembers:
      required:
      - "groupByMembers"
      type: "object"
      properties:
        groupByMembers:
          $ref: "#/components/schemas/MembersGroupingOptions"
        keys:
          type: "array"
          items:
            type: "string"
          description: "This field can be used to further limit the users selection\
            \ by specifying unique identifiers of corresponding entities. For example,\
            \ providing unique queue ids along with `Queue` in `groupByMembers` field\
            \ will limit the response to users that are queue agents in at least one\
            \ of these queues"
      description: "This grouping allows to specify the `groupByMembers` option. The\
        \ response data will be grouped by users and will only include users that\
        \ belong to the scope selected in `groupByMembers` field"
    MembersGroupingOptions:
      type: "string"
      description: "The selected data scope"
      enum:
      - "Department"
      - "UserGroup"
      - "Queue"
      - "Site"
    CallsByResultBreakdown:
      required:
      - "completed"
      - "abandoned"
      - "voicemail"
      - "missed"
      - "accepted"
      - "unknown"
      type: "object"
      properties:
        completed:
          type: "number"
          description: "Value for Completed result"
          format: "double"
        abandoned:
          type: "number"
          description: "Value for Abandoned result"
          format: "double"
        voicemail:
          type: "number"
          description: "Value for Voicemail result"
          format: "double"
        missed:
          type: "number"
          description: "Value for Missed result"
          format: "double"
        accepted:
          type: "number"
          description: "Value for Accepted result"
          format: "double"
        unknown:
          type: "number"
          description: "Value for Unknown result"
          format: "double"
      description: "Result breakdown by call result"
    CallsByCompanyHours:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByCompanyHoursBreakdown"
      description: "Data for calls with breakdown by company hours (BusinessHours,\
        \ AfterHours)"
    CallsByCompanyHoursBreakdown:
      required:
      - "businessHours"
      - "afterHours"
      type: "object"
      properties:
        businessHours:
          type: "number"
          description: "Value for BusinessHours company hours"
          format: "double"
        afterHours:
          type: "number"
          description: "Value for AfterHours company hours"
          format: "double"
      description: "Result breakdown by company hours"
    CallDurationFilter:
      type: "object"
      properties:
        minSeconds:
          type: "integer"
          description: "Minimum duration of call in seconds"
          format: "int64"
        maxSeconds:
          type: "integer"
          description: "Maximum duration of call in seconds"
          format: "int64"
      description: "Filtering of calls based on the overall call length"
    CallsByQueueSlaBreakdown:
      required:
      - "inSla"
      - "outOfSla"
      type: "object"
      properties:
        inSla:
          type: "number"
          description: "Value for InSla queue SLA"
          format: "double"
        outOfSla:
          type: "number"
          description: "Value for OutSla queue SLA"
          format: "double"
      description: "Result breakdown by queue SLA"
    CallsBySegments:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsBySegmentsBreakdown"
      description: "Data for calls with breakdown by segments (Ringing, LiveTalk,\
        \ Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)"
    CallsByTypeBreakdown:
      required:
      - "direct"
      - "fromQueue"
      - "parkRetrieval"
      - "transferred"
      - "outbound"
      type: "object"
      properties:
        direct:
          type: "number"
          description: "Value for Direct type"
          format: "double"
        fromQueue:
          type: "number"
          description: "Value for FromQueue type"
          format: "double"
        parkRetrieval:
          type: "number"
          description: "Value for ParkRetrieval type"
          format: "double"
        transferred:
          type: "number"
          description: "Value for Transferred type"
          format: "double"
        outbound:
          type: "number"
          description: "Value for Outbound type"
          format: "double"
      description: "Result breakdown by type"
    CallsByType:
      required:
      - "valueType"
      - "values"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
        values:
          $ref: "#/components/schemas/CallsByTypeBreakdown"
      description: "Data for calls with breakdown by type (Direct, FromQueue, ParkRetrieval,\
        \ Transferred, Outbound)"
    CallsBySegmentsBreakdown:
      required:
      - "ringing"
      - "liveTalk"
      - "hold"
      - "park"
      - "transfer"
      - "ivrPrompt"
      - "voicemail"
      - "vmGreeting"
      - "setup"
      type: "object"
      properties:
        ringing:
          type: "number"
          description: "Value for Ringing segment"
          format: "double"
        liveTalk:
          type: "number"
          description: "Value for LiveTalk segment"
          format: "double"
        hold:
          type: "number"
          description: "Value for Hold segment"
          format: "double"
        park:
          type: "number"
          description: "Value for Park segment"
          format: "double"
        transfer:
          type: "number"
          description: "Value for Transfer segment"
          format: "double"
        ivrPrompt:
          type: "number"
          description: "Value for IVRPrompt segment"
          format: "double"
        voicemail:
          type: "number"
          description: "Value for Voicemail segment"
          format: "double"
        vmGreeting:
          type: "number"
          description: "Value for VMGreeting segment"
          format: "double"
        setup:
          type: "number"
          description: "Value for Setup segment"
          format: "double"
      description: "Result breakdown by segments"
    AggregationResponseRecord:
      required:
      - "key"
      type: "object"
      properties:
        key:
          type: "string"
          description: "Grouping key"
        info:
          $ref: "#/components/schemas/KeyInfo"
        timers:
          $ref: "#/components/schemas/CallsTimers"
        counters:
          $ref: "#/components/schemas/CallsCounters"
    ErrorBody:
      required:
      - "errorCode"
      - "message"
      type: "object"
      properties:
        errorCode:
          type: "string"
          description: "ANL error code"
        message:
          type: "string"
          description: "Detailed description of the error"
    KeyInfo:
      type: "object"
      properties:
        extensionNumber:
          type: "string"
          description: "Extension's number"
        name:
          type: "string"
          description: "Extension's name"
      description: "Additional info about the key"
    CallsTimers:
      type: "object"
      properties:
        allCalls:
          $ref: "#/components/schemas/AllCalls"
        callsByDirection:
          $ref: "#/components/schemas/CallsByDirection"
        callsByOrigin:
          $ref: "#/components/schemas/CallsByOrigin"
        callsByResponse:
          $ref: "#/components/schemas/CallsByResponse"
        callsSegments:
          $ref: "#/components/schemas/CallsBySegments"
        callsByResult:
          $ref: "#/components/schemas/CallsByResult"
        callsByCompanyHours:
          $ref: "#/components/schemas/CallsByCompanyHours"
        callsByQueueSla:
          $ref: "#/components/schemas/CallsByQueueSla"
        callsByType:
          $ref: "#/components/schemas/CallsByType"
      description: "Call length data for the specified grouping"
    TimeRange:
      required:
      - "timeFrom"
      - "timeTo"
      type: "object"
      properties:
        timeFrom:
          type: "string"
          description: "The start date-time for resulting records in RFC 3339 format\
            \ including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z"
          format: "date-time"
        timeTo:
          type: "string"
          description: "The end date-time for resulting records in RFC 3339 format\
            \ including offset between local time and UTC, for example 2016-03-15T18:07:52.534Z"
          format: "date-time"
      description: "Time range for the request"
    TimelineResponsePoint:
      required:
      - "time"
      type: "object"
      properties:
        time:
          type: "string"
          description: "Time point in RFC 3339 format"
          format: "date-time"
        timers:
          $ref: "#/components/schemas/CallsTimers"
        counters:
          $ref: "#/components/schemas/CallsCounters"
    TimelineResponse:
      required:
      - "paging"
      - "data"
      type: "object"
      properties:
        paging:
          $ref: "#/components/schemas/ResponsePaging"
        data:
          $ref: "#/components/schemas/TimelineResponseData"
    Interval:
      type: "string"
      enum:
      - "Hour"
      - "Day"
      - "Week"
      - "Month"
    TimelineResponseOptions:
      type: "object"
      properties:
        counters:
          $ref: "#/components/schemas/TimelineResponseOptionsCounters"
        timers:
          $ref: "#/components/schemas/TimelineResponseOptionsTimers"
      description: "Counters and timers options for calls breakdown"
    TimelineResponseOptionsTimers:
      type: "object"
      properties:
        allCallsDuration:
          type: "boolean"
          description: "Include data for all calls duration"
        callsDurationByDirection:
          type: "boolean"
          description: "Include breakdown of calls duration by direction (Inbound,\
            \ Outbound)"
        callsDurationByOrigin:
          type: "boolean"
          description: "Include breakdown of calls duration by origin (Internal, External)"
        callsDurationByResponse:
          type: "boolean"
          description: "Include breakdown of calls duration by response (Answered,\
            \ NotAnswered, Connected, NotConnected)"
        callsSegmentsDuration:
          type: "boolean"
          description: "Include breakdown of calls duration by segments (Ringing,\
            \ LiveTalk, Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup) "
        callsDurationByResult:
          type: "boolean"
          description: "Include breakdown of calls duration by result (Completed,\
            \ Abandoned, Voicemail, Unknown, Missed, Accepted)"
        callsDurationByCompanyHours:
          type: "boolean"
          description: "Include breakdown of calls duration by company hours (BusinessHours,\
            \ AfterHours)"
        callsDurationByQueueSla:
          type: "boolean"
          description: "Include breakdown of calls duration by queue SLA (InSLA, OutSLA).\
            \ This timer is only applicable to Queues grouping"
        callsDurationByType:
          type: "boolean"
          description: "Include breakdown of calls duration by type (Direct, FromQueue,\
            \ ParkRetrieval, Transferred, Outbound)"
      description: "Options for selecting breakdown for calls duration"
    TimelineResponseRecord:
      required:
      - "key"
      type: "object"
      properties:
        key:
          type: "string"
          description: "Grouping key"
        info:
          $ref: "#/components/schemas/KeyInfo"
        points:
          type: "array"
          items:
            $ref: "#/components/schemas/TimelineResponsePoint"
          description: "List of requested call data time-value points"
    TimelineResponseOptionsCounters:
      type: "object"
      properties:
        allCalls:
          type: "boolean"
          description: "Include data for total calls count"
        callsByDirection:
          type: "boolean"
          description: "Include breakdown of calls count by direction (Inbound, Outbound)"
        callsByOrigin:
          type: "boolean"
          description: "Include breakdown of calls count by origin (Internal, External)"
        callsByResponse:
          type: "boolean"
          description: "Include breakdown of calls count by response (Answered, NotAnswered,\
            \ Connected, NotConnected)"
        callsSegments:
          type: "boolean"
          description: "Include breakdown of calls count by segments (Ringing, LiveTalk,\
            \ Hold, Park, Transfer, IvrPrompt, Voicemail, VmGreeting, Setup)"
        callsByResult:
          type: "boolean"
          description: "Include breakdown of calls count by result (Completed, Abandoned,\
            \ Voicemail, Unknown, Missed, Accepted)"
        callsByCompanyHours:
          type: "boolean"
          description: "Include breakdown of calls count by company hours (BusinessHours,\
            \ AfterHours)"
        callsByQueueSla:
          type: "boolean"
          description: "Include breakdown of calls count by queue SLA (InSLA, OutSLA).\
            \ This counter is only applicable to Queues grouping"
        callsByActions:
          type: "boolean"
          description: "Include breakdown of calls count by action (HoldOff, HoldOn,\
            \ ParkOn, ParkOff, BlindTransfer, WarmTransfer, DTMFTransfer)"
        callsByType:
          type: "boolean"
          description: "Include breakdown of calls count by type (Direct, FromQueue,\
            \ ParkRetrieval, Transferred, Outbound)"
      description: "Options for selecting breakdown for calls count"
    TimelineRequest:
      required:
      - "grouping"
      - "timeSettings"
      - "responseOptions"
      type: "object"
      properties:
        grouping:
          $ref: "#/components/schemas/Grouping"
        timeSettings:
          $ref: "#/components/schemas/TimeSettings"
        callFilters:
          $ref: "#/components/schemas/CallFilters"
        responseOptions:
          $ref: "#/components/schemas/TimelineResponseOptions"
    TimelineResponseData:
      required:
      - "groupedBy"
      type: "object"
      properties:
        groupedBy:
          $ref: "#/components/schemas/GroupingOptions"
        records:
          type: "array"
          items:
            $ref: "#/components/schemas/TimelineResponseRecord"
          description: "List of call data as per the grouping and filtering options\
            \ specified in the request"
      description: "A list of time-value points of call data as per the grouping and\
        \ filtering options specified in the request"
  parameters:
    SmsDirection:
      name: "direction"
      in: "query"
      required: false
      description: "Direction of a message to filter the message list result. By default\
        \ there is no filter applied - both Inbound and Outbound messages are returned"
      schema:
        $ref: "#/components/schemas/SmsDirectionEnum"
      example: "Inbound"
    QueryBatchId:
      name: "batchId"
      in: "query"
      required: false
      description: "Internal identifier of a message batch to filter the response"
      example: "55577"
      schema:
        type: "string"
    SmsDateTo:
      name: "dateTo"
      in: "query"
      required: false
      description: "The end of the time range to filter the results in ISO 8601 format\
        \ including timezone. Default is the current time"
      schema:
        type: "string"
        format: "date-time"
      example: "2020-11-25T16:07:52.597Z"
    SmsDateFrom:
      name: "dateFrom"
      in: "query"
      required: false
      description: "The end of the time range to filter the results in ISO 8601 format\
        \ including timezone. Default is the 'dateTo' minus 24 hours"
      schema:
        type: "string"
        format: "date-time"
      example: "2020-11-09T16:07:52.597Z"
    AccountId:
      name: "accountId"
      in: "path"
      required: true
      description: "Internal identifier of a RingCentral account or tilde (~) to indicate\
        \ the account logged-in within the current session"
      schema:
        type: "string"
    BatchId:
      name: "batchId"
      in: "path"
      required: true
      description: "Internal identifier of a message batch to be retrieved"
      example: "55577"
      schema:
        type: "string"
    TaskId:
      name: "taskId"
      in: "path"
      description: "Internal identifier of a task"
      required: true
      schema:
        type: "string"
      example: "400142200026-400142200026-bd162f24028442489385eb3f44c18354"
    ArchiveId:
      name: "archiveId"
      in: "path"
      description: "Internal identifier of an archive volume to download"
      required: true
      schema:
        type: "string"
      example: "987654"
    SubscriptionId:
      name: "subscriptionId"
      in: "path"
      description: "Internal identifier of a subscription"
      required: true
      schema:
        type: "string"
        minLength: 1
        maxLength: 20
      example: "12345678"
  responses:
    InvalidRequest:
      description: "Bad request, path, query or body parameters are invalid (HTTP\
        \ 400)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResource"
    ServiceNotAvailable:
      description: "Service not available(HTTP 503)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResource"
    InternalError:
      description: "Internal service error (HTTP 500)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResource"
